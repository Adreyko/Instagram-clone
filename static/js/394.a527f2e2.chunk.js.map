{"version":3,"file":"static/js/394.a527f2e2.chunk.js","mappings":"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","sources":["../node_modules/clsx/dist/clsx.m.js","../node_modules/emoji-picker-react/src/DomUtils/classNames.ts","../node_modules/emoji-picker-react/src/DomUtils/focusElement.ts","../node_modules/emoji-picker-react/src/components/context/ElementRefContext.tsx","../node_modules/emoji-picker-react/src/types/exposedTypes.ts","../node_modules/emoji-picker-react/src/dataUtils/emojiSelectors.ts","../node_modules/emoji-picker-react/src/data/skinToneVariations.ts","../node_modules/emoji-picker-react/src/config/cdnUrls.ts","../node_modules/emoji-picker-react/src/config/categoryConfig.ts","../node_modules/emoji-picker-react/src/config/config.ts","../node_modules/emoji-picker-react/src/components/context/PickerConfigContext.tsx","../node_modules/emoji-picker-react/src/config/useConfig.ts","../node_modules/emoji-picker-react/src/DomUtils/isDarkTheme.ts","../node_modules/emoji-picker-react/src/dataUtils/alphaNumericEmojiIndex.ts","../node_modules/emoji-picker-react/src/hooks/useDebouncedState.ts","../node_modules/emoji-picker-react/src/hooks/useDisallowedEmojis.ts","../node_modules/emoji-picker-react/src/components/context/PickerContext.tsx","../node_modules/emoji-picker-react/src/hooks/useInitialLoad.ts","../node_modules/emoji-picker-react/src/hooks/useDisallowMouseMove.ts","../node_modules/emoji-picker-react/src/DomUtils/elementPositionInRow.ts","../node_modules/emoji-picker-react/src/DomUtils/selectors.ts","../node_modules/emoji-picker-react/src/dataUtils/parseNativeEmoji.ts","../node_modules/emoji-picker-react/src/dataUtils/suggested.ts","../node_modules/emoji-picker-react/src/hooks/useCloseAllOpenToggles.ts","../node_modules/emoji-picker-react/src/hooks/useSetVariationPicker.ts","../node_modules/emoji-picker-react/src/hooks/useMouseDownHandlers.ts","../node_modules/emoji-picker-react/src/DomUtils/scrollTo.ts","../node_modules/emoji-picker-react/src/hooks/useFocus.ts","../node_modules/emoji-picker-react/src/hooks/useFilter.ts","../node_modules/emoji-picker-react/src/hooks/useIsEmojiHidden.ts","../node_modules/emoji-picker-react/src/components/atoms/Button.tsx","../node_modules/emoji-picker-react/node_modules/style-inject/dist/style-inject.es.js","../node_modules/emoji-picker-react/src/components/emoji/Emoji.tsx","../node_modules/emoji-picker-react/src/components/body/EmojiCategory.tsx","../node_modules/emoji-picker-react/src/components/body/Suggested.tsx","../node_modules/emoji-picker-react/src/components/body/EmojiList.tsx","../node_modules/emoji-picker-react/src/DomUtils/keyboardNavigation.ts","../node_modules/emoji-picker-react/src/components/body/EmojiVariationPicker.tsx","../node_modules/emoji-picker-react/src/components/body/Body.tsx","../node_modules/emoji-picker-react/src/hooks/useOnScroll.ts","../node_modules/emoji-picker-react/src/hooks/useShouldShowSkinTonePicker.ts","../node_modules/emoji-picker-react/src/components/Layout/Flex.tsx","../node_modules/emoji-picker-react/src/components/Layout/Space.tsx","../node_modules/emoji-picker-react/src/components/Layout/Absolute.tsx","../node_modules/emoji-picker-react/src/components/Layout/Relative.tsx","../node_modules/emoji-picker-react/src/components/header/SkinTonePicker.tsx","../node_modules/emoji-picker-react/src/components/footer/Preview.tsx","../node_modules/emoji-picker-react/src/hooks/useEmojiPreviewEvents.ts","../node_modules/emoji-picker-react/src/DomUtils/categoryNameFromDom.ts","../node_modules/emoji-picker-react/src/hooks/useIsSearchMode.ts","../node_modules/emoji-picker-react/src/components/navigation/CategoryNavigation.tsx","../node_modules/emoji-picker-react/src/hooks/useScrollCategoryIntoView.ts","../node_modules/emoji-picker-react/src/hooks/useActiveCategoryScrollDetection.ts","../node_modules/emoji-picker-react/src/components/header/Search.tsx","../node_modules/emoji-picker-react/src/hooks/useKeyboardNavigation.ts","../node_modules/emoji-picker-react/src/components/header/Header.tsx","../node_modules/emoji-picker-react/src/DomUtils/getActiveElement.ts","../node_modules/emoji-picker-react/src/hooks/preloadEmoji.ts","../node_modules/emoji-picker-react/src/components/main/PickerMain.tsx","../node_modules/emoji-picker-react/src/hooks/useOnFocus.ts","../node_modules/emoji-picker-react/src/EmojiPickerReact.tsx","../node_modules/emoji-picker-react/src/components/ErrorBoundary.tsx","../node_modules/emoji-picker-react/src/index.tsx","../node_modules/react-router-hash-link/node_modules/tslib/tslib.es6.js","../node_modules/react-router-hash-link/src/HashLink.jsx"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","export enum ClassNames {\n  hiddenOnSearch = 'epr-hidden-on-search',\n  searchActive = 'epr-search-active',\n  hidden = 'epr-hidden',\n  visible = 'epr-visible',\n  active = 'epr-active',\n  emoji = 'epr-emoji',\n  category = 'epr-emoji-category',\n  label = 'epr-emoji-category-label',\n  categoryContent = 'epr-emoji-category-content',\n  emojiHasVariatios = 'epr-emoji-has-variations',\n  scrollBody = 'epr-body',\n  emojiList = 'epr-emoji-list',\n  external = '__EmojiPicker__',\n  emojiPicker = 'EmojiPickerReact',\n  open = 'epr-open',\n  vertical = 'epr-vertical',\n  horizontal = 'epr-horizontal',\n  variationPicker = 'epr-emoji-variation-picker'\n}\n\nexport function asSelectors(...classNames: ClassNames[]): string {\n  return classNames.map(c => `.${c}`).join('');\n}\n","import { NullableElement } from './selectors';\n\nexport function focusElement(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    element.focus();\n  });\n}\n\nexport function focusPrevElementSibling(element: NullableElement) {\n  if (!element) return;\n\n  const prev = element.previousElementSibling as HTMLElement;\n\n  focusElement(prev);\n}\n\nexport function focusNextElementSibling(element: NullableElement) {\n  if (!element) return;\n\n  const next = element.nextElementSibling as HTMLElement;\n\n  focusElement(next);\n}\n\nexport function focusFirstElementChild(element: NullableElement) {\n  if (!element) return;\n\n  const first = element.firstElementChild as HTMLElement;\n\n  focusElement(first);\n}\n","import * as React from 'react';\n\nimport { focusElement } from '../../DomUtils/focusElement';\nimport { NullableElement } from '../../DomUtils/selectors';\n\nexport function ElementRefContextProvider({\n  children\n}: {\n  children: React.ReactNode;\n}) {\n  const PickerMainRef = React.useRef<HTMLElement>(null);\n  const AnchoredEmojiRef = React.useRef<HTMLElement>(null);\n  const BodyRef = React.useRef<HTMLDivElement>(null);\n  const SearchInputRef = React.useRef<HTMLInputElement>(null);\n  const SkinTonePickerRef = React.useRef<HTMLDivElement>(null);\n  const CategoryNavigationRef = React.useRef<HTMLDivElement>(null);\n  const VariationPickerRef = React.useRef<HTMLDivElement>(null);\n\n  return (\n    <ElementRefContext.Provider\n      value={{\n        AnchoredEmojiRef,\n        BodyRef,\n        CategoryNavigationRef,\n        PickerMainRef,\n        SearchInputRef,\n        SkinTonePickerRef,\n        VariationPickerRef\n      }}\n    >\n      {children}\n    </ElementRefContext.Provider>\n  );\n}\n\nexport type ElementRef<\n  E extends HTMLElement = HTMLElement\n> = React.MutableRefObject<E | null>;\n\ntype ElementRefs = {\n  PickerMainRef: ElementRef;\n  AnchoredEmojiRef: ElementRef;\n  SkinTonePickerRef: ElementRef<HTMLDivElement>;\n  SearchInputRef: ElementRef<HTMLInputElement>;\n  BodyRef: ElementRef<HTMLDivElement>;\n  CategoryNavigationRef: ElementRef<HTMLDivElement>;\n  VariationPickerRef: ElementRef<HTMLDivElement>;\n};\n\nconst ElementRefContext = React.createContext<ElementRefs>({\n  AnchoredEmojiRef: React.createRef(),\n  BodyRef: React.createRef(),\n  CategoryNavigationRef: React.createRef(),\n  PickerMainRef: React.createRef(),\n  SearchInputRef: React.createRef(),\n  SkinTonePickerRef: React.createRef(),\n  VariationPickerRef: React.createRef()\n});\n\nfunction useElementRef() {\n  return React.useContext(ElementRefContext);\n}\n\nexport function usePickerMainRef() {\n  return useElementRef()['PickerMainRef'];\n}\n\nexport function useAnchoredEmojiRef() {\n  return useElementRef()['AnchoredEmojiRef'];\n}\n\nexport function useSetAnchoredEmojiRef(): (target: NullableElement) => void {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  return (target: NullableElement) => {\n    if (target === null && AnchoredEmojiRef.current !== null) {\n      focusElement(AnchoredEmojiRef.current);\n    }\n\n    AnchoredEmojiRef.current = target;\n  };\n}\n\nexport function useBodyRef() {\n  return useElementRef()['BodyRef'];\n}\n\nexport function useSearchInputRef() {\n  return useElementRef()['SearchInputRef'];\n}\n\nexport function useSkinTonePickerRef() {\n  return useElementRef()['SkinTonePickerRef'];\n}\n\nexport function useCategoryNavigationRef() {\n  return useElementRef()['CategoryNavigationRef'];\n}\n\nexport function useVariationPickerRef() {\n  return useElementRef()['VariationPickerRef'];\n}\n","export type EmojiClickData = {\n  activeSkinTone: SkinTones;\n  unified: string;\n  unifiedWithoutSkinTone: string;\n  emoji: string;\n  names: string[];\n  getImageUrl: (emojiStyle: EmojiStyle) => string;\n};\n\nexport enum SuggestionMode {\n  RECENT = 'recent',\n  FREQUENT = 'frequent'\n}\n\nexport enum EmojiStyle {\n  NATIVE = 'native',\n  APPLE = 'apple',\n  TWITTER = 'twitter',\n  GOOGLE = 'google',\n  FACEBOOK = 'facebook'\n}\n\nexport enum Theme {\n  DARK = 'dark',\n  LIGHT = 'light',\n  AUTO = 'auto'\n}\n\nexport enum SkinTones {\n  NEUTRAL = 'neutral',\n  LIGHT = '1f3fb',\n  MEDIUM_LIGHT = '1f3fc',\n  MEDIUM = '1f3fd',\n  MEDIUM_DARK = '1f3fe',\n  DARK = '1f3ff'\n}\n\nexport enum Categories {\n  SUGGESTED = 'suggested',\n  SMILEYS_PEOPLE = 'smileys_people',\n  ANIMALS_NATURE = 'animals_nature',\n  FOOD_DRINK = 'food_drink',\n  TRAVEL_PLACES = 'travel_places',\n  ACTIVITIES = 'activities',\n  OBJECTS = 'objects',\n  SYMBOLS = 'symbols',\n  FLAGS = 'flags'\n}\n\nexport enum SkinTonePickerLocation {\n  SEARCH = 'SEARCH',\n  PREVIEW = 'PREVIEW'\n}\n","import { Categories } from '../config/categoryConfig';\nimport { cdnUrl } from '../config/cdnUrls';\nimport emojis from '../data/emojis';\nimport skinToneVariations, {\n  skinTonesMapped\n} from '../data/skinToneVariations';\nimport { EmojiStyle, SkinTones } from '../types/exposedTypes';\n\nimport { DataEmoji, DataEmojis } from './DataTypes';\n\nenum EmojiProperties {\n  name = 'n',\n  unified = 'u',\n  variations = 'v',\n  added_in = 'a'\n}\n\nexport function emojiNames(emoji: DataEmoji): string[] {\n  return emoji[EmojiProperties.name] ?? [];\n}\n\nexport function addedIn(emoji: DataEmoji): number {\n  return parseFloat(emoji[EmojiProperties.added_in]);\n}\n\nexport function emojiName(emoji?: DataEmoji): string {\n  if (!emoji) {\n    return '';\n  }\n\n  return emojiNames(emoji)[0];\n}\n\nexport function unifiedWithoutSkinTone(unified: string): string {\n  const splat = unified.split('-');\n  const [skinTone] = splat.splice(1, 1);\n\n  if (skinTonesMapped[skinTone]) {\n    return splat.join('-');\n  }\n\n  return unified;\n}\n\nexport function emojiUnified(emoji: DataEmoji, skinTone?: string): string {\n  const unified = emoji[EmojiProperties.unified];\n\n  if (!skinTone || !emojiHasVariations(emoji)) {\n    return unified;\n  }\n\n  return emojiVariationUnified(emoji, skinTone) ?? unified;\n}\n\nexport function emojisByCategory(category: Categories): DataEmojis {\n  // @ts-ignore\n  return emojis?.[category] ?? [];\n}\n\n// WARNING: DO NOT USE DIRECTLY\nexport function emojiUrlByUnified(\n  unified: string,\n  emojiStyle: EmojiStyle\n): string {\n  return `${cdnUrl(emojiStyle)}${unified}.png`;\n}\n\nexport function emojiVariations(emoji: DataEmoji): string[] {\n  return emoji[EmojiProperties.variations] ?? [];\n}\n\nexport function emojiHasVariations(emoji: DataEmoji): boolean {\n  return emojiVariations(emoji).length > 0;\n}\n\nexport function emojiVariationUnified(\n  emoji: DataEmoji,\n  skinTone?: string\n): string | undefined {\n  return skinTone\n    ? emojiVariations(emoji).find(variation => variation.includes(skinTone))\n    : emojiUnified(emoji);\n}\n\nexport function emojiByUnified(unified?: string): DataEmoji | undefined {\n  if (!unified) {\n    return;\n  }\n\n  if (allEmojisByUnified[unified]) {\n    return allEmojisByUnified[unified];\n  }\n\n  const withoutSkinTone = unifiedWithoutSkinTone(unified);\n  return allEmojisByUnified[withoutSkinTone];\n}\n\nexport const allEmojis: DataEmojis = Object.values(emojis).flat();\n\nconst allEmojisByUnified: {\n  [unified: string]: DataEmoji;\n} = {};\n\nsetTimeout(() => {\n  allEmojis.reduce((allEmojis, Emoji) => {\n    allEmojis[emojiUnified(Emoji)] = Emoji;\n    return allEmojis;\n  }, allEmojisByUnified);\n});\n\nexport function activeVariationFromUnified(unified: string): SkinTones | null {\n  const [, suspectedSkinTone] = unified.split('-') as [string, SkinTones];\n  return skinToneVariations.includes(suspectedSkinTone)\n    ? suspectedSkinTone\n    : null;\n}\n","import { SkinTones } from '../types/exposedTypes';\n\nconst skinToneVariations = [\n  SkinTones.NEUTRAL,\n  SkinTones.LIGHT,\n  SkinTones.MEDIUM_LIGHT,\n  SkinTones.MEDIUM,\n  SkinTones.MEDIUM_DARK,\n  SkinTones.DARK\n];\n\nexport const skinTonesNamed = Object.entries(SkinTones).reduce(\n  (acc, [key, value]) => {\n    acc[value] = key;\n    return acc;\n  },\n  {} as Record<string, string>\n);\n\nexport const skinTonesMapped: Record<\n  string,\n  string\n> = skinToneVariations.reduce(\n  (mapped, skinTone) =>\n    Object.assign(mapped, {\n      [skinTone]: skinTone\n    }),\n  {}\n);\n\nexport default skinToneVariations;\n","import { EmojiStyle } from '../types/exposedTypes';\n\nconst CDN_URL_APPLE =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-apple/img/apple/64/';\nconst CDN_URL_FACEBOOK =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-facebook/img/facebook/64/';\nconst CDN_URL_TWITTER =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-twitter/img/twitter/64/';\nconst CDN_URL_GOOGLE =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-google/img/google/64/';\n\nexport function cdnUrl(emojiStyle: EmojiStyle): string {\n  switch (emojiStyle) {\n    case EmojiStyle.TWITTER:\n      return CDN_URL_TWITTER;\n    case EmojiStyle.GOOGLE:\n      return CDN_URL_GOOGLE;\n    case EmojiStyle.FACEBOOK:\n      return CDN_URL_FACEBOOK;\n    case EmojiStyle.APPLE:\n    default:\n      return CDN_URL_APPLE;\n  }\n}\n","import { Categories, SuggestionMode } from '../types/exposedTypes';\n\nexport { Categories };\n\nconst categoriesOrdered: Categories[] = [\n  Categories.SUGGESTED,\n  Categories.SMILEYS_PEOPLE,\n  Categories.ANIMALS_NATURE,\n  Categories.FOOD_DRINK,\n  Categories.TRAVEL_PLACES,\n  Categories.ACTIVITIES,\n  Categories.OBJECTS,\n  Categories.SYMBOLS,\n  Categories.FLAGS\n];\n\nexport const SuggestedRecent: CategoryConfig = {\n  name: 'Recently Used',\n  category: Categories.SUGGESTED\n};\n\nconst configByCategory: Record<Categories, CategoryConfig> = {\n  [Categories.SUGGESTED]: {\n    category: Categories.SUGGESTED,\n    name: 'Frequently Used'\n  },\n  [Categories.SMILEYS_PEOPLE]: {\n    category: Categories.SMILEYS_PEOPLE,\n    name: 'Smileys & People'\n  },\n  [Categories.ANIMALS_NATURE]: {\n    category: Categories.ANIMALS_NATURE,\n    name: 'Animals & Nature'\n  },\n  [Categories.FOOD_DRINK]: {\n    category: Categories.FOOD_DRINK,\n    name: 'Food & Drink'\n  },\n  [Categories.TRAVEL_PLACES]: {\n    category: Categories.TRAVEL_PLACES,\n    name: 'Travel & Places'\n  },\n  [Categories.ACTIVITIES]: {\n    category: Categories.ACTIVITIES,\n    name: 'Activities'\n  },\n  [Categories.OBJECTS]: {\n    category: Categories.OBJECTS,\n    name: 'Objects'\n  },\n  [Categories.SYMBOLS]: {\n    category: Categories.SYMBOLS,\n    name: 'Symbols'\n  },\n  [Categories.FLAGS]: {\n    category: Categories.FLAGS,\n    name: 'Flags'\n  }\n};\n\nexport function baseCategoriesConfig(\n  modifiers?: Record<Categories, CategoryConfig>\n): CategoriesConfig {\n  return categoriesOrdered.map(category => {\n    return {\n      ...configByCategory[category],\n      ...(modifiers && modifiers[category] && modifiers[category])\n    };\n  });\n}\n\nexport function categoryFromCategoryConfig(category: CategoryConfig) {\n  return category.category;\n}\n\nexport function categoryNameFromCategoryConfig(category: CategoryConfig) {\n  return category.name;\n}\n\nexport type CategoriesConfig = CategoryConfig[];\n\nexport type CategoryConfig = {\n  category: Categories;\n  name: string;\n};\n\nexport type UserCategoryConfig = Array<Categories | CategoryConfig>;\n\nexport function mergeCategoriesConfig(\n  userCategoriesConfig: UserCategoryConfig = [],\n  modifiers: CategoryConfigModifiers = {}\n): CategoriesConfig {\n  const extra = {} as Record<Categories, CategoryConfig>;\n\n  if (modifiers.suggestionMode === SuggestionMode.RECENT) {\n    extra[Categories.SUGGESTED] = SuggestedRecent;\n  }\n\n  const base = baseCategoriesConfig(extra);\n  if (!userCategoriesConfig?.length) {\n    return base;\n  }\n\n  return userCategoriesConfig.map(category => {\n    if (typeof category === 'string') {\n      return getBaseConfigByCategory(category, extra[category]);\n    }\n\n    return {\n      ...getBaseConfigByCategory(category.category, extra[category.category]),\n      ...category\n    };\n  });\n}\n\nfunction getBaseConfigByCategory(\n  category: Categories,\n  modifier: CategoryConfig = {} as CategoryConfig\n) {\n  return Object.assign(configByCategory[category], modifier);\n}\n\ntype CategoryConfigModifiers = {\n  suggestionMode?: SuggestionMode;\n};\n","import { GetEmojiUrl } from '../components/emoji/Emoji';\nimport { emojiUrlByUnified } from '../dataUtils/emojiSelectors';\nimport {\n  EmojiClickData,\n  EmojiStyle,\n  SkinTonePickerLocation,\n  SkinTones,\n  SuggestionMode,\n  Theme\n} from '../types/exposedTypes';\n\nimport {\n  CategoriesConfig,\n  baseCategoriesConfig,\n  mergeCategoriesConfig\n} from './categoryConfig';\n\nexport function mergeConfig(\n  userConfig: PickerConfig = {}\n): PickerConfigInternal {\n  const base = basePickerConfig();\n\n  const previewConfig = Object.assign(\n    base.previewConfig,\n    userConfig.previewConfig ?? {}\n  );\n  const config = Object.assign(base, userConfig);\n\n  const categories = mergeCategoriesConfig(userConfig.categories, {\n    suggestionMode: config.suggestedEmojisMode\n  });\n\n  const skinTonePickerLocation = config.searchDisabled\n    ? SkinTonePickerLocation.PREVIEW\n    : config.skinTonePickerLocation;\n\n  return {\n    ...config,\n    categories,\n    previewConfig,\n    skinTonePickerLocation\n  };\n}\n\nexport function basePickerConfig(): PickerConfigInternal {\n  return {\n    autoFocusSearch: true,\n    categories: baseCategoriesConfig(),\n    defaultSkinTone: SkinTones.NEUTRAL,\n    emojiStyle: EmojiStyle.APPLE,\n    emojiVersion: null,\n    getEmojiUrl: emojiUrlByUnified,\n    height: 450,\n    lazyLoadEmojis: false,\n    onEmojiClick: function defaultOnClickHandler(\n      // @ts-ignore\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      emoji: EmojiClickData,\n      // @ts-ignore\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      event: MouseEvent\n    ) {},\n    previewConfig: {\n      ...basePreviewConfig\n    },\n    searchDisabled: false,\n    searchPlaceHolder: 'Search',\n    skinTonePickerLocation: SkinTonePickerLocation.SEARCH,\n    skinTonesDisabled: false,\n    suggestedEmojisMode: SuggestionMode.FREQUENT,\n    theme: Theme.LIGHT,\n    width: 350\n  };\n}\n\nexport type PickerConfigInternal = {\n  emojiVersion: string | null;\n  searchPlaceHolder: string;\n  defaultSkinTone: SkinTones;\n  skinTonesDisabled: boolean;\n  autoFocusSearch: boolean;\n  emojiStyle: EmojiStyle;\n  categories: CategoriesConfig;\n  onEmojiClick: (emoji: EmojiClickData, event: MouseEvent) => void;\n  theme: Theme;\n  suggestedEmojisMode: SuggestionMode;\n  lazyLoadEmojis: boolean;\n  previewConfig: PreviewConfig;\n  height: PickerDimensions;\n  width: PickerDimensions;\n  getEmojiUrl: GetEmojiUrl;\n  searchDisabled: boolean;\n  skinTonePickerLocation: SkinTonePickerLocation;\n};\n\nexport type PreviewConfig = {\n  defaultEmoji: string;\n  defaultCaption: string;\n  showPreview: boolean;\n};\n\nconst basePreviewConfig: PreviewConfig = {\n  defaultEmoji: '1f60a',\n  defaultCaption: \"What's your mood?\",\n  showPreview: true\n};\n\ntype ConfigExternal = {\n  previewConfig: Partial<PreviewConfig>;\n} & Omit<PickerConfigInternal, 'previewConfig'>;\n\nexport type PickerConfig = Partial<ConfigExternal>;\n\nexport type PickerDimensions = string | number;\n","import * as React from 'react';\n\nimport {\n  basePickerConfig,\n  mergeConfig,\n  PickerConfig,\n  PickerConfigInternal\n} from '../../config/config';\n\ntype Props = PickerConfig &\n  Readonly<{\n    children: React.ReactNode;\n  }>;\n\nconst ConfigContext = React.createContext<PickerConfigInternal>(\n  basePickerConfig()\n);\n\nexport function PickerConfigProvider({ children, ...config }: Props) {\n  return (\n    <ConfigContext.Provider value={mergeConfig(config)}>\n      {children}\n    </ConfigContext.Provider>\n  );\n}\n\nexport function usePickerConfig() {\n  return React.useContext(ConfigContext);\n}\n","import { isSystemDarkTheme } from '../DomUtils/isDarkTheme';\nimport { usePickerConfig } from '../components/context/PickerConfigContext';\nimport {\n  EmojiClickData,\n  EmojiStyle,\n  SkinTonePickerLocation,\n  SkinTones,\n  SuggestionMode,\n  Theme\n} from '../types/exposedTypes';\n\nimport { CategoriesConfig } from './categoryConfig';\nimport { PickerDimensions, PreviewConfig } from './config';\n\nexport function useSearchPlaceHolderConfig(): string {\n  const { searchPlaceHolder } = usePickerConfig();\n  return searchPlaceHolder;\n}\n\nexport function useDefaultSkinToneConfig(): SkinTones {\n  const { defaultSkinTone } = usePickerConfig();\n  return defaultSkinTone;\n}\n\nexport function useSkinTonesDisabledConfig(): boolean {\n  const { skinTonesDisabled } = usePickerConfig();\n  return skinTonesDisabled;\n}\n\nexport function useEmojiStyleConfig(): EmojiStyle {\n  const { emojiStyle } = usePickerConfig();\n  return emojiStyle;\n}\n\nexport function useAutoFocusSearchConfig(): boolean {\n  const { autoFocusSearch } = usePickerConfig();\n  return autoFocusSearch;\n}\n\nexport function useCategoriesConfig(): CategoriesConfig {\n  const { categories } = usePickerConfig();\n  return categories;\n}\n\nexport function useOnEmojiClickConfig(): (\n  emoji: EmojiClickData,\n  event: MouseEvent\n) => void {\n  const { onEmojiClick } = usePickerConfig();\n  return onEmojiClick;\n}\n\nexport function usePreviewConfig(): PreviewConfig {\n  const { previewConfig } = usePickerConfig();\n  return previewConfig;\n}\n\nexport function useThemeConfig(): Theme {\n  const { theme } = usePickerConfig();\n\n  if (theme === Theme.AUTO) {\n    return isSystemDarkTheme() ? Theme.DARK : Theme.LIGHT;\n  }\n\n  return theme;\n}\n\nexport function useSuggestedEmojisModeConfig(): SuggestionMode {\n  const { suggestedEmojisMode } = usePickerConfig();\n  return suggestedEmojisMode;\n}\n\nexport function useLazyLoadEmojisConfig(): boolean {\n  const { lazyLoadEmojis } = usePickerConfig();\n  return lazyLoadEmojis;\n}\n\nexport function usePickerSizeConfig(): {\n  height: PickerDimensions;\n  width: PickerDimensions;\n} {\n  const { height, width } = usePickerConfig();\n  return { height: getDimension(height), width: getDimension(width) };\n}\n\nexport function useEmojiVersionConfig(): string | null {\n  const { emojiVersion } = usePickerConfig();\n  return emojiVersion;\n}\n\nexport function useSearchDisabledConfig(): boolean {\n  const { searchDisabled } = usePickerConfig();\n  return searchDisabled;\n}\n\nexport function useSkinTonePickerLocationConfig(): SkinTonePickerLocation {\n  const { skinTonePickerLocation } = usePickerConfig();\n  return skinTonePickerLocation;\n}\n\nexport function useGetEmojiUrlConfig(): (\n  unified: string,\n  style: EmojiStyle\n) => string {\n  const { getEmojiUrl } = usePickerConfig();\n  return getEmojiUrl;\n}\n\nfunction getDimension(dimensionConfig: PickerDimensions): PickerDimensions {\n  return typeof dimensionConfig === 'number'\n    ? `${dimensionConfig}px`\n    : dimensionConfig;\n}\n","export function isSystemDarkTheme(): boolean {\n  if (typeof window === 'undefined') {\n    return false;\n  }\n\n  return !!window.matchMedia('(prefers-color-scheme: dark)').matches;\n}\n","import { DataEmoji } from './DataTypes';\nimport { allEmojis, emojiNames, emojiUnified } from './emojiSelectors';\n\nexport const alphaNumericEmojiIndex: BaseIndex = {};\n\nsetTimeout(() => {\n  allEmojis.reduce((searchIndex, emoji) => {\n    const joinedNameString = emojiNames(emoji)\n      .flat()\n      .join('')\n      .replace(/[^a-zA-Z\\d]/g, '')\n      .split('');\n\n    joinedNameString.forEach(char => {\n      searchIndex[char] = searchIndex[char] ?? {};\n\n      searchIndex[char][emojiUnified(emoji)] = emoji;\n    });\n    return searchIndex;\n  }, alphaNumericEmojiIndex as BaseIndex);\n});\n\ntype BaseIndex = Record<string, Record<string, DataEmoji>>;\n","import { useRef, useState } from 'react';\n\nexport function useDebouncedState<T>(\n  initialValue: T,\n  delay: number = 0\n): [T, (value: T) => Promise<T>] {\n  const [state, setState] = useState<T>(initialValue);\n  const timer = useRef<number | null>(null);\n\n  function debouncedSetState(value: T) {\n    return new Promise<T>(resolve => {\n      if (timer.current) {\n        clearTimeout(timer.current);\n      }\n\n      timer.current = window?.setTimeout(() => {\n        setState(value);\n        resolve(value);\n      }, delay);\n    });\n  }\n\n  return [state, debouncedSetState];\n}\n","import { useRef, useMemo } from 'react';\n\nimport { useEmojiVersionConfig } from '../config/useConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  addedIn,\n  allEmojis,\n  emojiUnified,\n  unifiedWithoutSkinTone\n} from '../dataUtils/emojiSelectors';\n\nexport function useDisallowedEmojis() {\n  const DisallowedEmojisRef = useRef<Record<string, boolean>>({});\n  const emojiVersionConfig = useEmojiVersionConfig();\n\n  return useMemo(() => {\n    const emojiVersion = parseFloat(`${emojiVersionConfig}`);\n\n    if (!emojiVersionConfig || Number.isNaN(emojiVersion)) {\n      return DisallowedEmojisRef.current;\n    }\n\n    return allEmojis.reduce((disallowedEmojis, emoji) => {\n      if (addedInNewerVersion(emoji, emojiVersion)) {\n        disallowedEmojis[emojiUnified(emoji)] = true;\n      }\n\n      return disallowedEmojis;\n    }, DisallowedEmojisRef.current);\n  }, [emojiVersionConfig]);\n}\n\nexport function useIsEmojiDisallowed() {\n  const disallowedEmojis = useDisallowedEmojis();\n\n  return function isEmojiDisallowed(emoji: DataEmoji) {\n    const unified = unifiedWithoutSkinTone(emojiUnified(emoji));\n\n    return Boolean(disallowedEmojis[unified]);\n  };\n}\n\nfunction addedInNewerVersion(\n  emoji: DataEmoji,\n  supportedLevel: number\n): boolean {\n  return addedIn(emoji) > supportedLevel;\n}\n","import * as React from 'react';\nimport { useState } from 'react';\n\nimport { useDefaultSkinToneConfig } from '../../config/useConfig';\nimport { DataEmoji } from '../../dataUtils/DataTypes';\nimport { alphaNumericEmojiIndex } from '../../dataUtils/alphaNumericEmojiIndex';\nimport { useDebouncedState } from '../../hooks/useDebouncedState';\nimport { useDisallowedEmojis } from '../../hooks/useDisallowedEmojis';\nimport { FilterDict } from '../../hooks/useFilter';\nimport { useMarkInitialLoad } from '../../hooks/useInitialLoad';\nimport { SkinTones } from '../../types/exposedTypes';\n\nexport function PickerContextProvider({ children }: Props) {\n  const disallowedEmojis = useDisallowedEmojis();\n  const defaultSkinTone = useDefaultSkinToneConfig();\n\n  // Initialize the filter with the inititial dictionary\n  const filterRef = React.useRef<FilterState>(alphaNumericEmojiIndex);\n  const disallowClickRef = React.useRef<boolean>(false);\n  const disallowMouseRef = React.useRef<boolean>(false);\n  const disallowedEmojisRef = React.useRef<Record<string, boolean>>(\n    disallowedEmojis\n  );\n\n  const suggestedUpdateState = useDebouncedState(Date.now(), 200);\n  const searchTerm = useDebouncedState('', 100);\n  const skinToneFanOpenState = useState<boolean>(false);\n  const activeSkinTone = useState<SkinTones>(defaultSkinTone);\n  const activeCategoryState = useState<ActiveCategoryState>(null);\n  const emojisThatFailedToLoadState = useState<Set<string>>(new Set());\n  const emojiVariationPickerState = useState<DataEmoji | null>(null);\n  const [isPastInitialLoad, setIsPastInitialLoad] = useState(false);\n\n  useMarkInitialLoad(setIsPastInitialLoad);\n\n  return (\n    <PickerContext.Provider\n      value={{\n        activeCategoryState,\n        activeSkinTone,\n        disallowClickRef,\n        disallowMouseRef,\n        disallowedEmojisRef,\n        emojiVariationPickerState,\n        emojisThatFailedToLoadState,\n        filterRef,\n        isPastInitialLoad,\n        searchTerm,\n        skinToneFanOpenState,\n        suggestedUpdateState\n      }}\n    >\n      {children}\n    </PickerContext.Provider>\n  );\n}\n\ntype ReactState<T> = [T, React.Dispatch<React.SetStateAction<T>>];\n\nconst PickerContext = React.createContext<{\n  searchTerm: [string, (term: string) => Promise<string>];\n  suggestedUpdateState: [number, (term: number) => void];\n  activeCategoryState: ReactState<ActiveCategoryState>;\n  activeSkinTone: ReactState<SkinTones>;\n  emojisThatFailedToLoadState: ReactState<Set<string>>;\n  isPastInitialLoad: boolean;\n  emojiVariationPickerState: ReactState<DataEmoji | null>;\n  skinToneFanOpenState: ReactState<boolean>;\n  filterRef: React.MutableRefObject<FilterState>;\n  disallowClickRef: React.MutableRefObject<boolean>;\n  disallowMouseRef: React.MutableRefObject<boolean>;\n  disallowedEmojisRef: React.MutableRefObject<Record<string, boolean>>;\n}>({\n  activeCategoryState: [null, () => {}],\n  activeSkinTone: [SkinTones.NEUTRAL, () => {}],\n  disallowClickRef: { current: false },\n  disallowMouseRef: { current: false },\n  disallowedEmojisRef: { current: {} },\n  emojiVariationPickerState: [null, () => {}],\n  emojisThatFailedToLoadState: [new Set(), () => {}],\n  filterRef: { current: {} },\n  isPastInitialLoad: true,\n  searchTerm: ['', () => new Promise<string>(() => undefined)],\n  skinToneFanOpenState: [false, () => {}],\n  suggestedUpdateState: [Date.now(), () => {}]\n});\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n}>;\n\nexport function useFilterRef() {\n  const { filterRef } = React.useContext(PickerContext);\n  return filterRef;\n}\n\nexport function useDisallowClickRef() {\n  const { disallowClickRef } = React.useContext(PickerContext);\n  return disallowClickRef;\n}\n\nexport function useDisallowMouseRef() {\n  const { disallowMouseRef } = React.useContext(PickerContext);\n  return disallowMouseRef;\n}\n\nexport function useSearchTermState() {\n  const { searchTerm } = React.useContext(PickerContext);\n  return searchTerm;\n}\n\nexport function useActiveSkinToneState(): [\n  SkinTones,\n  (skinTone: SkinTones) => void\n] {\n  const { activeSkinTone } = React.useContext(PickerContext);\n  return activeSkinTone;\n}\n\nexport function useEmojisThatFailedToLoadState() {\n  const { emojisThatFailedToLoadState } = React.useContext(PickerContext);\n  return emojisThatFailedToLoadState;\n}\n\nexport function useIsPastInitialLoad(): boolean {\n  const { isPastInitialLoad } = React.useContext(PickerContext);\n  return isPastInitialLoad;\n}\n\nexport function useEmojiVariationPickerState() {\n  const { emojiVariationPickerState } = React.useContext(PickerContext);\n  return emojiVariationPickerState;\n}\n\nexport function useSkinToneFanOpenState() {\n  const { skinToneFanOpenState } = React.useContext(PickerContext);\n  return skinToneFanOpenState;\n}\n\nexport function useDisallowedEmojisRef() {\n  const { disallowedEmojisRef } = React.useContext(PickerContext);\n  return disallowedEmojisRef;\n}\n\nexport function useUpdateSuggested(): [number, () => void] {\n  const { suggestedUpdateState } = React.useContext(PickerContext);\n\n  const [suggestedUpdated, setsuggestedUpdate] = suggestedUpdateState;\n  return [\n    suggestedUpdated,\n    function updateSuggested() {\n      setsuggestedUpdate(Date.now());\n    }\n  ];\n}\n\nexport type FilterState = Record<string, FilterDict>;\n\ntype ActiveCategoryState = null | string;\n","import { useEffect } from 'react';\nimport * as React from 'react';\n\nexport function useMarkInitialLoad(\n  dispatch: React.Dispatch<React.SetStateAction<boolean>>\n) {\n  useEffect(() => {\n    dispatch(true);\n  }, [dispatch]);\n}\n","import { useEffect } from 'react';\n\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { useDisallowMouseRef } from '../components/context/PickerContext';\n\nexport function useDisallowMouseMove() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function disallowMouseMove() {\n    DisallowMouseRef.current = true;\n  };\n}\n\nexport function useAllowMouseMove() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function allowMouseMove() {\n    DisallowMouseRef.current = false;\n  };\n}\n\nexport function useIsMouseDisallowed() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function isMouseDisallowed() {\n    return DisallowMouseRef.current;\n  };\n}\n\nexport function useOnMouseMove() {\n  const BodyRef = useBodyRef();\n  const allowMouseMove = useAllowMouseMove();\n  const isMouseDisallowed = useIsMouseDisallowed();\n\n  useEffect(() => {\n    const bodyRef = BodyRef.current;\n    bodyRef?.addEventListener('mousemove', onMouseMove, {\n      passive: true\n    });\n\n    function onMouseMove() {\n      if (isMouseDisallowed()) {\n        allowMouseMove();\n      }\n    }\n    return () => {\n      bodyRef?.removeEventListener('mousemove', onMouseMove);\n    };\n  }, [BodyRef, allowMouseMove, isMouseDisallowed]);\n}\n","import { NullableElement } from './selectors';\n\nexport function elementCountInRow(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const parentWidth = parent.getBoundingClientRect().width;\n  const elementWidth = element.getBoundingClientRect().width;\n  return Math.floor(parentWidth / elementWidth);\n}\n\nexport function elementIndexInRow(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const elementWidth = element.getBoundingClientRect().width;\n  const elementLeft = element.getBoundingClientRect().left;\n  const parentLeft = parent.getBoundingClientRect().left;\n\n  return Math.floor((elementLeft - parentLeft) / elementWidth);\n}\n\nexport function rowNumber(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const elementHeight = element.getBoundingClientRect().height;\n  const elementTop = element.getBoundingClientRect().top;\n  const parentTop = parent.getBoundingClientRect().top;\n  return Math.round((elementTop - parentTop) / elementHeight);\n}\n\nexport function hasNextRow(\n  parent: NullableElement,\n  element: NullableElement\n): boolean {\n  if (!parent || !element) {\n    return false;\n  }\n\n  const elementHeight = element.getBoundingClientRect().height;\n  const elementTop = element.getBoundingClientRect().top;\n  const parentTop = parent.getBoundingClientRect().top;\n  const parentHeight = parent.getBoundingClientRect().height;\n\n  return Math.round(elementTop - parentTop + elementHeight) < parentHeight;\n}\n\nfunction getRowElements(\n  elements: HTMLElement[],\n  row: number,\n  elementsInRow: number\n): HTMLElement[] {\n  if (row === -1) {\n    const lastRow = Math.floor((elements.length - 1) / elementsInRow);\n    const firstElementIndex = lastRow * elementsInRow;\n    const lastElementIndex = elements.length - 1;\n    return elements.slice(firstElementIndex, lastElementIndex + 1);\n  }\n\n  return elements.slice(row * elementsInRow, (row + 1) * elementsInRow);\n}\n\nfunction getNextRowElements(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number\n): HTMLElement[] {\n  const nextRow = currentRow + 1;\n\n  if (nextRow * elementsInRow > allElements.length) {\n    return [];\n  }\n\n  return getRowElements(allElements, nextRow, elementsInRow);\n}\n\nexport function getElementInRow(\n  elements: HTMLElement[],\n  row: number,\n  elementsInRow: number,\n  indexInRow: number\n): NullableElement {\n  const rowElements = getRowElements(elements, row, elementsInRow);\n  // get element, default to last\n  return rowElements[indexInRow] || rowElements[rowElements.length - 1] || null;\n}\n\nexport function getElementInNextRow(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number,\n  index: number\n): NullableElement {\n  const nextRowElements = getNextRowElements(\n    allElements,\n    currentRow,\n    elementsInRow\n  );\n\n  // return item in index, or last item in row\n  return (\n    nextRowElements[index] ||\n    nextRowElements[nextRowElements.length - 1] ||\n    null\n  );\n}\n\nexport function getElementInPrevRow(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number,\n  index: number\n): NullableElement {\n  const prevRowElements = getRowElements(\n    allElements,\n    currentRow - 1,\n    elementsInRow\n  );\n\n  // default to last\n  return (\n    prevRowElements[index] ||\n    prevRowElements[prevRowElements.length - 1] ||\n    null\n  );\n}\n\nexport function firstVisibleElementInContainer(\n  parent: NullableElement,\n  elements: HTMLElement[]\n): NullableElement {\n  if (!parent || !elements.length) {\n    return null;\n  }\n\n  const parentTop = parent.getBoundingClientRect().top;\n  const parentBottom = parent.getBoundingClientRect().bottom;\n\n  const visibleElements = elements.find(element => {\n    const elementTop = element.getBoundingClientRect().top;\n    const elementBottom = element.getBoundingClientRect().bottom;\n\n    return (\n      (elementTop >= parentTop && elementTop <= parentBottom) ||\n      (elementBottom >= parentTop && elementBottom <= parentBottom)\n    );\n  });\n\n  return visibleElements || null;\n}\n\nexport function hasNextElementSibling(element: HTMLElement) {\n  return !!element.nextElementSibling;\n}\n","import { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  emojiByUnified,\n  unifiedWithoutSkinTone,\n} from '../dataUtils/emojiSelectors';\n\nimport { asSelectors, ClassNames } from './classNames';\nimport { firstVisibleElementInContainer } from './elementPositionInRow';\n\nexport type NullableElement = HTMLElement | null;\n\nexport const EmojiButtonSelector = `button${asSelectors(ClassNames.emoji)}`;\nexport const VisibleEmojiSelector = [\n  EmojiButtonSelector,\n  asSelectors(ClassNames.visible),\n  `:not(${asSelectors(ClassNames.hidden)})`,\n].join('');\n\nexport function buttonFromTarget(\n  emojiElement: NullableElement\n): HTMLButtonElement | null {\n  return emojiElement?.closest(EmojiButtonSelector) ?? null;\n}\n\nexport function isEmojiButton(element: NullableElement): boolean {\n  if (!element) {\n    return false;\n  }\n\n  return element.matches(EmojiButtonSelector);\n}\n\nexport function emojiFromElement(\n  element: NullableElement\n): [DataEmoji, string] | [] {\n  const originalUnified = originalUnifiedFromEmojiElement(element);\n  const unified = unifiedFromEmojiElement(element);\n\n  if (!originalUnified) {\n    return [];\n  }\n\n  const emoji = emojiByUnified(originalUnified);\n\n  if (!emoji) {\n    return [];\n  }\n\n  return [emoji, unified as string];\n}\n\nexport function isEmojiElement(element: NullableElement): boolean {\n  return Boolean(\n    element?.matches(EmojiButtonSelector) ||\n      element?.parentElement?.matches(EmojiButtonSelector)\n  );\n}\n\nexport function categoryLabelFromCategory(\n  category: NullableElement\n): NullableElement {\n  return category?.querySelector(asSelectors(ClassNames.label)) ?? null;\n}\n\nexport function closestCategoryLabel(\n  element: NullableElement\n): NullableElement {\n  const category = closestCategory(element);\n  return categoryLabelFromCategory(category);\n}\n\nexport function elementHeight(element: NullableElement): number {\n  return element?.clientHeight ?? 0;\n}\n\nexport function emojiTrueOffsetTop(element: NullableElement): number {\n  if (!element) {\n    return 0;\n  }\n\n  const button = buttonFromTarget(element);\n  const category = closestCategory(button);\n\n  // compensate for the label height\n  const labelHeight = categoryLabelHeight(category);\n\n  return elementOffsetTop(button) + elementOffsetTop(category) + labelHeight;\n}\n\nexport function categoryLabelHeight(category: NullableElement): number {\n  if (!category) {\n    return 0;\n  }\n\n  const categoryWithoutLabel = category.querySelector(\n    asSelectors(ClassNames.categoryContent)\n  );\n\n  return (\n    (category?.clientHeight ?? 0) - (categoryWithoutLabel?.clientHeight ?? 0)\n  );\n}\n\nexport function isEmojiBehindLabel(emoji: NullableElement): boolean {\n  if (!emoji) {\n    return false;\n  }\n\n  return (\n    emojiDistanceFromScrollTop(emoji) <\n    categoryLabelHeight(closestCategory(emoji))\n  );\n}\n\nexport function queryScrollBody(root: NullableElement): NullableElement {\n  return root\n    ? root.matches(asSelectors(ClassNames.scrollBody))\n      ? root\n      : root.querySelector(asSelectors(ClassNames.scrollBody))\n    : null;\n}\n\nexport function emojiDistanceFromScrollTop(emoji: NullableElement): number {\n  if (!emoji) {\n    return 0;\n  }\n\n  return emojiTrueOffsetTop(emoji) - (closestScrollBody(emoji)?.scrollTop ?? 0);\n}\n\nexport function closestScrollBody(element: NullableElement): NullableElement {\n  if (!element) {\n    return null;\n  }\n\n  return element.closest(asSelectors(ClassNames.scrollBody)) ?? null;\n}\n\nexport function emojiTruOffsetLeft(element: NullableElement): number {\n  const button = buttonFromTarget(element);\n  const category = closestCategory(button);\n\n  return elementOffsetLeft(button) + elementOffsetLeft(category);\n}\n\nfunction elementOffsetTop(element: NullableElement): number {\n  return element?.offsetTop ?? 0;\n}\n\nfunction elementOffsetLeft(element: NullableElement): number {\n  return element?.offsetLeft ?? 0;\n}\n\nexport function unifiedFromEmojiElement(emoji: NullableElement): string | null {\n  return elementDataSetKey(buttonFromTarget(emoji), 'unified') ?? null;\n}\n\nexport function originalUnifiedFromEmojiElement(\n  emoji: NullableElement\n): string | null {\n  const unified = unifiedFromEmojiElement(emoji);\n\n  if (unified) {\n    return unifiedWithoutSkinTone(unified);\n  }\n  return null;\n}\n\nfunction elementDataSetKey(\n  element: NullableElement,\n  key: string\n): string | null {\n  return elementDataSet(element)[key] ?? null;\n}\n\nfunction elementDataSet(element: NullableElement): DOMStringMap {\n  return element?.dataset ?? {};\n}\n\nexport function isVisibleEmoji(element: HTMLElement) {\n  return element.classList.contains(ClassNames.visible);\n}\n\nexport function isHidden(element: NullableElement) {\n  if (!element) return true;\n\n  return element.classList.contains(ClassNames.hidden);\n}\n\nexport function allVisibleEmojis(parent: NullableElement) {\n  if (!parent) {\n    return [];\n  }\n\n  return Array.from(\n    parent.querySelectorAll(VisibleEmojiSelector)\n  ) as HTMLElement[];\n}\n\nexport function lastVisibleEmoji(element: NullableElement): NullableElement {\n  if (!element) return null;\n\n  const allEmojis = allVisibleEmojis(element);\n  const [last] = allEmojis.slice(-1);\n  if (!last) {\n    return null;\n  }\n\n  if (!isVisibleEmoji(last)) {\n    return prevVisibleEmoji(last);\n  }\n\n  return last;\n}\n\nexport function nextVisibleEmoji(element: HTMLElement): NullableElement {\n  const next = element.nextElementSibling as HTMLElement;\n\n  if (!next) {\n    return firstVisibleEmoji(nextCategory(element));\n  }\n\n  if (!isVisibleEmoji(next)) {\n    return nextVisibleEmoji(next);\n  }\n\n  return next;\n}\n\nexport function prevVisibleEmoji(element: HTMLElement): NullableElement {\n  const prev = element.previousElementSibling as HTMLElement;\n\n  if (!prev) {\n    return lastVisibleEmoji(prevCategory(element));\n  }\n\n  if (!isVisibleEmoji(prev)) {\n    return prevVisibleEmoji(prev);\n  }\n\n  return prev;\n}\n\nexport function firstVisibleEmoji(parent: NullableElement) {\n  if (!parent) {\n    return null;\n  }\n\n  const allEmojis = allVisibleEmojis(parent);\n\n  return firstVisibleElementInContainer(parent, allEmojis);\n}\n\nexport function prevCategory(element: NullableElement): NullableElement {\n  const category = closestCategory(element);\n\n  if (!category) {\n    return null;\n  }\n\n  const prev = category.previousElementSibling as HTMLElement;\n\n  if (!prev) {\n    return null;\n  }\n\n  if (isHidden(prev)) {\n    return prevCategory(prev);\n  }\n\n  return prev;\n}\n\nexport function nextCategory(element: NullableElement): NullableElement {\n  const category = closestCategory(element);\n\n  if (!category) {\n    return null;\n  }\n\n  const next = category.nextElementSibling as HTMLElement;\n\n  if (!next) {\n    return null;\n  }\n\n  if (isHidden(next)) {\n    return nextCategory(next);\n  }\n\n  return next;\n}\n\nexport function closestCategory(element: NullableElement) {\n  if (!element) {\n    return null;\n  }\n  return element.closest(asSelectors(ClassNames.category)) as HTMLElement;\n}\n\nexport function closestCategoryContent(element: NullableElement) {\n  if (!element) {\n    return null;\n  }\n  return element.closest(\n    asSelectors(ClassNames.categoryContent)\n  ) as HTMLElement;\n}\n","export function parseNativeEmoji(unified: string): string {\n  return unified\n    .split('-')\n    .map(hex => String.fromCodePoint(parseInt(hex, 16)))\n    .join('');\n}\n","import { SkinTones, SuggestionMode } from '../types/exposedTypes';\n\nimport { DataEmoji } from './DataTypes';\nimport { emojiUnified } from './emojiSelectors';\n\nconst SUGGESTED_LS_KEY = 'epr_suggested';\n\ntype SuggestedItem = {\n  unified: string;\n  original: string;\n  count: number;\n};\n\ntype Suggested = SuggestedItem[];\n\nexport function getsuggested(mode?: SuggestionMode): Suggested {\n  try {\n    if (!window?.localStorage) {\n      return [];\n    }\n    const recent = JSON.parse(\n      window?.localStorage.getItem(SUGGESTED_LS_KEY) ?? '[]'\n    ) as Suggested;\n\n    if (mode === SuggestionMode.FREQUENT) {\n      return recent.sort((a, b) => b.count - a.count);\n    }\n\n    return recent;\n  } catch {\n    return [];\n  }\n}\n\nexport function setsuggested(emoji: DataEmoji, skinTone: SkinTones) {\n  const recent = getsuggested();\n\n  const unified = emojiUnified(emoji, skinTone);\n  const originalUnified = emojiUnified(emoji);\n\n  let existing = recent.find(({ unified: u }) => u === unified);\n\n  let nextList: SuggestedItem[];\n\n  if (existing) {\n    nextList = [existing].concat(recent.filter(i => i !== existing));\n  } else {\n    existing = {\n      unified,\n      original: originalUnified,\n      count: 0\n    };\n    nextList = [existing, ...recent];\n  }\n\n  existing.count++;\n\n  nextList.length = Math.min(nextList.length, 14);\n\n  try {\n    window?.localStorage.setItem(SUGGESTED_LS_KEY, JSON.stringify(nextList));\n    // Prevents the change from being seen immediately.\n  } catch {\n    // ignore\n  }\n}\n","import { useCallback } from 'react';\n\nimport {\n  useEmojiVariationPickerState,\n  useSkinToneFanOpenState\n} from '../components/context/PickerContext';\n\nexport function useCloseAllOpenToggles() {\n  const [variationPicker, setVariationPicker] = useEmojiVariationPickerState();\n  const [skinToneFanOpen, setSkinToneFanOpen] = useSkinToneFanOpenState();\n\n  const closeAllOpenToggles = useCallback(() => {\n    if (variationPicker) {\n      setVariationPicker(null);\n    }\n\n    if (skinToneFanOpen) {\n      setSkinToneFanOpen(false);\n    }\n  }, [\n    variationPicker,\n    skinToneFanOpen,\n    setVariationPicker,\n    setSkinToneFanOpen\n  ]);\n\n  return closeAllOpenToggles;\n}\n\nexport function useHasOpenToggles() {\n  const [variationPicker] = useEmojiVariationPickerState();\n  const [skinToneFanOpen] = useSkinToneFanOpenState();\n\n  return function hasOpenToggles() {\n    return !!variationPicker || skinToneFanOpen;\n  };\n}\n","import { emojiFromElement, NullableElement } from '../DomUtils/selectors';\nimport { useSetAnchoredEmojiRef } from '../components/context/ElementRefContext';\nimport { useEmojiVariationPickerState } from '../components/context/PickerContext';\n\nexport default function useSetVariationPicker() {\n  const setAnchoredEmojiRef = useSetAnchoredEmojiRef();\n  const [, setEmojiVariationPicker] = useEmojiVariationPickerState();\n\n  return function setVariationPicker(element: NullableElement) {\n    const [emoji] = emojiFromElement(element);\n\n    if (emoji) {\n      setAnchoredEmojiRef(element);\n      setEmojiVariationPicker(emoji);\n    }\n  };\n}\n","import * as React from 'react';\nimport { useEffect, useRef } from 'react';\n\nimport {\n  emojiFromElement,\n  isEmojiElement,\n  NullableElement,\n} from '../DomUtils/selectors';\nimport {\n  useActiveSkinToneState,\n  useDisallowClickRef,\n  useEmojiVariationPickerState,\n  useUpdateSuggested,\n} from '../components/context/PickerContext';\nimport { GetEmojiUrl } from '../components/emoji/Emoji';\nimport {\n  useGetEmojiUrlConfig,\n  useOnEmojiClickConfig,\n} from '../config/useConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  activeVariationFromUnified,\n  emojiHasVariations,\n  emojiNames,\n  emojiUnified,\n} from '../dataUtils/emojiSelectors';\nimport { parseNativeEmoji } from '../dataUtils/parseNativeEmoji';\nimport { setsuggested } from '../dataUtils/suggested';\nimport { EmojiClickData, EmojiStyle, SkinTones } from '../types/exposedTypes';\n\nimport { useCloseAllOpenToggles } from './useCloseAllOpenToggles';\nimport useSetVariationPicker from './useSetVariationPicker';\n\nexport function useMouseDownHandlers(\n  BodyRef: React.MutableRefObject<NullableElement>\n) {\n  const mouseDownTimerRef = useRef<undefined | number>();\n  const setVariationPicker = useSetVariationPicker();\n  const disallowClickRef = useDisallowClickRef();\n  const [, setEmojiVariationPicker] = useEmojiVariationPickerState();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const [activeSkinTone] = useActiveSkinToneState();\n  const onEmojiClick = useOnEmojiClickConfig();\n  const [, updateSuggested] = useUpdateSuggested();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  const onClick = React.useCallback(\n    function onClick(event: MouseEvent) {\n      if (disallowClickRef.current) {\n        return;\n      }\n\n      closeAllOpenToggles();\n\n      const [emoji, unified] = emojiFromEvent(event);\n\n      if (!emoji || !unified) {\n        return;\n      }\n\n      const skinToneToUse =\n        activeVariationFromUnified(unified) || activeSkinTone;\n\n      updateSuggested();\n      setsuggested(emoji, skinToneToUse);\n      onEmojiClick(emojiClickOutput(emoji, skinToneToUse, getEmojiUrl), event);\n    },\n    [\n      activeSkinTone,\n      closeAllOpenToggles,\n      disallowClickRef,\n      onEmojiClick,\n      updateSuggested,\n      getEmojiUrl,\n    ]\n  );\n\n  const onMouseDown = React.useCallback(\n    function onMouseDown(event: MouseEvent) {\n      if (mouseDownTimerRef.current) {\n        clearTimeout(mouseDownTimerRef.current);\n      }\n\n      const [emoji] = emojiFromEvent(event);\n\n      if (!emoji || !emojiHasVariations(emoji)) {\n        return;\n      }\n\n      mouseDownTimerRef.current = window?.setTimeout(() => {\n        disallowClickRef.current = true;\n        mouseDownTimerRef.current = undefined;\n        closeAllOpenToggles();\n        setVariationPicker(event.target as HTMLElement);\n        setEmojiVariationPicker(emoji);\n      }, 500);\n    },\n    [\n      disallowClickRef,\n      closeAllOpenToggles,\n      setVariationPicker,\n      setEmojiVariationPicker,\n    ]\n  );\n  const onMouseUp = React.useCallback(\n    function onMouseUp() {\n      if (mouseDownTimerRef.current) {\n        clearTimeout(mouseDownTimerRef.current);\n        mouseDownTimerRef.current = undefined;\n      } else if (disallowClickRef.current) {\n        // The problem we're trying to overcome here\n        // is that the emoji has both mouseup and click events\n        // and when releasing a mouseup event\n        // the click gets triggered too\n        // So we're disallowing the click event for a short time\n\n        requestAnimationFrame(() => {\n          disallowClickRef.current = false;\n        });\n      }\n    },\n    [disallowClickRef]\n  );\n\n  useEffect(() => {\n    if (!BodyRef.current) {\n      return;\n    }\n    const bodyRef = BodyRef.current;\n    bodyRef.addEventListener('click', onClick, {\n      passive: true,\n    });\n\n    bodyRef.addEventListener('mousedown', onMouseDown, {\n      passive: true,\n    });\n    bodyRef.addEventListener('mouseup', onMouseUp, {\n      passive: true,\n    });\n\n    return () => {\n      bodyRef?.removeEventListener('click', onClick);\n      bodyRef?.removeEventListener('mousedown', onMouseDown);\n      bodyRef?.removeEventListener('mouseup', onMouseUp);\n    };\n  }, [BodyRef, onClick, onMouseDown, onMouseUp]);\n}\n\nfunction emojiFromEvent(event: MouseEvent): [DataEmoji, string] | [] {\n  const target = event?.target as HTMLElement;\n  if (!isEmojiElement(target)) {\n    return [];\n  }\n\n  return emojiFromElement(target);\n}\n\nfunction emojiClickOutput(\n  emoji: DataEmoji,\n  activeSkinTone: SkinTones,\n  getEmojiUrl: GetEmojiUrl\n): EmojiClickData {\n  const unified = emojiUnified(emoji, activeSkinTone);\n  return {\n    activeSkinTone,\n    emoji: parseNativeEmoji(unified),\n    getImageUrl(emojiStyle: EmojiStyle) {\n      return getEmojiUrl(unified, emojiStyle);\n    },\n    names: emojiNames(emoji),\n    unified,\n    unifiedWithoutSkinTone: emojiUnified(emoji),\n  };\n}\n","import { useCallback } from 'react';\n\nimport { useBodyRef } from '../components/context/ElementRefContext';\n\nimport { asSelectors, ClassNames } from './classNames';\nimport {\n  categoryLabelHeight,\n  closestCategory,\n  closestScrollBody,\n  emojiDistanceFromScrollTop,\n  isEmojiBehindLabel,\n  NullableElement,\n  queryScrollBody\n} from './selectors';\n\nexport function scrollTo(root: NullableElement, top: number = 0) {\n  const $eprBody = queryScrollBody(root);\n\n  if (!$eprBody) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    $eprBody.scrollTop = top + 1;\n  });\n}\n\nexport function scrollBy(root: NullableElement, by: number): void {\n  const $eprBody = queryScrollBody(root);\n\n  if (!$eprBody) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    $eprBody.scrollTop = $eprBody.scrollTop + by;\n  });\n}\n\nexport function useScrollTo() {\n  const BodyRef = useBodyRef();\n\n  return useCallback(\n    (top: number) => {\n      requestAnimationFrame(() => {\n        if (BodyRef.current) {\n          BodyRef.current.scrollTop = top;\n        }\n      });\n    },\n    [BodyRef]\n  );\n}\n\nexport function scrollEmojiAboveLabel(emoji: NullableElement) {\n  if (!emoji || !isEmojiBehindLabel(emoji)) {\n    return;\n  }\n\n  if (emoji.closest(asSelectors(ClassNames.variationPicker))) {\n    return;\n  }\n\n  const scrollBody = closestScrollBody(emoji);\n  const by = emojiDistanceFromScrollTop(emoji);\n  scrollBy(scrollBody, -(categoryLabelHeight(closestCategory(emoji)) - by));\n}\n","import { useCallback } from 'react';\n\nimport { focusElement, focusFirstElementChild } from '../DomUtils/focusElement';\nimport {\n  useCategoryNavigationRef,\n  useSearchInputRef,\n  useSkinTonePickerRef\n} from '../components/context/ElementRefContext';\n\nexport function useFocusSearchInput() {\n  const SearchInputRef = useSearchInputRef();\n\n  return useCallback(() => {\n    focusElement(SearchInputRef.current);\n  }, [SearchInputRef]);\n}\n\nexport function useFocusSkinTonePicker() {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n\n  return useCallback(() => {\n    if (!SkinTonePickerRef.current) {\n      return;\n    }\n\n    focusFirstElementChild(SkinTonePickerRef.current);\n  }, [SkinTonePickerRef]);\n}\n\nexport function useFocusCategoryNavigation() {\n  const CategoryNavigationRef = useCategoryNavigationRef();\n\n  return useCallback(() => {\n    if (!CategoryNavigationRef.current) {\n      return;\n    }\n\n    focusFirstElementChild(CategoryNavigationRef.current);\n  }, [CategoryNavigationRef]);\n}\n","import { scrollTo } from '../DomUtils/scrollTo';\nimport {\n  usePickerMainRef,\n  useSearchInputRef,\n} from '../components/context/ElementRefContext';\nimport {\n  FilterState,\n  useFilterRef,\n  useSearchTermState,\n} from '../components/context/PickerContext';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiNames } from '../dataUtils/emojiSelectors';\n\nimport { useFocusSearchInput } from './useFocus';\n\nfunction useSetFilterRef() {\n  const filterRef = useFilterRef();\n\n  return function setFilter(\n    setter: FilterState | ((current: FilterState) => FilterState)\n  ): void {\n    if (typeof setter === 'function') {\n      return setFilter(setter(filterRef.current));\n    }\n\n    filterRef.current = setter;\n  };\n}\n\nexport function useClearSearch() {\n  const applySearch = useApplySearch();\n  const SearchInputRef = useSearchInputRef();\n  const focusSearchInput = useFocusSearchInput();\n\n  return function clearSearch() {\n    if (SearchInputRef.current) {\n      SearchInputRef.current.value = '';\n    }\n\n    applySearch('');\n    focusSearchInput();\n  };\n}\n\nexport function useAppendSearch() {\n  const SearchInputRef = useSearchInputRef();\n  const applySearch = useApplySearch();\n\n  return function appendSearch(str: string) {\n    if (SearchInputRef.current) {\n      SearchInputRef.current.value = `${SearchInputRef.current.value}${str}`;\n      applySearch(getNormalizedSearchTerm(SearchInputRef.current.value));\n    } else {\n      applySearch(getNormalizedSearchTerm(str));\n    }\n  };\n}\n\nexport function useFilter() {\n  const SearchInputRef = useSearchInputRef();\n  const filterRef = useFilterRef();\n  const setFilterRef = useSetFilterRef();\n  const applySearch = useApplySearch();\n\n  const [searchTerm] = useSearchTermState();\n\n  return {\n    onChange,\n    searchTerm,\n    SearchInputRef,\n  };\n\n  function onChange(inputValue: string) {\n    const filter = filterRef.current;\n\n    const nextValue = inputValue.toLowerCase();\n\n    if (filter?.[nextValue] || nextValue.length <= 1) {\n      return applySearch(nextValue);\n    }\n\n    const longestMatch = findLongestMatch(nextValue, filter);\n\n    if (!longestMatch) {\n      // Can we even get here?\n      // If so, we need to search among all emojis\n      return applySearch(nextValue);\n    }\n\n    setFilterRef((current) =>\n      Object.assign(current, {\n        [nextValue]: filterEmojiObjectByKeyword(longestMatch, nextValue),\n      })\n    );\n    applySearch(nextValue);\n  }\n}\n\nfunction useApplySearch() {\n  const [, setSearchTerm] = useSearchTermState();\n  const PickerMainRef = usePickerMainRef();\n\n  return function applySearch(searchTerm: string) {\n    requestAnimationFrame(() => {\n      setSearchTerm(searchTerm ? searchTerm?.toLowerCase() : searchTerm).then(\n        () => {\n          scrollTo(PickerMainRef.current, 0);\n        }\n      );\n    });\n  };\n}\n\nfunction filterEmojiObjectByKeyword(\n  emojis: FilterDict,\n  keyword: string\n): FilterDict {\n  const filtered: FilterDict = {};\n\n  for (const unified in emojis) {\n    const emoji = emojis[unified];\n\n    if (hasMatch(emoji, keyword)) {\n      filtered[unified] = emoji;\n    }\n  }\n\n  return filtered;\n}\n\nfunction hasMatch(emoji: DataEmoji, keyword: string): boolean {\n  return emojiNames(emoji).some((name) => name.includes(keyword));\n}\n\nexport function useIsEmojiFiltered(): (unified: string) => boolean {\n  const { current: filter } = useFilterRef();\n  const [searchTerm] = useSearchTermState();\n\n  return (unified) => isEmojiFilteredBySearchTerm(unified, filter, searchTerm);\n}\n\nfunction isEmojiFilteredBySearchTerm(\n  unified: string,\n  filter: FilterState,\n  searchTerm: string\n): boolean {\n  if (!filter || !searchTerm) {\n    return false;\n  }\n\n  return !filter[searchTerm]?.[unified];\n}\n\nexport type FilterDict = Record<string, DataEmoji>;\n\nfunction findLongestMatch(\n  keyword: string,\n  dict: Record<string, FilterDict> | null\n): FilterDict | null {\n  if (!dict) {\n    return null;\n  }\n\n  if (dict[keyword]) {\n    return dict[keyword];\n  }\n\n  const longestMatchingKey = Object.keys(dict)\n    .sort((a, b) => b.length - a.length)\n    .find((key) => keyword.includes(key));\n\n  if (longestMatchingKey) {\n    return dict[longestMatchingKey];\n  }\n\n  return null;\n}\n\nexport function getNormalizedSearchTerm(str: string): string {\n  if (!str || typeof str !== 'string') {\n    return '';\n  }\n\n  return str.trim().toLowerCase();\n}\n","import { useEmojisThatFailedToLoadState } from '../components/context/PickerContext';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiUnified } from '../dataUtils/emojiSelectors';\n\nimport { useIsEmojiFiltered } from './useFilter';\n\nexport function useIsEmojiHidden(): (emoji: DataEmoji) => IsHiddenReturn {\n  const [emojisThatFailedToLoad] = useEmojisThatFailedToLoadState();\n  const isEmojiFiltered = useIsEmojiFiltered();\n\n  return (emoji: DataEmoji): IsHiddenReturn => {\n    const unified = emojiUnified(emoji);\n\n    const failedToLoad = emojisThatFailedToLoad.has(unified);\n    const filteredOut = isEmojiFiltered(unified);\n\n    return {\n      failedToLoad,\n      filteredOut,\n      hidden: failedToLoad || filteredOut\n    };\n  };\n}\n\ntype IsHiddenReturn = {\n  failedToLoad: boolean;\n  filteredOut: boolean;\n  hidden: boolean;\n};\n","import clsx from 'clsx';\nimport * as React from 'react';\n\ninterface Props\n  extends React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  > {\n  className?: string;\n}\n\nexport function Button(props: Props) {\n  return (\n    <button\n      type=\"button\"\n      {...props}\n      className={clsx('epr-btn', props.className)}\n    >\n      {props.children}\n    </button>\n  );\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { DataEmoji } from '../../dataUtils/DataTypes';\nimport {\n  emojiByUnified,\n  emojiHasVariations,\n  emojiName,\n  emojiNames,\n  emojiUrlByUnified,\n} from '../../dataUtils/emojiSelectors';\nimport { parseNativeEmoji } from '../../dataUtils/parseNativeEmoji';\nimport { EmojiStyle } from '../../types/exposedTypes';\nimport { Button } from '../atoms/Button';\nimport { useEmojisThatFailedToLoadState } from '../context/PickerContext';\nimport './Emoji.css';\n\ntype ClickableEmojiProps = Readonly<\n  BaseProps & {\n    hidden?: boolean;\n    showVariations?: boolean;\n    hiddenOnSearch?: boolean;\n    emoji: DataEmoji;\n  }\n>;\n\ntype BaseProps = {\n  emoji?: DataEmoji;\n  emojiStyle: EmojiStyle;\n  unified: string;\n  size?: number;\n  lazyLoad?: boolean;\n  getEmojiUrl?: GetEmojiUrl;\n};\n\nexport function ClickableEmoji({\n  emoji,\n  unified,\n  hidden,\n  hiddenOnSearch,\n  emojiStyle,\n  showVariations = true,\n  size,\n  lazyLoad,\n  getEmojiUrl,\n}: ClickableEmojiProps) {\n  const hasVariations = emojiHasVariations(emoji);\n\n  return (\n    <Button\n      className={clsx(ClassNames.emoji, {\n        [ClassNames.hidden]: hidden,\n        [ClassNames.hiddenOnSearch]: hiddenOnSearch,\n        [ClassNames.visible]: !hidden && !hiddenOnSearch,\n        [ClassNames.emojiHasVariatios]: hasVariations && showVariations,\n      })}\n      data-unified={unified}\n      // @ts-ignore - let's ignore the fact this is not a real react ref, ok?\n      aria-label={emojiName(emoji)}\n      data-full-name={emojiNames(emoji)}\n    >\n      <ViewOnlyEmoji\n        unified={unified}\n        emoji={emoji}\n        size={size}\n        emojiStyle={emojiStyle}\n        lazyLoad={lazyLoad}\n        getEmojiUrl={getEmojiUrl}\n      />\n    </Button>\n  );\n}\n\nexport function ViewOnlyEmoji({\n  emoji,\n  unified,\n  emojiStyle,\n  size,\n  lazyLoad,\n  getEmojiUrl = emojiUrlByUnified,\n}: BaseProps) {\n  const style = {} as React.CSSProperties;\n  if (size) {\n    style.width = style.height = style.fontSize = `${size}px`;\n  }\n\n  const emojiToRender = emoji ? emoji : emojiByUnified(unified);\n  if(!emojiToRender) {\n    return null\n  }\n\n  return (\n    <>\n      {emojiStyle === EmojiStyle.NATIVE ? (\n        <NativeEmoji unified={unified} style={style} />\n      ) : (\n        <EmojiImg\n          unified={unified}\n          style={style}\n          emoji={emojiToRender}\n          emojiStyle={emojiStyle}\n          lazyLoad={lazyLoad}\n          getEmojiUrl={getEmojiUrl}\n        />\n      )}\n    </>\n  );\n}\n\nfunction NativeEmoji({\n  unified,\n  style,\n}: {\n  unified: string;\n  style: React.CSSProperties;\n}) {\n  return (\n    <span\n      className={clsx(ClassNames.external, 'epr-emoji-native')}\n      data-unified={unified}\n      style={style}\n    >\n      {parseNativeEmoji(unified)}\n    </span>\n  );\n}\n\nfunction EmojiImg({\n  emoji,\n  unified,\n  emojiStyle,\n  style,\n  lazyLoad = false,\n  getEmojiUrl,\n}: {\n  emoji: DataEmoji;\n  unified: string;\n  emojiStyle: EmojiStyle;\n  style: React.CSSProperties;\n  lazyLoad?: boolean;\n  getEmojiUrl: GetEmojiUrl;\n}) {\n  const [, setEmojisThatFailedToLoad] = useEmojisThatFailedToLoadState();\n\n  return (\n    <img\n      src={getEmojiUrl(unified, emojiStyle)}\n      alt={emojiName(emoji)}\n      className={clsx(ClassNames.external, 'epr-emoji-img')}\n      loading={lazyLoad ? 'lazy' : 'eager'}\n      onError={onError}\n      style={style}\n    />\n  );\n\n  function onError() {\n    setEmojisThatFailedToLoad((prev) => new Set(prev).add(unified));\n  }\n}\n\nexport type GetEmojiUrl = (unified: string, style: EmojiStyle) => string;\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  CategoryConfig,\n  categoryFromCategoryConfig,\n  categoryNameFromCategoryConfig\n} from '../../config/categoryConfig';\nimport './EmojiCategory.css';\n\ntype Props = Readonly<{\n  categoryConfig: CategoryConfig;\n  children?: React.ReactNode;\n  hidden?: boolean;\n  hiddenOnSearch?: boolean;\n}>;\n\nexport function EmojiCategory({\n  categoryConfig,\n  children,\n  hidden,\n  hiddenOnSearch\n}: Props) {\n  const category = categoryFromCategoryConfig(categoryConfig);\n  const categoryName = categoryNameFromCategoryConfig(categoryConfig);\n\n  return (\n    <li\n      className={clsx(ClassNames.category, {\n        [ClassNames.hidden]: hidden,\n        [ClassNames.hiddenOnSearch]: hiddenOnSearch\n      })}\n      data-name={category}\n      aria-label={categoryName}\n    >\n      <div className={ClassNames.label}>{categoryName}</div>\n      <div className={ClassNames.categoryContent}>{children}</div>\n    </li>\n  );\n}\n","import * as React from 'react';\n\nimport { CategoryConfig } from '../../config/categoryConfig';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useSuggestedEmojisModeConfig,\n} from '../../config/useConfig';\nimport { emojiByUnified } from '../../dataUtils/emojiSelectors';\nimport { getsuggested } from '../../dataUtils/suggested';\nimport { useUpdateSuggested } from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\n\nimport { EmojiCategory } from './EmojiCategory';\n\ntype Props = Readonly<{\n  categoryConfig: CategoryConfig;\n}>;\n\nexport function Suggested({ categoryConfig }: Props) {\n  const [suggestedUpdated] = useUpdateSuggested();\n  const suggestedEmojisModeConfig = useSuggestedEmojisModeConfig();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n  const suggested = React.useMemo(\n    () => getsuggested(suggestedEmojisModeConfig) ?? [],\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [suggestedUpdated, suggestedEmojisModeConfig]\n  );\n  const emojiStyle = useEmojiStyleConfig();\n\n  return (\n    <EmojiCategory\n      categoryConfig={categoryConfig}\n      hiddenOnSearch\n      hidden={suggested.length === 0}\n    >\n      {suggested.map((suggestedItem) => {\n        const emoji = emojiByUnified(suggestedItem.original);\n\n        if (!emoji) {\n          return null;\n        }\n\n        return (\n          <ClickableEmoji\n            showVariations={false}\n            unified={suggestedItem.unified}\n            emojiStyle={emojiStyle}\n            emoji={emoji}\n            key={suggestedItem.unified}\n            getEmojiUrl={getEmojiUrl}\n          />\n        );\n      })}\n    </EmojiCategory>\n  );\n}\n","import * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  Categories,\n  CategoryConfig,\n  categoryFromCategoryConfig\n} from '../../config/categoryConfig';\nimport {\n  useCategoriesConfig,\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useLazyLoadEmojisConfig\n} from '../../config/useConfig';\nimport { emojisByCategory, emojiUnified } from '../../dataUtils/emojiSelectors';\nimport { useIsEmojiDisallowed } from '../../hooks/useDisallowedEmojis';\nimport { useIsEmojiHidden } from '../../hooks/useIsEmojiHidden';\nimport {\n  useActiveSkinToneState,\n  useIsPastInitialLoad\n} from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\n\nimport { EmojiCategory } from './EmojiCategory';\nimport { Suggested } from './Suggested';\n\nimport './EmojiList.css';\n\nexport function EmojiList() {\n  const categories = useCategoriesConfig();\n\n  return (\n    <ul className={ClassNames.emojiList}>\n      {categories.map((categoryConfig, index) => {\n        const category = categoryFromCategoryConfig(categoryConfig);\n\n        if (category === Categories.SUGGESTED) {\n          return <Suggested key={category} categoryConfig={categoryConfig} />;\n        }\n\n        return (\n          <RenderCategory\n            key={category}\n            index={index}\n            category={category}\n            categoryConfig={categoryConfig}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction RenderCategory({\n  index,\n  category,\n  categoryConfig\n}: {\n  index: number;\n  category: Categories;\n  categoryConfig: CategoryConfig;\n}) {\n  const isEmojiHidden = useIsEmojiHidden();\n  const lazyLoadEmojis = useLazyLoadEmojisConfig();\n  const emojiStyle = useEmojiStyleConfig();\n  const isPastInitialLoad = useIsPastInitialLoad();\n  const [activeSkinTone] = useActiveSkinToneState();\n  const isEmojiDisallowed = useIsEmojiDisallowed();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  // Small trick to defer the rendering of all emoji categories until the first category is visible\n  // This way the user gets to actually see something and not wait for the whole picker to render.\n  const emojisToPush =\n    !isPastInitialLoad && index > 1 ? [] : emojisByCategory(category);\n\n  let hiddenCounter = 0;\n\n  const emojis = emojisToPush.map(emoji => {\n    const unified = emojiUnified(emoji, activeSkinTone);\n    const { failedToLoad, filteredOut, hidden } = isEmojiHidden(emoji);\n\n    const isDisallowed = isEmojiDisallowed(emoji);\n\n    if (hidden || isDisallowed) {\n      hiddenCounter++;\n    }\n\n    if (isDisallowed) {\n      return null;\n    }\n\n    return (\n      <ClickableEmoji\n        key={unified}\n        emoji={emoji}\n        unified={unified}\n        hidden={failedToLoad}\n        hiddenOnSearch={filteredOut}\n        emojiStyle={emojiStyle}\n        lazyLoad={lazyLoadEmojis}\n        getEmojiUrl={getEmojiUrl}\n      />\n    );\n  });\n\n  return (\n    <EmojiCategory\n      categoryConfig={categoryConfig}\n      // Indicates that there are no visible emojis\n      // Hence, the category should be hidden\n      hidden={hiddenCounter === emojis.length}\n    >\n      {emojis}\n    </EmojiCategory>\n  );\n}\n","import {\n  elementCountInRow,\n  elementIndexInRow,\n  getElementInNextRow,\n  getElementInPrevRow,\n  getElementInRow,\n  hasNextRow,\n  rowNumber\n} from './elementPositionInRow';\nimport { focusElement } from './focusElement';\nimport { scrollEmojiAboveLabel } from './scrollTo';\nimport {\n  allVisibleEmojis,\n  closestCategory,\n  firstVisibleEmoji,\n  lastVisibleEmoji,\n  nextCategory,\n  nextVisibleEmoji,\n  NullableElement,\n  prevCategory,\n  prevVisibleEmoji,\n  closestCategoryContent\n} from './selectors';\n\nexport function focusFirstVisibleEmoji(parent: NullableElement) {\n  const emoji = firstVisibleEmoji(parent);\n  focusElement(emoji);\n  scrollEmojiAboveLabel(emoji);\n}\n\nexport function focusAndClickFirstVisibleEmoji(parent: NullableElement) {\n  const firstEmoji = firstVisibleEmoji(parent);\n\n  focusElement(firstEmoji);\n  firstEmoji?.click();\n}\n\nexport function focusLastVisibleEmoji(parent: NullableElement) {\n  focusElement(lastVisibleEmoji(parent));\n}\n\nexport function focusNextVisibleEmoji(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const next = nextVisibleEmoji(element);\n\n  if (!next) {\n    return focusFirstVisibleEmoji(nextCategory(element));\n  }\n\n  focusElement(next);\n  scrollEmojiAboveLabel(next);\n}\n\nexport function focusPrevVisibleEmoji(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const prev = prevVisibleEmoji(element);\n\n  if (!prev) {\n    return focusLastVisibleEmoji(prevCategory(element));\n  }\n\n  focusElement(prev);\n  scrollEmojiAboveLabel(prev);\n}\n\nexport function focusVisibleEmojiOneRowUp(\n  element: NullableElement,\n  exitUp: () => void\n) {\n  if (!element) {\n    return;\n  }\n\n  const prev = visibleEmojiOneRowUp(element);\n\n  if (!prev) {\n    return exitUp();\n  }\n\n  focusElement(prev);\n  scrollEmojiAboveLabel(prev);\n}\n\nexport function focusVisibleEmojiOneRowDown(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const next = visibleEmojiOneRowDown(element);\n\n  return focusElement(next);\n}\n\nfunction visibleEmojiOneRowUp(element: HTMLElement) {\n  if (!element) {\n    return null;\n  }\n\n  const categoryContent = closestCategoryContent(element);\n  const category = closestCategory(categoryContent);\n  const indexInRow = elementIndexInRow(categoryContent, element);\n  const row = rowNumber(categoryContent, element);\n  const countInRow = elementCountInRow(categoryContent, element);\n\n  if (row === 0) {\n    const prevVisibleCategory = prevCategory(category);\n\n    if (!prevVisibleCategory) {\n      return null;\n    }\n\n    return getElementInRow(\n      allVisibleEmojis(prevVisibleCategory),\n      -1, // last row\n      countInRow,\n      indexInRow\n    );\n  }\n\n  return getElementInPrevRow(\n    allVisibleEmojis(categoryContent),\n    row,\n    countInRow,\n    indexInRow\n  );\n}\n\nfunction visibleEmojiOneRowDown(element: HTMLElement) {\n  if (!element) {\n    return null;\n  }\n\n  const categoryContent = closestCategoryContent(element);\n  const category = closestCategory(categoryContent);\n  const indexInRow = elementIndexInRow(categoryContent, element);\n  const row = rowNumber(categoryContent, element);\n  const countInRow = elementCountInRow(categoryContent, element);\n  if (!hasNextRow(categoryContent, element)) {\n    const nextVisibleCategory = nextCategory(category);\n\n    if (!nextVisibleCategory) {\n      return null;\n    }\n\n    return getElementInRow(\n      allVisibleEmojis(nextVisibleCategory),\n      0,\n      countInRow,\n      indexInRow\n    );\n  }\n\n  const itemInNextRow = getElementInNextRow(\n    allVisibleEmojis(categoryContent),\n    row,\n    countInRow,\n    indexInRow\n  );\n\n  return itemInNextRow;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\nimport { useEffect } from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { focusFirstVisibleEmoji } from '../../DomUtils/keyboardNavigation';\nimport {\n  buttonFromTarget,\n  elementHeight,\n  emojiTrueOffsetTop,\n  emojiTruOffsetLeft\n} from '../../DomUtils/selectors';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig\n} from '../../config/useConfig';\nimport {\n  emojiHasVariations,\n  emojiUnified,\n  emojiVariations\n} from '../../dataUtils/emojiSelectors';\nimport {\n  useAnchoredEmojiRef,\n  useBodyRef,\n  useSetAnchoredEmojiRef,\n  useVariationPickerRef\n} from '../context/ElementRefContext';\nimport { useEmojiVariationPickerState } from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\nimport './EmojiVariationPicker.css';\n\nenum Direction {\n  Up,\n  Down\n}\n\nexport function EmojiVariationPicker() {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  const VariationPickerRef = useVariationPickerRef();\n  const [emoji] = useEmojiVariationPickerState();\n  const emojiStyle = useEmojiStyleConfig();\n\n  const { getTop, getMenuDirection } = useVariationPickerTop(\n    VariationPickerRef\n  );\n  const setAnchoredEmojiRef = useSetAnchoredEmojiRef();\n  const getPointerStyle = usePointerStyle(VariationPickerRef);\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n  const visible =\n    emoji &&\n    button &&\n    emojiHasVariations(emoji) &&\n    button.classList.contains(ClassNames.emojiHasVariatios);\n\n  useEffect(() => {\n    if (!visible) {\n      return;\n    }\n\n    focusFirstVisibleEmoji(VariationPickerRef.current);\n  }, [VariationPickerRef, visible, AnchoredEmojiRef]);\n\n  let top, pointerStyle;\n\n  if (!visible && AnchoredEmojiRef.current) {\n    setAnchoredEmojiRef(null);\n  } else {\n    top = getTop();\n    pointerStyle = getPointerStyle();\n  }\n\n  return (\n    <div\n      ref={VariationPickerRef}\n      className={clsx(ClassNames.variationPicker, {\n        visible,\n        'pointing-up': getMenuDirection() === Direction.Down\n      })}\n      style={{ top }}\n    >\n      {visible && emoji\n        ? [emojiUnified(emoji)]\n            .concat(emojiVariations(emoji))\n            .slice(0, 6)\n            .map(unified => (\n              <ClickableEmoji\n                key={unified}\n                emoji={emoji}\n                unified={unified}\n                emojiStyle={emojiStyle}\n                showVariations={false}\n                getEmojiUrl={getEmojiUrl}\n              />\n            ))\n        : null}\n      <div className=\"epr-emoji-pointer\" style={pointerStyle} />\n    </div>\n  );\n}\n\nfunction usePointerStyle(VariationPickerRef: React.RefObject<HTMLElement>) {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  return function getPointerStyle() {\n    const style: React.CSSProperties = {};\n    if (!VariationPickerRef.current) {\n      return style;\n    }\n\n    if (AnchoredEmojiRef.current) {\n      const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n      const offsetLeft = emojiTruOffsetLeft(button);\n\n      if (!button) {\n        return style;\n      }\n\n      // half of the button\n      style.left = offsetLeft + button?.clientWidth / 2;\n    }\n\n    return style;\n  };\n}\n\nfunction useVariationPickerTop(\n  VariationPickerRef: React.RefObject<HTMLElement>\n) {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  const BodyRef = useBodyRef();\n  let direction = Direction.Up;\n\n  return {\n    getMenuDirection,\n    getTop\n  };\n\n  function getMenuDirection() {\n    return direction;\n  }\n\n  function getTop() {\n    direction = Direction.Up;\n    let emojiOffsetTop = 0;\n\n    if (!VariationPickerRef.current) {\n      return 0;\n    }\n\n    const height = elementHeight(VariationPickerRef.current);\n\n    if (AnchoredEmojiRef.current) {\n      const bodyRef = BodyRef.current;\n      const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n      const buttonHeight = elementHeight(button);\n\n      emojiOffsetTop = emojiTrueOffsetTop(button);\n\n      const scrollTop = bodyRef?.scrollTop ?? 0;\n\n      if (scrollTop > emojiOffsetTop - height) {\n        direction = Direction.Down;\n        emojiOffsetTop += buttonHeight + height;\n      }\n    }\n\n    return emojiOffsetTop - height;\n  }\n}\n","import * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { useOnMouseMove } from '../../hooks/useDisallowMouseMove';\nimport { useMouseDownHandlers } from '../../hooks/useMouseDownHandlers';\nimport { useOnScroll } from '../../hooks/useOnScroll';\nimport { useBodyRef } from '../context/ElementRefContext';\n\nimport { EmojiList } from './EmojiList';\nimport { EmojiVariationPicker } from './EmojiVariationPicker';\n\nimport './Body.css';\n\nexport function Body() {\n  const BodyRef = useBodyRef();\n  useOnScroll(BodyRef);\n  useMouseDownHandlers(BodyRef);\n  useOnMouseMove();\n\n  return (\n    <div className={ClassNames.scrollBody} ref={BodyRef}>\n      <EmojiVariationPicker />\n      <EmojiList />\n    </div>\n  );\n}\n","import { useEffect } from 'react';\n\nimport { ElementRef } from '../components/context/ElementRefContext';\n\nimport { useCloseAllOpenToggles } from './useCloseAllOpenToggles';\n\nexport function useOnScroll(BodyRef: ElementRef) {\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  useEffect(() => {\n    const bodyRef = BodyRef.current;\n    if (!bodyRef) {\n      return;\n    }\n\n    bodyRef.addEventListener('scroll', onScroll, {\n      passive: true\n    });\n\n    function onScroll() {\n      closeAllOpenToggles();\n    }\n\n    return () => {\n      bodyRef?.removeEventListener('scroll', onScroll);\n    };\n  }, [BodyRef, closeAllOpenToggles]);\n}\n","import { useSkinTonePickerLocationConfig } from '../config/useConfig';\nimport { SkinTonePickerLocation } from '../types/exposedTypes';\n\nexport function useShouldShowSkinTonePicker() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return function shouldShowSkinTonePicker(location: SkinTonePickerLocation) {\n    return skinTonePickerLocationConfig === location;\n  };\n}\n\nexport function useIsSkinToneInSearch() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return skinTonePickerLocationConfig === SkinTonePickerLocation.SEARCH;\n}\n\nexport function useIsSkinToneInPreview() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return skinTonePickerLocationConfig === SkinTonePickerLocation.PREVIEW;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\nimport './Flex.css';\n\nexport enum FlexDirection {\n  ROW = 'FlexRow',\n  COLUMN = 'FlexColumn'\n}\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n  direction?: FlexDirection;\n}>;\n\nexport default function Flex({\n  children,\n  className,\n  style = {},\n  direction = FlexDirection.ROW\n}: Props) {\n  return (\n    <div style={{ ...style }} className={clsx('Flex', className, direction)}>\n      {children}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\n\ntype Props = Readonly<{\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Space({ className, style = {} }: Props) {\n  return <div style={{ flex: 1, ...style }} className={clsx(className)} />;\n}\n","import * as React from 'react';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Absolute({ children, className, style }: Props) {\n  return (\n    <div style={{ ...style, position: 'absolute' }} className={className}>\n      {children}\n    </div>\n  );\n}\n","import * as React from 'react';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Relative({ children, className, style }: Props) {\n  return (\n    <div style={{ ...style, position: 'relative' }} className={className}>\n      {children}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { useSkinTonesDisabledConfig } from '../../config/useConfig';\nimport skinToneVariations, {\n  skinTonesNamed\n} from '../../data/skinToneVariations';\nimport { useCloseAllOpenToggles } from '../../hooks/useCloseAllOpenToggles';\nimport { useFocusSearchInput } from '../../hooks/useFocus';\nimport { SkinTones } from '../../types/exposedTypes';\nimport Absolute from '../Layout/Absolute';\nimport Relative from '../Layout/Relative';\nimport { Button } from '../atoms/Button';\nimport { useSkinTonePickerRef } from '../context/ElementRefContext';\nimport {\n  useActiveSkinToneState,\n  useSkinToneFanOpenState\n} from '../context/PickerContext';\nimport './SkinTonePicker.css';\n\nconst ITEM_SIZE = 28;\n\ntype Props = {\n  direction?: SkinTonePickerDirection;\n};\n\nexport function SkinTonePickerMenu() {\n  return (\n    <Relative style={{ height: ITEM_SIZE }}>\n      <Absolute style={{ bottom: 0, right: 0 }}>\n        <SkinTonePicker direction={SkinTonePickerDirection.VERTICAL} />\n      </Absolute>\n    </Relative>\n  );\n}\n\nexport function SkinTonePicker({\n  direction = SkinTonePickerDirection.HORIZONTAL\n}: Props) {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n  const isDisabled = useSkinTonesDisabledConfig();\n  const [isOpen, setIsOpen] = useSkinToneFanOpenState();\n  const [activeSkinTone, setActiveSkinTone] = useActiveSkinToneState();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const focusSearchInput = useFocusSearchInput();\n\n  if (isDisabled) {\n    return null;\n  }\n\n  const fullWidth = `${ITEM_SIZE * skinToneVariations.length}px`;\n\n  const expandedSize = isOpen ? fullWidth : ITEM_SIZE + 'px';\n\n  const vertical = direction === SkinTonePickerDirection.VERTICAL;\n\n  return (\n    <Relative\n      className={clsx('epr-skin-tones', direction, {\n        [ClassNames.open]: isOpen\n      })}\n      style={\n        vertical\n          ? { flexBasis: expandedSize, height: expandedSize }\n          : { flexBasis: expandedSize }\n      }\n    >\n      <div className=\"epr-skin-tone-select\" ref={SkinTonePickerRef}>\n        {skinToneVariations.map((skinToneVariation, i) => {\n          const active = skinToneVariation === activeSkinTone;\n          return (\n            <Button\n              style={{\n                transform: clsx(\n                  vertical\n                    ? `translateY(-${i * (isOpen ? ITEM_SIZE : 0)}px)`\n                    : `translateX(-${i * (isOpen ? ITEM_SIZE : 0)}px)`,\n                  isOpen && active && 'scale(1.3)'\n                )\n              }}\n              onClick={() => {\n                if (isOpen) {\n                  setActiveSkinTone(skinToneVariation);\n                  focusSearchInput();\n                } else {\n                  setIsOpen(true);\n                }\n                closeAllOpenToggles();\n              }}\n              key={skinToneVariation}\n              className={clsx(`epr-tone-${skinToneVariation}`, 'epr-tone', {\n                [ClassNames.active]: active\n              })}\n              tabIndex={isOpen ? 0 : -1}\n              aria-pressed={active}\n              aria-label={`Skin tone ${\n                skinTonesNamed[skinToneVariation as SkinTones]\n              }`}\n            ></Button>\n          );\n        })}\n      </div>\n    </Relative>\n  );\n}\n\nexport enum SkinTonePickerDirection {\n  VERTICAL = ClassNames.vertical,\n  HORIZONTAL = ClassNames.horizontal\n}\n","import * as React from 'react';\nimport { useState } from 'react';\n\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  usePreviewConfig\n} from '../../config/useConfig';\nimport {\n  emojiByUnified,\n  emojiName,\n  emojiUnified\n} from '../../dataUtils/emojiSelectors';\nimport { useEmojiPreviewEvents } from '../../hooks/useEmojiPreviewEvents';\nimport { useIsSkinToneInPreview } from '../../hooks/useShouldShowSkinTonePicker';\nimport Flex from '../Layout/Flex';\nimport Space from '../Layout/Space';\nimport { useEmojiVariationPickerState } from '../context/PickerContext';\nimport { ViewOnlyEmoji } from '../emoji/Emoji';\nimport './Preview.css';\nimport { SkinTonePickerMenu } from '../header/SkinTonePicker';\n\nexport function Preview() {\n  const previewConfig = usePreviewConfig();\n  const isSkinToneInPreview = useIsSkinToneInPreview();\n\n  if (!previewConfig.showPreview) {\n    return null;\n  }\n\n  return (\n    <Flex className=\"epr-preview\">\n      <PreviewBody />\n      <Space />\n      {isSkinToneInPreview ? <SkinTonePickerMenu /> : null}\n    </Flex>\n  );\n}\n\nexport function PreviewBody() {\n  const previewConfig = usePreviewConfig();\n  const [previewEmoji, setPreviewEmoji] = useState<PreviewEmoji>(null);\n  const emojiStyle = useEmojiStyleConfig();\n  const [variationPickerEmoji] = useEmojiVariationPickerState();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  useEmojiPreviewEvents(previewConfig.showPreview, setPreviewEmoji);\n\n  const emoji = emojiByUnified(previewEmoji?.originalUnified);\n\n  const show = emoji != null && previewEmoji != null;\n\n  return <PreviewContent />;\n\n  function PreviewContent() {\n    const defaultEmoji = variationPickerEmoji ?? emojiByUnified(previewConfig.defaultEmoji)\n    if (!defaultEmoji) {\n      return null\n    }\n    const defaultText = variationPickerEmoji\n      ? emojiName(variationPickerEmoji)\n      : previewConfig.defaultCaption;\n\n    return (\n      <>\n        <div>\n          {show ? (\n            <ViewOnlyEmoji\n              unified={previewEmoji?.unified as string}\n              emoji={emoji}\n              emojiStyle={emojiStyle}\n              size={45}\n              getEmojiUrl={getEmojiUrl}\n            />\n          ) : defaultEmoji ? (\n            <ViewOnlyEmoji\n              unified={emojiUnified(defaultEmoji)}\n              emoji={defaultEmoji}\n              emojiStyle={emojiStyle}\n              size={45}\n              getEmojiUrl={getEmojiUrl}\n            />\n          ) : null}\n        </div>\n        {show ? (\n          <div className=\"epr-preview-emoji-label\">\n            {emojiName(emoji)}\n          </div>\n        ) : (\n          <div className=\"epr-preview-emoji-label\">{defaultText}</div>\n        )}\n      </>\n    );\n  }\n}\n\nexport type PreviewEmoji = null | {\n  unified: string;\n  originalUnified: string;\n};\n","import * as React from 'react';\nimport { useEffect } from 'react';\n\nimport { focusElement } from '../DomUtils/focusElement';\nimport {\n  buttonFromTarget,\n  originalUnifiedFromEmojiElement,\n  unifiedFromEmojiElement\n} from '../DomUtils/selectors';\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { PreviewEmoji } from '../components/footer/Preview';\n\nimport {\n  useAllowMouseMove,\n  useIsMouseDisallowed\n} from './useDisallowMouseMove';\n\nexport function useEmojiPreviewEvents(\n  allow: boolean,\n  setPreviewEmoji: React.Dispatch<React.SetStateAction<PreviewEmoji>>\n) {\n  const BodyRef = useBodyRef();\n  const isMouseDisallowed = useIsMouseDisallowed();\n  const allowMouseMove = useAllowMouseMove();\n\n  useEffect(() => {\n    if (!allow) {\n      return;\n    }\n    const bodyRef = BodyRef.current;\n\n    bodyRef?.addEventListener('keydown', onEscape, {\n      passive: true\n    });\n\n    bodyRef?.addEventListener('mouseover', onMouseOver, true);\n\n    bodyRef?.addEventListener('focus', onEnter, true);\n\n    bodyRef?.addEventListener('mouseout', onLeave, {\n      passive: true\n    });\n    bodyRef?.addEventListener('blur', onLeave, true);\n\n\n    function onEnter(e: FocusEvent) {\n      const button = buttonFromTarget(e.target as HTMLElement);\n\n      if (!button) {\n        return onLeave();\n      }\n\n      const unified = unifiedFromEmojiElement(button);\n      const originalUnified = originalUnifiedFromEmojiElement(button);\n\n      if (!unified || !originalUnified) {\n        return onLeave();\n      }\n\n      setPreviewEmoji({\n        unified,\n        originalUnified\n      });\n    }\n    function onLeave(e?: FocusEvent | MouseEvent) {\n      if (e) {\n        const relatedTarget = e.relatedTarget as HTMLElement;\n\n        if (!buttonFromTarget(relatedTarget)) {\n          return setPreviewEmoji(null);\n        }\n      }\n\n      setPreviewEmoji(null);\n    }\n    function onEscape(e: KeyboardEvent) {\n      if (e.key === 'Escape') {\n        setPreviewEmoji(null);\n      }\n    }\n\n    function onMouseOver(e: MouseEvent) {\n      if (isMouseDisallowed()) {\n        return;\n      }\n\n      const button = buttonFromTarget(e.target as HTMLElement);\n\n      if (button) {\n        focusElement(button);\n      }\n    }\n\n\n    return () => {\n      bodyRef?.removeEventListener('mouseover', onMouseOver);\n      bodyRef?.removeEventListener('mouseout', onLeave);\n      bodyRef?.removeEventListener('focus', onEnter, true);\n      bodyRef?.removeEventListener('blur', onLeave, true);\n      bodyRef?.removeEventListener('keydown', onEscape);\n    };\n  }, [BodyRef, allow, setPreviewEmoji, isMouseDisallowed, allowMouseMove]);\n}\n","export function categoryNameFromDom($category: Element | null): string | null {\n  return $category?.getAttribute('data-name') ?? null;\n}\n","import { useSearchTermState } from '../components/context/PickerContext';\n\nexport default function useIsSearchMode(): boolean {\n  const [searchTerm] = useSearchTermState();\n\n  return !!searchTerm;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport './CategoryNavigation.css';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  categoryFromCategoryConfig,\n  categoryNameFromCategoryConfig\n} from '../../config/categoryConfig';\nimport { useCategoriesConfig } from '../../config/useConfig';\nimport { useActiveCategoryScrollDetection } from '../../hooks/useActiveCategoryScrollDetection';\nimport useIsSearchMode from '../../hooks/useIsSearchMode';\nimport { useScrollCategoryIntoView } from '../../hooks/useScrollCategoryIntoView';\nimport { Button } from '../atoms/Button';\nimport { useCategoryNavigationRef } from '../context/ElementRefContext';\n\nexport function CategoryNavigation() {\n  const [activeCategory, setActiveCategory] = useState<string | null>(null);\n  const scrollCategoryIntoView = useScrollCategoryIntoView();\n  useActiveCategoryScrollDetection(setActiveCategory);\n  const isSearchMode = useIsSearchMode();\n\n  const categoriesConfig = useCategoriesConfig();\n  const CategoryNavigationRef = useCategoryNavigationRef();\n\n  return (\n    <div className=\"epr-category-nav\" ref={CategoryNavigationRef}>\n      {categoriesConfig.map(categoryConfig => {\n        const category = categoryFromCategoryConfig(categoryConfig);\n        return (\n          <Button\n            tabIndex={isSearchMode ? -1 : 0}\n            className={clsx('epr-cat-btn', `epr-icn-${category}`, {\n              [ClassNames.active]: category === activeCategory\n            })}\n            key={category}\n            onClick={() => {\n              setActiveCategory(category);\n              scrollCategoryIntoView(category);\n            }}\n            aria-label={categoryNameFromCategoryConfig(categoryConfig)}\n          />\n        );\n      })}\n    </div>\n  );\n}\n","import { scrollTo } from '../DomUtils/scrollTo';\nimport { NullableElement } from '../DomUtils/selectors';\nimport {\n  useBodyRef,\n  usePickerMainRef\n} from '../components/context/ElementRefContext';\n\nexport function useScrollCategoryIntoView() {\n  const BodyRef = useBodyRef();\n  const PickerMainRef = usePickerMainRef();\n\n  return function scrollCategoryIntoView(category: string): void {\n    if (!BodyRef.current) {\n      return;\n    }\n    const $category = BodyRef.current?.querySelector(\n      `[data-name=\"${category}\"]`\n    ) as NullableElement;\n\n    if (!$category) {\n      return;\n    }\n\n    const offsetTop = $category.offsetTop || 0;\n\n    scrollTo(PickerMainRef.current, offsetTop);\n  };\n}\n","import { useEffect } from 'react';\n\nimport { categoryNameFromDom } from '../DomUtils/categoryNameFromDom';\nimport { asSelectors, ClassNames } from '../DomUtils/classNames';\nimport { useBodyRef } from '../components/context/ElementRefContext';\n\nexport function useActiveCategoryScrollDetection(\n  setActiveCategory: (category: string) => void\n) {\n  const BodyRef = useBodyRef();\n\n  useEffect(() => {\n    const visibleCategories = new Map();\n    const bodyRef = BodyRef.current;\n    const observer = new IntersectionObserver(\n      entries => {\n        if (!bodyRef) {\n          return;\n        }\n\n        for (const entry of entries) {\n          const id = categoryNameFromDom(entry.target);\n          visibleCategories.set(id, entry.intersectionRatio);\n        }\n\n        const ratios = Array.from(visibleCategories);\n        const lastCategory = ratios[ratios.length - 1];\n\n        if (lastCategory[1] == 1) {\n          return setActiveCategory(lastCategory[0]);\n        }\n\n        for (const [id, ratio] of ratios) {\n          if (ratio) {\n            setActiveCategory(id);\n            break;\n          }\n        }\n      },\n      {\n        threshold: [0, 1]\n      }\n    );\n    bodyRef?.querySelectorAll(asSelectors(ClassNames.category)).forEach(el => {\n      observer.observe(el);\n    });\n  }, [BodyRef, setActiveCategory]);\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\nimport { useState } from 'react';\n\nimport { asSelectors, ClassNames } from '../../DomUtils/classNames';\nimport {\n  useAutoFocusSearchConfig,\n  useSearchDisabledConfig,\n  useSearchPlaceHolderConfig\n} from '../../config/useConfig';\nimport { useCloseAllOpenToggles } from '../../hooks/useCloseAllOpenToggles';\nimport {\n  getNormalizedSearchTerm,\n  useClearSearch,\n  useFilter\n} from '../../hooks/useFilter';\nimport { useIsSkinToneInSearch } from '../../hooks/useShouldShowSkinTonePicker';\nimport Flex from '../Layout/Flex';\nimport Relative from '../Layout/Relative';\nimport { Button } from '../atoms/Button';\nimport { useSearchInputRef } from '../context/ElementRefContext';\n\nimport './Search.css';\nimport { SkinTonePicker } from './SkinTonePicker';\n\nexport function SearchContainer() {\n  const searchDisabled = useSearchDisabledConfig();\n\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n\n  if (searchDisabled) {\n    return null;\n  }\n\n  return (\n    <Flex className=\"epr-header-overlay\">\n      <Search />\n\n      {isSkinToneInSearch ? <SkinTonePicker /> : null}\n    </Flex>\n  );\n}\n\nexport function Search() {\n  const [inc, setInc] = useState(0);\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const SearchInputRef = useSearchInputRef();\n  const clearSearch = useClearSearch();\n  const placeholder = useSearchPlaceHolderConfig();\n  const autoFocus = useAutoFocusSearchConfig();\n  const { onChange } = useFilter();\n\n  const input = SearchInputRef?.current;\n  const value = input?.value;\n\n  return (\n    <Relative className=\"epr-search-container\">\n      <CssSearch value={value} />\n      <input\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus={autoFocus}\n        aria-label={'Type to search for an emoji'}\n        onFocus={closeAllOpenToggles}\n        className=\"epr-search\"\n        type=\"text\"\n        placeholder={placeholder}\n        onChange={event => {\n          setInc(inc + 1);\n          setTimeout(() => {\n            onChange(event?.target?.value ?? value);\n          });\n        }}\n        ref={SearchInputRef}\n      />\n      <div className=\"epr-icn-search\" />\n      <Button\n        className={clsx('epr-btn-clear-search', 'epr-visible-on-search-only')}\n        onClick={clearSearch}\n      >\n        <div className=\"epr-icn-clear-search\" />\n      </Button>\n    </Relative>\n  );\n}\n\nconst CSS_SEARCH_SELECTOR = `${asSelectors(\n  ClassNames.emojiPicker\n)} ${asSelectors(ClassNames.emojiList)}`;\n\nfunction CssSearch({ value }: { value: undefined | string }) {\n  if (!value) {\n    return null;\n  }\n\n  const searchQuery = `button[data-full-name*=\"${getNormalizedSearchTerm(\n    value\n  )}\"]`;\n\n  return (\n    <style>{`\n        ${CSS_SEARCH_SELECTOR} ${asSelectors(\n      ClassNames.category\n    )}:not(:has(${searchQuery})) {\n        display: none;\n      }\n\n        ${CSS_SEARCH_SELECTOR} button${asSelectors(\n      ClassNames.emoji\n    )}:not(${searchQuery}) {\n        display: none;\n      }\n  `}</style>\n  );\n}\n","import { useCallback, useEffect, useMemo } from 'react';\n\nimport { hasNextElementSibling } from '../DomUtils/elementPositionInRow';\nimport {\n  focusNextElementSibling,\n  focusPrevElementSibling\n} from '../DomUtils/focusElement';\nimport { getActiveElement } from '../DomUtils/getActiveElement';\nimport {\n  focusAndClickFirstVisibleEmoji,\n  focusFirstVisibleEmoji,\n  focusNextVisibleEmoji,\n  focusPrevVisibleEmoji,\n  focusVisibleEmojiOneRowDown,\n  focusVisibleEmojiOneRowUp\n} from '../DomUtils/keyboardNavigation';\nimport { useScrollTo } from '../DomUtils/scrollTo';\nimport { buttonFromTarget } from '../DomUtils/selectors';\nimport {\n  useBodyRef,\n  useCategoryNavigationRef,\n  usePickerMainRef,\n  useSearchInputRef,\n  useSkinTonePickerRef\n} from '../components/context/ElementRefContext';\nimport { useSkinToneFanOpenState } from '../components/context/PickerContext';\n\nimport {\n  useCloseAllOpenToggles,\n  useHasOpenToggles\n} from './useCloseAllOpenToggles';\nimport { useDisallowMouseMove } from './useDisallowMouseMove';\nimport { useAppendSearch, useClearSearch } from './useFilter';\nimport {\n  useFocusCategoryNavigation,\n  useFocusSearchInput,\n  useFocusSkinTonePicker\n} from './useFocus';\nimport useIsSearchMode from './useIsSearchMode';\nimport useSetVariationPicker from './useSetVariationPicker';\nimport {\n  useIsSkinToneInPreview,\n  useIsSkinToneInSearch\n} from './useShouldShowSkinTonePicker';\n\nenum KeyboardEvents {\n  ArrowDown = 'ArrowDown',\n  ArrowUp = 'ArrowUp',\n  ArrowLeft = 'ArrowLeft',\n  ArrowRight = 'ArrowRight',\n  Escape = 'Escape',\n  Enter = 'Enter',\n  Space = ' '\n}\n\nexport function useKeyboardNavigation() {\n  usePickerMainKeyboardEvents();\n  useSearchInputKeyboardEvents();\n  useSkinTonePickerKeyboardEvents();\n  useCategoryNavigationKeyboardEvents();\n  useBodyKeyboardEvents();\n}\n\nfunction usePickerMainKeyboardEvents() {\n  const PickerMainRef = usePickerMainRef();\n  const clearSearch = useClearSearch();\n  const scrollTo = useScrollTo();\n  const SearchInputRef = useSearchInputRef();\n  const focusSearchInput = useFocusSearchInput();\n  const hasOpenToggles = useHasOpenToggles();\n  const disallowMouseMove = useDisallowMouseMove();\n\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        disallowMouseMove();\n        switch (key) {\n          // eslint-disable-next-line no-fallthrough\n          case KeyboardEvents.Escape:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              return;\n            }\n            clearSearch();\n            scrollTo(0);\n            focusSearchInput();\n            break;\n        }\n      },\n    [\n      scrollTo,\n      clearSearch,\n      closeAllOpenToggles,\n      focusSearchInput,\n      hasOpenToggles,\n      disallowMouseMove\n    ]\n  );\n\n  useEffect(() => {\n    const current = PickerMainRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [PickerMainRef, SearchInputRef, scrollTo, onKeyDown]);\n}\n\nfunction useSearchInputKeyboardEvents() {\n  const focusSkinTonePicker = useFocusSkinTonePicker();\n  const PickerMainRef = usePickerMainRef();\n  const BodyRef = useBodyRef();\n  const SearchInputRef = useSearchInputRef();\n  const [, setSkinToneFanOpenState] = useSkinToneFanOpenState();\n  const goDownFromSearchInput = useGoDownFromSearchInput();\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        switch (key) {\n          case KeyboardEvents.ArrowRight:\n            if (!isSkinToneInSearch) {\n              return;\n            }\n            event.preventDefault();\n            setSkinToneFanOpenState(true);\n            focusSkinTonePicker();\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            goDownFromSearchInput();\n            break;\n          case KeyboardEvents.Enter:\n            event.preventDefault();\n            focusAndClickFirstVisibleEmoji(BodyRef.current);\n            break;\n        }\n      },\n    [\n      focusSkinTonePicker,\n      goDownFromSearchInput,\n      setSkinToneFanOpenState,\n      BodyRef,\n      isSkinToneInSearch\n    ]\n  );\n\n  useEffect(() => {\n    const current = SearchInputRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [PickerMainRef, SearchInputRef, onKeyDown]);\n}\n\nfunction useSkinTonePickerKeyboardEvents() {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n  const focusSearchInput = useFocusSearchInput();\n  const SearchInputRef = useSearchInputRef();\n  const goDownFromSearchInput = useGoDownFromSearchInput();\n  const [isOpen, setIsOpen] = useSkinToneFanOpenState();\n  const isSkinToneInPreview = useIsSkinToneInPreview();\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      // eslint-disable-next-line complexity\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        if (isSkinToneInSearch) {\n          switch (key) {\n            case KeyboardEvents.ArrowLeft:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusNextSkinTone(focusSearchInput);\n              break;\n            case KeyboardEvents.ArrowRight:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusPrevSkinTone();\n              break;\n            case KeyboardEvents.ArrowDown:\n              event.preventDefault();\n              if (isOpen) {\n                setIsOpen(false);\n              }\n              goDownFromSearchInput();\n              break;\n            default:\n              onType(event);\n              break;\n          }\n        }\n\n        if (isSkinToneInPreview) {\n          switch (key) {\n            case KeyboardEvents.ArrowUp:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusNextSkinTone(focusSearchInput);\n              break;\n            case KeyboardEvents.ArrowDown:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusPrevSkinTone();\n              break;\n            default:\n              onType(event);\n              break;\n          }\n        }\n      },\n    [\n      isOpen,\n      focusSearchInput,\n      setIsOpen,\n      goDownFromSearchInput,\n      onType,\n      isSkinToneInPreview,\n      isSkinToneInSearch\n    ]\n  );\n\n  useEffect(() => {\n    const current = SkinTonePickerRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [SkinTonePickerRef, SearchInputRef, isOpen, onKeyDown]);\n}\n\nfunction useCategoryNavigationKeyboardEvents() {\n  const focusSearchInput = useFocusSearchInput();\n  const CategoryNavigationRef = useCategoryNavigationRef();\n  const BodyRef = useBodyRef();\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        switch (key) {\n          case KeyboardEvents.ArrowUp:\n            event.preventDefault();\n            focusSearchInput();\n            break;\n          case KeyboardEvents.ArrowRight:\n            event.preventDefault();\n            focusNextElementSibling(getActiveElement());\n            break;\n          case KeyboardEvents.ArrowLeft:\n            event.preventDefault();\n            focusPrevElementSibling(getActiveElement());\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            focusFirstVisibleEmoji(BodyRef.current);\n            break;\n          default:\n            onType(event);\n            break;\n        }\n      },\n    [BodyRef, focusSearchInput, onType]\n  );\n\n  useEffect(() => {\n    const current = CategoryNavigationRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [CategoryNavigationRef, BodyRef, onKeyDown]);\n}\n\nfunction useBodyKeyboardEvents() {\n  const BodyRef = useBodyRef();\n  const goUpFromBody = useGoUpFromBody();\n  const setVariationPicker = useSetVariationPicker();\n  const hasOpenToggles = useHasOpenToggles();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      // eslint-disable-next-line complexity\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        const activeElement = buttonFromTarget(getActiveElement());\n\n        switch (key) {\n          case KeyboardEvents.ArrowRight:\n            event.preventDefault();\n            focusNextVisibleEmoji(activeElement);\n            break;\n          case KeyboardEvents.ArrowLeft:\n            event.preventDefault();\n            focusPrevVisibleEmoji(activeElement);\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              break;\n            }\n            focusVisibleEmojiOneRowDown(activeElement);\n            break;\n          case KeyboardEvents.ArrowUp:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              break;\n            }\n            focusVisibleEmojiOneRowUp(activeElement, goUpFromBody);\n            break;\n          case KeyboardEvents.Space:\n            event.preventDefault();\n            setVariationPicker(event.target as HTMLElement);\n            break;\n          default:\n            onType(event);\n            break;\n        }\n      },\n    [\n      goUpFromBody,\n      onType,\n      setVariationPicker,\n      hasOpenToggles,\n      closeAllOpenToggles\n    ]\n  );\n\n  useEffect(() => {\n    const current = BodyRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [BodyRef, onKeyDown]);\n}\n\nfunction useGoDownFromSearchInput() {\n  const focusCategoryNavigation = useFocusCategoryNavigation();\n  const isSearchMode = useIsSearchMode();\n  const BodyRef = useBodyRef();\n\n  return useCallback(\n    function goDownFromSearchInput() {\n      if (isSearchMode) {\n        return focusFirstVisibleEmoji(BodyRef.current);\n      }\n      return focusCategoryNavigation();\n    },\n    [BodyRef, focusCategoryNavigation, isSearchMode]\n  );\n}\n\nfunction useGoUpFromBody() {\n  const focusSearchInput = useFocusSearchInput();\n  const focusCategoryNavigation = useFocusCategoryNavigation();\n  const isSearchMode = useIsSearchMode();\n\n  return useCallback(\n    function goUpFromEmoji() {\n      if (isSearchMode) {\n        return focusSearchInput();\n      }\n      return focusCategoryNavigation();\n    },\n    [focusSearchInput, isSearchMode, focusCategoryNavigation]\n  );\n}\n\nfunction focusNextSkinTone(exitLeft: () => void) {\n  const currentSkinTone = getActiveElement();\n\n  if (!currentSkinTone) {\n    return;\n  }\n\n  if (!hasNextElementSibling(currentSkinTone)) {\n    exitLeft();\n  }\n\n  focusNextElementSibling(currentSkinTone);\n}\n\nfunction focusPrevSkinTone() {\n  const currentSkinTone = getActiveElement();\n\n  if (!currentSkinTone) {\n    return;\n  }\n\n  focusPrevElementSibling(currentSkinTone);\n}\n\nfunction useOnType() {\n  const appendSearch = useAppendSearch();\n  const focusSearchInput = useFocusSearchInput();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  return function onType(event: KeyboardEvent) {\n    const { key } = event;\n\n    if (hasModifier(event)) {\n      return;\n    }\n\n    if (key.match(/(^[a-zA-Z0-9]$){1}/)) {\n      event.preventDefault();\n      closeAllOpenToggles();\n      focusSearchInput();\n      appendSearch(key);\n    }\n  };\n}\n\nfunction hasModifier(event: KeyboardEvent): boolean {\n  const { metaKey, ctrlKey, altKey } = event;\n\n  return metaKey || ctrlKey || altKey;\n}\n","import * as React from 'react';\n\nimport Relative from '../Layout/Relative';\nimport { CategoryNavigation } from '../navigation/CategoryNavigation';\n\nimport './Header.css';\nimport { SearchContainer } from './Search';\n\nexport function Header() {\n  return (\n    <Relative className=\"epr-header\">\n      <SearchContainer />\n      <CategoryNavigation />\n    </Relative>\n  );\n}\n","import { NullableElement } from './selectors';\n\nexport function getActiveElement() {\n  return document.activeElement as NullableElement;\n}\n","import { GetEmojiUrl } from '../components/emoji/Emoji';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiUnified, emojiVariations } from '../dataUtils/emojiSelectors';\nimport { EmojiStyle } from '../types/exposedTypes';\n\nexport function preloadEmoji(\n  getEmojiUrl: GetEmojiUrl,\n  emoji: undefined | DataEmoji,\n  emojiStyle: EmojiStyle\n): void {\n  if (!emoji) {\n    return;\n  }\n\n  if (emojiStyle === EmojiStyle.NATIVE) {\n    return;\n  }\n\n  const unified = emojiUnified(emoji);\n\n  if (preloadedEmojs.has(unified)) {\n    return;\n  }\n\n  emojiVariations(emoji).forEach((variation) => {\n    const emojiUrl = getEmojiUrl(variation, emojiStyle);\n    preloadImage(emojiUrl);\n  });\n\n  preloadedEmojs.add(unified);\n}\n\nexport const preloadedEmojs: Set<string> = new Set();\n\nfunction preloadImage(url: string): void {\n  const image = new Image();\n  image.src = url;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { usePickerSizeConfig, useThemeConfig } from '../../config/useConfig';\nimport useIsSearchMode from '../../hooks/useIsSearchMode';\nimport { useKeyboardNavigation } from '../../hooks/useKeyboardNavigation';\nimport { useOnFocus } from '../../hooks/useOnFocus';\nimport { Theme } from '../../types/exposedTypes';\nimport { usePickerMainRef } from '../context/ElementRefContext';\nimport { PickerContextProvider } from '../context/PickerContext';\nimport './PickerMain.css';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n}>;\n\nexport default function PickerMain({ children }: Props) {\n  return (\n    <PickerContextProvider>\n      <PickerRootElement>{children}</PickerRootElement>\n    </PickerContextProvider>\n  );\n}\n\ntype RootProps = Readonly<{\n  children: React.ReactNode;\n}>;\n\nfunction PickerRootElement({ children }: RootProps) {\n  const theme = useThemeConfig();\n  const searchModeActive = useIsSearchMode();\n  const PickerMainRef = usePickerMainRef();\n  const { height, width } = usePickerSizeConfig();\n\n  useKeyboardNavigation();\n  useOnFocus();\n\n  const style = {\n    height,\n    width\n  };\n\n  return (\n    <aside\n      className={clsx(ClassNames.emojiPicker, 'epr-main', {\n        [ClassNames.searchActive]: searchModeActive,\n        'epr-dark-theme': theme === Theme.DARK\n      })}\n      ref={PickerMainRef}\n      style={style}\n    >\n      {children}\n    </aside>\n  );\n}\n","import { useEffect } from 'react';\n\nimport { buttonFromTarget, emojiFromElement } from '../DomUtils/selectors';\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { useEmojiStyleConfig, useGetEmojiUrlConfig } from '../config/useConfig';\nimport { emojiHasVariations } from '../dataUtils/emojiSelectors';\nimport { EmojiStyle } from '../types/exposedTypes';\n\nimport { preloadEmoji } from './preloadEmoji';\n\nexport function useOnFocus() {\n  const BodyRef = useBodyRef();\n  const emojiStyle = useEmojiStyleConfig();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  useEffect(() => {\n    if (emojiStyle === EmojiStyle.NATIVE) {\n      return;\n    }\n\n    const bodyRef = BodyRef.current;\n\n    bodyRef?.addEventListener('focusin', onFocus);\n\n    return () => {\n      bodyRef?.removeEventListener('focusin', onFocus);\n    };\n\n    function onFocus(event: FocusEvent) {\n      const button = buttonFromTarget(event.target as HTMLElement);\n\n      if (!button) {\n        return;\n      }\n\n      const [emoji] = emojiFromElement(button);\n\n      if (!emoji) {\n        return;\n      }\n\n      if (emojiHasVariations(emoji)) {\n        preloadEmoji(getEmojiUrl, emoji, emojiStyle);\n      }\n    }\n  }, [BodyRef, emojiStyle, getEmojiUrl]);\n}\n","import * as React from 'react';\n\nimport { Body } from './components/body/Body';\nimport { ElementRefContextProvider } from './components/context/ElementRefContext';\nimport { PickerConfigProvider } from './components/context/PickerConfigContext';\nimport { Preview } from './components/footer/Preview';\nimport { Header } from './components/header/Header';\nimport PickerMain from './components/main/PickerMain';\nimport { PickerConfig } from './config/config';\nimport './EmojiPickerReact.css';\n\nexport interface Props extends PickerConfig {}\n\nexport default function EmojiPicker(props: Props) {\n  return (\n    <ElementRefContextProvider>\n      <PickerConfigProvider {...props}>\n        <PickerMain>\n          <Header />\n          <Body />\n          <Preview />\n        </PickerMain>\n      </PickerConfigProvider>\n    </ElementRefContextProvider>\n  );\n}\n","import * as React from 'react';\n\nexport default class ErrorBoundary extends React.Component<\n  { children: React.ReactNode },\n  { hasError: boolean }\n> {\n  constructor(props: { children: React.ReactNode }) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: any) {\n    // eslint-disable-next-line no-console\n    console.error('Emoji Picker React failed to render:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return null;\n    }\n\n    return this.props.children;\n  }\n}\n","import * as React from 'react';\n\nimport EmojiPickerReact from './EmojiPickerReact';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { PickerConfig } from './config/config';\n\nexport { ExportedEmoji as Emoji } from './components/emoji/ExportedEmoji';\n\nexport {\n  EmojiStyle,\n  SkinTones,\n  Theme,\n  Categories,\n  EmojiClickData,\n  SuggestionMode,\n  SkinTonePickerLocation\n} from './types/exposedTypes';\n\nexport interface Props extends PickerConfig {}\n\nexport default function EmojiPicker(props: Props) {\n  return (\n    <ErrorBoundary>\n      <EmojiPickerReact {...props} />\n    </ErrorBoundary>\n  );\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, NavLink } from 'react-router-dom';\n\nlet hashFragment = '';\nlet observer = null;\nlet asyncTimerId = null;\nlet scrollFunction = null;\n\nfunction reset() {\n  hashFragment = '';\n  if (observer !== null) observer.disconnect();\n  if (asyncTimerId !== null) {\n    window.clearTimeout(asyncTimerId);\n    asyncTimerId = null;\n  }\n}\n\nfunction isInteractiveElement(element) {\n  const formTags = ['BUTTON', 'INPUT', 'SELECT', 'TEXTAREA'];\n  const linkTags = ['A', 'AREA'];\n  return (\n    (formTags.includes(element.tagName) && !element.hasAttribute('disabled')) ||\n    (linkTags.includes(element.tagName) && element.hasAttribute('href'))\n  );\n}\n\nfunction getElAndScroll() {\n  let element = null;\n  if (hashFragment === '#') {\n    // use document.body instead of document.documentElement because of a bug in smoothscroll-polyfill in safari\n    // see https://github.com/iamdustan/smoothscroll/issues/138\n    // while smoothscroll-polyfill is not included, it is the recommended way to implement smoothscroll\n    // in browsers that don't natively support el.scrollIntoView({ behavior: 'smooth' })\n    element = document.body;\n  } else {\n    // check for element with matching id before assume '#top' is the top of the document\n    // see https://html.spec.whatwg.org/multipage/browsing-the-web.html#target-element\n    const id = hashFragment.replace('#', '');\n    element = document.getElementById(id);\n    if (element === null && hashFragment === '#top') {\n      // see above comment for why document.body instead of document.documentElement\n      element = document.body;\n    }\n  }\n\n  if (element !== null) {\n    scrollFunction(element);\n\n    // update focus to where the page is scrolled to\n    // unfortunately this doesn't work in safari (desktop and iOS) when blur() is called\n    let originalTabIndex = element.getAttribute('tabindex');\n    if (originalTabIndex === null && !isInteractiveElement(element)) {\n      element.setAttribute('tabindex', -1);\n    }\n    element.focus({ preventScroll: true });\n    if (originalTabIndex === null && !isInteractiveElement(element)) {\n      // for some reason calling blur() in safari resets the focus region to where it was previously,\n      // if blur() is not called it works in safari, but then are stuck with default focus styles\n      // on an element that otherwise might never had focus styles applied, so not an option\n      element.blur();\n      element.removeAttribute('tabindex');\n    }\n\n    reset();\n    return true;\n  }\n  return false;\n}\n\nfunction hashLinkScroll(timeout) {\n  // Push onto callback queue so it runs after the DOM is updated\n  window.setTimeout(() => {\n    if (getElAndScroll() === false) {\n      if (observer === null) {\n        observer = new MutationObserver(getElAndScroll);\n      }\n      observer.observe(document, {\n        attributes: true,\n        childList: true,\n        subtree: true,\n      });\n      // if the element doesn't show up in specified timeout or 10 seconds, stop checking\n      asyncTimerId = window.setTimeout(() => {\n        reset();\n      }, timeout || 10000);\n    }\n  }, 0);\n}\n\nexport function genericHashLink(As) {\n  return React.forwardRef((props, ref) => {\n    let linkHash = '';\n    if (typeof props.to === 'string' && props.to.includes('#')) {\n      linkHash = `#${props.to.split('#').slice(1).join('#')}`;\n    } else if (\n      typeof props.to === 'object' &&\n      typeof props.to.hash === 'string'\n    ) {\n      linkHash = props.to.hash;\n    }\n\n    const passDownProps = {};\n    if (As === NavLink) {\n      passDownProps.isActive = (match, location) =>\n        match && match.isExact && location.hash === linkHash;\n    }\n\n    function handleClick(e) {\n      reset();\n      hashFragment = props.elementId ? `#${props.elementId}` : linkHash;\n      if (props.onClick) props.onClick(e);\n      if (\n        hashFragment !== '' &&\n        // ignore non-vanilla click events, same as react-router\n        // below logic adapted from react-router: https://github.com/ReactTraining/react-router/blob/fc91700e08df8147bd2bb1be19a299cbb14dbcaa/packages/react-router-dom/modules/Link.js#L43-L48\n        !e.defaultPrevented && // onClick prevented default\n        e.button === 0 && // ignore everything but left clicks\n        (!props.target || props.target === '_self') && // let browser handle \"target=_blank\" etc\n        !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) // ignore clicks with modifier keys\n      ) {\n        scrollFunction =\n          props.scroll ||\n          ((el) =>\n            props.smooth\n              ? el.scrollIntoView({ behavior: 'smooth' })\n              : el.scrollIntoView());\n        hashLinkScroll(props.timeout);\n      }\n    }\n    const { scroll, smooth, timeout, elementId, ...filteredProps } = props;\n    return (\n      <As {...passDownProps} {...filteredProps} onClick={handleClick} ref={ref}>\n        {props.children}\n      </As>\n    );\n  });\n}\n\nexport const HashLink = genericHashLink(Link);\n\nexport const NavHashLink = genericHashLink(NavLink);\n\nif (process.env.NODE_ENV !== 'production') {\n  HashLink.displayName = 'HashLink';\n  NavHashLink.displayName = 'NavHashLink';\n\n  const propTypes = {\n    onClick: PropTypes.func,\n    children: PropTypes.node,\n    scroll: PropTypes.func,\n    timeout: PropTypes.number,\n    elementId: PropTypes.string,\n    to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  };\n\n  HashLink.propTypes = propTypes;\n  NavHashLink.propTypes = propTypes;\n}\n"],"names":["r","e","t","f","n","Array","isArray","length","ClassNames","arguments","asSelectors","classNames","map","c","join","focusElement","element","requestAnimationFrame","focus","focusPrevElementSibling","previousElementSibling","focusNextElementSibling","nextElementSibling","focusFirstElementChild","firstElementChild","ElementRefContextProvider","children","PickerMainRef","React","AnchoredEmojiRef","BodyRef","SearchInputRef","SkinTonePickerRef","CategoryNavigationRef","VariationPickerRef","ElementRefContext","Provider","value","SuggestionMode","EmojiStyle","Theme","SkinTones","Categories","SkinTonePickerLocation","useElementRef","usePickerMainRef","useAnchoredEmojiRef","useSetAnchoredEmojiRef","target","current","useBodyRef","useSearchInputRef","useSkinTonePickerRef","useCategoryNavigationRef","EmojiProperties","skinToneVariations","NEUTRAL","LIGHT","MEDIUM_LIGHT","MEDIUM","MEDIUM_DARK","DARK","skinTonesNamed","Object","entries","reduce","acc","key","skinTonesMapped","mapped","skinTone","assign","emojiNames","emoji","name","emojiName","unifiedWithoutSkinTone","unified","splat","split","splice","emojiUnified","emojiHasVariations","emojiVariations","find","variation","includes","emojiVariationUnified","emojisByCategory","category","emojis","emojiUrlByUnified","emojiStyle","TWITTER","GOOGLE","FACEBOOK","APPLE","cdnUrl","variations","emojiByUnified","allEmojisByUnified","withoutSkinTone","allEmojis","values","flat","setTimeout","Emoji","categoriesOrdered","SUGGESTED","SMILEYS_PEOPLE","ANIMALS_NATURE","FOOD_DRINK","TRAVEL_PLACES","ACTIVITIES","OBJECTS","SYMBOLS","FLAGS","SuggestedRecent","configByCategory","baseCategoriesConfig","modifiers","categoryFromCategoryConfig","categoryNameFromCategoryConfig","getBaseConfigByCategory","modifier","mergeConfig","userConfig","base","basePickerConfig","previewConfig","config","categories","userCategoriesConfig","extra","suggestionMode","RECENT","_userCategoriesConfig","mergeCategoriesConfig","suggestedEmojisMode","skinTonePickerLocation","searchDisabled","PREVIEW","autoFocusSearch","defaultSkinTone","emojiVersion","getEmojiUrl","height","lazyLoadEmojis","onEmojiClick","event","basePreviewConfig","searchPlaceHolder","SEARCH","skinTonesDisabled","FREQUENT","theme","width","defaultEmoji","defaultCaption","showPreview","ConfigContext","PickerConfigProvider","usePickerConfig","useEmojiStyleConfig","useCategoriesConfig","usePreviewConfig","useThemeConfig","AUTO","window","matchMedia","matches","useSkinTonePickerLocationConfig","useGetEmojiUrlConfig","getDimension","dimensionConfig","alphaNumericEmojiIndex","useDebouncedState","initialValue","delay","useState","state","setState","timer","useRef","Promise","resolve","clearTimeout","_window","useDisallowedEmojis","DisallowedEmojisRef","emojiVersionConfig","useMemo","parseFloat","Number","isNaN","disallowedEmojis","supportedLevel","added_in","addedIn","addedInNewerVersion","PickerContextProvider","dispatch","filterRef","disallowClickRef","disallowMouseRef","disallowedEmojisRef","suggestedUpdateState","Date","now","searchTerm","skinToneFanOpenState","activeSkinTone","activeCategoryState","emojisThatFailedToLoadState","Set","emojiVariationPickerState","isPastInitialLoad","setIsPastInitialLoad","useEffect","PickerContext","searchIndex","replace","forEach","char","useFilterRef","useDisallowMouseRef","useSearchTermState","useActiveSkinToneState","useEmojisThatFailedToLoadState","useEmojiVariationPickerState","useSkinToneFanOpenState","useUpdateSuggested","suggestedUpdated","setsuggestedUpdate","useAllowMouseMove","DisallowMouseRef","useIsMouseDisallowed","elementCountInRow","parent","parentWidth","getBoundingClientRect","elementWidth","Math","floor","elementIndexInRow","elementLeft","left","parentLeft","rowNumber","elementHeight","elementTop","top","parentTop","round","getRowElements","elements","row","elementsInRow","firstElementIndex","lastElementIndex","slice","getElementInRow","indexInRow","rowElements","getElementInNextRow","allElements","currentRow","index","nextRowElements","nextRow","getNextRowElements","EmojiButtonSelector","VisibleEmojiSelector","visible","hidden","buttonFromTarget","emojiElement","closest","emojiFromElement","originalUnified","originalUnifiedFromEmojiElement","unifiedFromEmojiElement","clientHeight","emojiTrueOffsetTop","button","closestCategory","labelHeight","categoryLabelHeight","elementOffsetTop","categoryWithoutLabel","querySelector","categoryContent","queryScrollBody","root","scrollBody","emojiDistanceFromScrollTop","closestScrollBody","_closestScrollBody","scrollTop","offsetTop","elementOffsetLeft","offsetLeft","dataset","elementDataSet","elementDataSetKey","isVisibleEmoji","classList","contains","isHidden","allVisibleEmojis","from","querySelectorAll","lastVisibleEmoji","last","prevVisibleEmoji","nextVisibleEmoji","next","firstVisibleEmoji","nextCategory","prev","prevCategory","parentBottom","bottom","elementBottom","firstVisibleElementInContainer","closestCategoryContent","parseNativeEmoji","hex","String","fromCodePoint","parseInt","SUGGESTED_LS_KEY","getsuggested","mode","localStorage","recent","JSON","parse","_window2","getItem","sort","a","b","count","useCloseAllOpenToggles","variationPicker","setVariationPicker","skinToneFanOpen","setSkinToneFanOpen","useCallback","useHasOpenToggles","useSetVariationPicker","setAnchoredEmojiRef","setEmojiVariationPicker","useMouseDownHandlers","mouseDownTimerRef","closeAllOpenToggles","updateSuggested","onClick","emojiFromEvent","skinToneToUse","suspectedSkinTone","activeVariationFromUnified","nextList","existing","concat","filter","i","original","min","setItem","stringify","setsuggested","getImageUrl","names","emojiClickOutput","onMouseDown","undefined","onMouseUp","bodyRef","addEventListener","passive","removeEventListener","Boolean","parentElement","_element$parentElemen","isEmojiElement","scrollTo","$eprBody","scrollEmojiAboveLabel","isEmojiBehindLabel","by","scrollBy","useFocusSearchInput","useFocusCategoryNavigation","useClearSearch","applySearch","useApplySearch","focusSearchInput","useFilter","setFilterRef","setFilter","setter","useSetFilterRef","onChange","inputValue","nextValue","toLowerCase","longestMatch","keyword","dict","longestMatchingKey","keys","findLongestMatch","filtered","hasMatch","filterEmojiObjectByKeyword","setSearchTerm","then","some","getNormalizedSearchTerm","str","trim","useIsEmojiHidden","emojisThatFailedToLoad","isEmojiFiltered","_filter$searchTerm","isEmojiFilteredBySearchTerm","useIsEmojiFiltered","failedToLoad","has","filteredOut","Button","props","type","className","clsx","styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","ClickableEmoji","hiddenOnSearch","showVariations","size","lazyLoad","hasVariations","emojiHasVariatios","ViewOnlyEmoji","fontSize","emojiToRender","NATIVE","NativeEmoji","EmojiImg","external","setEmojisThatFailedToLoad","src","alt","loading","onError","add","EmojiCategory","categoryConfig","categoryName","label","Suggested","suggestedEmojisModeConfig","suggested","suggestedItem","EmojiList","emojiList","RenderCategory","isEmojiHidden","isEmojiDisallowed","useIsEmojiDisallowed","emojisToPush","hiddenCounter","isDisallowed","focusFirstVisibleEmoji","focusNextVisibleEmoji","focusPrevVisibleEmoji","focusVisibleEmojiOneRowUp","exitUp","countInRow","prevVisibleCategory","prevRowElements","getElementInPrevRow","visibleEmojiOneRowUp","focusVisibleEmojiOneRowDown","parentHeight","hasNextRow","nextVisibleCategory","visibleEmojiOneRowDown","Direction","EmojiVariationPicker","pointerStyle","direction","Up","getMenuDirection","getTop","emojiOffsetTop","buttonHeight","Down","useVariationPickerTop","getPointerStyle","emojiTruOffsetLeft","clientWidth","usePointerStyle","Body","onScroll","useOnScroll","allowMouseMove","isMouseDisallowed","onMouseMove","useOnMouseMove","useIsSkinToneInSearch","useIsSkinToneInPreview","FlexDirection","Flex","ROW","Space","flex","Absolute","position","Relative","SkinTonePickerDirection","SkinTonePickerMenu","right","SkinTonePicker","VERTICAL","HORIZONTAL","isDisabled","isOpen","setIsOpen","setActiveSkinTone","fullWidth","expandedSize","ITEM_SIZE","vertical","open","flexBasis","skinToneVariation","active","transform","tabIndex","Preview","isSkinToneInPreview","PreviewBody","previewEmoji","setPreviewEmoji","variationPickerEmoji","allow","onEscape","onMouseOver","onEnter","onLeave","relatedTarget","useEmojiPreviewEvents","show","defaultText","categoryNameFromDom","$category","getAttribute","useIsSearchMode","CategoryNavigation","activeCategory","setActiveCategory","scrollCategoryIntoView","_BodyRef$current","useScrollCategoryIntoView","visibleCategories","Map","observer","IntersectionObserver","entry","id","set","intersectionRatio","ratios","lastCategory","threshold","el","observe","useActiveCategoryScrollDetection","isSearchMode","categoriesConfig","SearchContainer","isSkinToneInSearch","Search","inc","setInc","clearSearch","placeholder","autoFocus","input","CssSearch","onFocus","_event$target","KeyboardEvents","CSS_SEARCH_SELECTOR","emojiPicker","searchQuery","Header","getActiveElement","activeElement","useKeyboardNavigation","useScrollTo","hasOpenToggles","disallowMouseMove","useDisallowMouseMove","onKeyDown","Escape","preventDefault","usePickerMainKeyboardEvents","focusSkinTonePicker","useFocusSkinTonePicker","setSkinToneFanOpenState","goDownFromSearchInput","useGoDownFromSearchInput","ArrowRight","ArrowDown","Enter","firstEmoji","click","focusAndClickFirstVisibleEmoji","useSearchInputKeyboardEvents","onType","useOnType","ArrowLeft","focusNextSkinTone","focusPrevSkinTone","ArrowUp","useSkinTonePickerKeyboardEvents","useCategoryNavigationKeyboardEvents","goUpFromBody","focusCategoryNavigation","useGoUpFromBody","useBodyKeyboardEvents","exitLeft","currentSkinTone","appendSearch","useAppendSearch","metaKey","ctrlKey","altKey","hasModifier","match","preloadEmoji","preloadedEmojs","url","emojiUrl","Image","PickerMain","PickerRootElement","searchModeActive","usePickerSizeConfig","useOnFocus","searchActive","EmojiPicker","ErrorBoundary","_this","hasError","getDerivedStateFromError","componentDidCatch","error","errorInfo","console","render","this","EmojiPickerReact","__assign","s","p","prototype","hasOwnProperty","call","apply","hashFragment","asyncTimerId","scrollFunction","reset","disconnect","isInteractiveElement","tagName","hasAttribute","getElAndScroll","body","getElementById","originalTabIndex","setAttribute","preventScroll","blur","removeAttribute","genericHashLink","As","linkHash","to","hash","passDownProps","NavLink","isActive","location","isExact","filteredProps","indexOf","getOwnPropertySymbols","propertyIsEnumerable","timeout","elementId","defaultPrevented","shiftKey","scroll","smooth","scrollIntoView","behavior","MutationObserver","attributes","childList","subtree","HashLink","Link"],"sourceRoot":""}
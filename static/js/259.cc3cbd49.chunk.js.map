{"version":3,"file":"static/js/259.cc3cbd49.chunk.js","mappings":"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","sources":["pages/Direct/ChatList.tsx","pages/Direct/Messages/Message.tsx","pages/Direct/Messages/Messages.tsx","pages/Direct/Direct.tsx","redux/slices/userSlice/userSlice/thunk/AddMessage.ts"],"sourcesContent":["import React, { memo, useEffect } from 'react'\r\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks/redux-hooks'\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\nimport { setChat } from '../../redux/slices/chatSlice/chatSlice';\r\nimport { useParams } from 'react-router-dom';\r\n\r\ntype userToChat = {\r\n  profileImage: string,\r\n  userName: string,\r\n  uid: string\r\n  chatId: string,\r\n  lastMessage: string,\r\n}\r\n\r\nconst ChatList = ({ userName, profileImage, uid, chatId, lastMessage }: userToChat) => {\r\n\r\n  const userInfo = {\r\n    userName,\r\n    profileImage,\r\n    uid,\r\n    chatId\r\n  }\r\n  const currentChatId = useAppSelector(chat => chat.chat.chat.chatId)\r\n\r\n  \r\n  useEffect(() => {\r\n    window.history.replaceState({}, `#/${chatId}`, '#/direct');\r\n  }, [chatId])\r\n\r\n  const dispatch = useAppDispatch()\r\n  return (\r\n    <Link to={`#/${chatId}/`}>\r\n      <div className={`flex p-2 hover:bg-zinc-100 cursor-pointer ${chatId === currentChatId ? 'bg-zinc-200 hover:bg-zinc-200' : ''} `} onClick={() => dispatch(setChat(userInfo))} >\r\n\r\n        <img className='border-[1px] rounded-full h-14 w-14 mt-2' src={profileImage ? profileImage : process.env.PUBLIC_URL +`/images/profile.png`} alt=\"\" />\r\n        <div className='flex flex-col justify-center  ml-2'>\r\n          <h1 className='  ' >{userName}</h1>\r\n          <h1 className='text-gray-400'>{lastMessage}</h1>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default memo(ChatList)","import React, { useRef, useEffect, memo } from 'react'\r\nimport { useAppSelector } from '../../../redux/hooks/redux-hooks'\r\nimport { uuidv4 } from '@firebase/util'\r\nimport { Link, useLocation, useParams } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\n\r\nconst Message = ({ message, postMessage }: any) => {\r\n    const signedUser = useAppSelector(user => user.user.user)\r\n    const chatUserImage = useAppSelector(user => user.chat.chat.profileImage)\r\n    const anotherUid = useAppSelector(user => user.chat.chat.uid)\r\n    const location = useLocation()\r\n\r\n    const { chatId } = useParams()\r\n\r\n\r\n    const ref = useRef<HTMLDivElement>(null)\r\n\r\n    useEffect(() => {\r\n        ref.current?.scrollIntoView({ block: 'end' })\r\n    }, [message])\r\n\r\n\r\n    useEffect(() => {\r\n        ref.current?.scrollIntoView({ block: 'end' })\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    console.log(message.post)\r\n    return (\r\n        <div ref={ref}>\r\n\r\n            {\r\n                message.senderId === signedUser.uid ?\r\n                    <div className='flex justify-end mt-2 mb-4'>\r\n                        {message.message ? <div className='  items-center '>\r\n                            <h1 className=' p-2 rounded-3xl bg-gray-200'>{message.message}</h1>\r\n                        </div> : ''}\r\n                        {message.image ? <div className=''>\r\n                            <img src={`${message.image}`} className=' rounded-3xl w-[200px] h-[200px]' alt=\"\" />\r\n                        </div> : ''}\r\n                        {message.heart ? <i className=\"ri-heart-fill text-red-500 text-4xl\"></i> : ''}\r\n                        {message.post ?\r\n                            <div className='bg-gray-200 my-10 py-2 rounded-3xl w-[200px] h-[300px]'>\r\n                                <Link to={`/${message.post[0]}/`}> <div className='flex p-4'>\r\n                                    <img className='h-6 w-6 rounded-3xl mr-2 ' src={message.post[3]} alt=\"\" />\r\n                                    <h1 className='text-[1rem]'>{message.post[4]}</h1>\r\n                                </div>\r\n                                </Link>\r\n                                <Link to={`/${message.post[0]}/${message.post[2]}`} state={{ background: location }}>\r\n                                    <img className='w-full h-full  rounded-b-3xl object-cover' src={message.post[1]} alt=\"s\" />\r\n                                </Link>\r\n                            </div> : ''}\r\n                    </div>\r\n                    :\r\n                    <div className='flex '>\r\n                        <Link to={`/${anotherUid}/`}> <img className='mt-8 w-8 h-8 flex  cursor-pointer rounded-2xl justify-end' src={chatUserImage} alt='dsada' /></Link>\r\n                        <div className='flex justify-start mt-2 mb-4'>\r\n                            {message.message ? <div className='  items-center '>\r\n                                <h1 className=' border-[1px] p-2 rounded-3xl'>{message.message}</h1>\r\n                            </div> : ''}\r\n                            {message.image ? <div className=''>\r\n                                <img src={`${message.image}`} className=' rounded-3xl w-[200px] h-[200px]' alt=\"\" />\r\n                            </div> : ''}\r\n                            {message.heart ? <i className=\"ri-heart-fill text-red-500 text-4xl\"></i> : ''}\r\n                            {message.post ?\r\n                            <div className='bg-gray-200 my-10 py-2 rounded-3xl w-[200px] h-[300px]'>\r\n                                <Link to={`/${message.post[0]}/`}> <div className='flex p-4'>\r\n                                    <img className='h-6 w-6 rounded-3xl mr-2 ' src={message.post[3] ? message.post[3] : process.env.PUBLIC_URL +`/images/profile.png`} alt=\"\" />\r\n                                    <h1>{message.post[4]} </h1>\r\n                                </div>\r\n                                </Link>\r\n                                <Link  to={`/${message.post[0]}/${message.post[2]}`} state={{ background: location }}>\r\n                                    <img className='w-full h-full  rounded-b-3xl object-cover' src={message.post[1]} alt=\"s\" />\r\n                                </Link>\r\n                            </div> : ''}\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n            }\r\n\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default memo(Message)","\r\nimport React, { useState, useEffect, memo } from 'react'\r\nimport { db, } from '../../../firebase/firebase';\r\nimport { useAppDispatch, useAppSelector } from '../../../redux/hooks/redux-hooks';\r\nimport { onSnapshot, doc } from \"firebase/firestore\";\r\nimport Message from './Message';\r\nimport EmojiPicker, { EmojiClickData } from 'emoji-picker-react';\r\nimport { addMessage } from '../../../redux/slices/userSlice/userSlice/thunk/AddMessage';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Messages = ({showPicker,setShowPicker} : any) => {\r\n    const chatId = useAppSelector(chat => chat.chat.chat.chatId)\r\n    const [chat, setChat] = useState<any>([])\r\n    const chatUserName = useAppSelector(chat => chat.chat.chat.userName)\r\n    const anotherUid = useAppSelector(user => user.chat.chat.uid)\r\n    const [message, setMessage] = useState('')\r\n    const [selectedImage, setSelectedImage] = useState<File>()\r\n    const chatUserImage = useAppSelector(user => user.chat.chat.profileImage)\r\n    const dispatch = useAppDispatch()\r\n   \r\n\r\n    useEffect(() => {\r\n        const getChat = () => {\r\n            const unsub = onSnapshot(doc(db, \"chat\", chatId), (doc) => {\r\n                doc.exists() && setChat(doc.data().message)\r\n            });\r\n\r\n            return () => {\r\n                unsub()\r\n            }\r\n\r\n        }\r\n\r\n        chatId && getChat()\r\n    }, [chatId])\r\n\r\n\r\n    const addPhoto = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (!event.target.files) {\r\n            return\r\n        }\r\n        const imageToLoad = event.target.files[0]\r\n        setSelectedImage(imageToLoad)\r\n\r\n\r\n    }\r\n\r\n\r\n    const sendMessage = async (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        dispatch(await addMessage({ selectedImage: selectedImage as File, message: message, heart: 'heart', post: '' }))\r\n        setMessage('')\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        const sendPhoto = async () => {\r\n\r\n            dispatch(await addMessage({ selectedImage: selectedImage as File, message: message, heart: '', post: '' }))\r\n            setSelectedImage(undefined)\r\n        }\r\n\r\n        selectedImage && sendPhoto()\r\n\r\n    }, [selectedImage])\r\n\r\n\r\n    const handleKeyDown = async (event: React.KeyboardEvent) => {\r\n        if (event.key === 'Enter') {\r\n            // 👇 Get input value\r\n            dispatch(await addMessage({ selectedImage: selectedImage as File, message: message, heart: 'heart', post: '' }))\r\n            setMessage('')\r\n        }\r\n    };\r\n\r\n\r\n    const onEmojiClick = (emojiObject: EmojiClickData) => {\r\n        setMessage(prev => prev + emojiObject.emoji)\r\n        setShowPicker(false)\r\n    }\r\n\r\n    const messageEl = chat.map((c: any) => (\r\n        <Message message={c} postMessage={c.post} />\r\n    ))\r\n    return (\r\n        <>\r\n            <div className='p-4 border-b-[1px] flex items-center'>\r\n\r\n                <Link className='flex items-center' to={`/${anotherUid}/`}>\r\n                    <img className='h-8 w-8 rounded-2xl mr-4 cursor-pointer' src={chatUserImage} alt=\"\" />\r\n                    <h1 className=' font-[500] cursor-pointer hover:text-zinc-400'> {chatUserName}</h1>\r\n                </Link>\r\n            </div>\r\n\r\n            <div className='overflow-auto h-[100%]  w-[100%] justify-between p-4'>\r\n                {messageEl}\r\n               \r\n            </div>\r\n            <div className='absolute bottom-16 ' onClick={e=>e.stopPropagation()}>\r\n            {showPicker &&\r\n                    <EmojiPicker\r\n                        width={'100%'}\r\n                        height={'400px'}\r\n                        onEmojiClick={onEmojiClick}\r\n                    />}\r\n            </div>\r\n            <div className='px-2 p-4 flex justify-center items-center'>\r\n                <div className=' border w-[100%]   rounded-2xl flex justify-between items-center '>\r\n                    <h1 className='p-2 cursor-pointer' onClick={()=>setShowPicker((prev: any)=>!prev)}>😀</h1>\r\n                    <input\r\n                        placeholder='Message...'\r\n                        type=\"text \"\r\n                        className='outline-none p-2  w-[80%]'\r\n                        value={message}\r\n                        onChange={(e) => setMessage(e.target.value)}\r\n                        onKeyDown={handleKeyDown}\r\n                    />\r\n                    <div className='flex items-center '>\r\n                        {\r\n                            message ?\r\n                                <button\r\n                                    onClick={sendMessage}\r\n                                    className='text-blue-400 rounded-xl font-[500] p-2 '>\r\n                                    Send\r\n                                </button>\r\n                                :\r\n                                <div className=' flex'>\r\n                                    <label className='cursor-pointer' >\r\n                                        <input type=\"file\" className='hidden' onChange={addPhoto} />\r\n                                        <i className=\"ri-image-line text-2xl\"></i>\r\n                                    </label>\r\n                                    <button onClick={sendMessage} className='mx-2'><i className=\"ri-heart-line text-2xl\"></i></button>\r\n                                </div>\r\n                        }\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default memo(Messages)\r\n\r\n\r\n","\r\nimport  { useState, useEffect, memo } from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\nimport Header from '../../components/Header/Header'\r\nimport PagesRoutes from '../../constants/router-types'\r\nimport { auth, db } from '../../firebase/firebase'\r\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks/redux-hooks';\r\nimport {   onSnapshot, doc, } from \"firebase/firestore\";\r\nimport ChatList from './ChatList'\r\nimport Messages from './Messages/Messages'\r\nimport { removeChat } from '../../redux/slices/chatSlice/chatSlice'\r\nimport { Entries } from 'type-fest'\r\n\r\n\r\n\r\nconst Direct = () => {\r\n    const signedUser = useAppSelector(user => user.user.user)\r\n    const [chats, setChats] = useState<any>([])\r\n    const chatId = useAppSelector(chat => chat.chat.chat.chatId)\r\n    const [showPicker, setShowPicker] = useState(false)\r\n    const dispatch = useAppDispatch()\r\n    useEffect(() => {\r\n\r\n        const getData = () => {\r\n            const unsub = onSnapshot(doc(db, \"chats\", signedUser.uid), (doc) => {\r\n                setChats(doc.data())\r\n            });\r\n\r\n            return () => {\r\n                unsub()\r\n            }\r\n\r\n        }\r\n\r\n\r\n        signedUser.uid && getData()\r\n\r\n    }, [signedUser.uid])\r\n\r\n    useEffect(() => {\r\n        dispatch(removeChat())\r\n    }, [])\r\n\r\n\r\n\r\n    // const sortedChatArr = (Object?.entries(chats) as Entries<typeof chats>)?.sort(({a,b} : any)=>b?.[1].date - a?.[1].date)\r\n    // console.log(sortedChatArr)\r\n    console.log((Object?.entries(chats) as Entries<typeof chats>))\r\n\r\n    const chatEl = (Object?.entries(chats) as Entries<typeof chats>)?.map((user: any) => (\r\n        <ChatList key={user[0]} chatId={user[0]} profileImage={user[1].userInfo.profileImage} userName={user[1].userInfo.userName} uid={user[1].userInfo.uid} lastMessage={user[1].lastMessage?.message} />\r\n    ))\r\n\r\n\r\n\r\n    return auth.currentUser ? (\r\n\r\n        <div className='sm:flex bg-gray-50 h-[100vh]'>\r\n            <div className='w-[20%]'>\r\n                <Header />\r\n            </div>\r\n            <div  className='bg-white xl:mx-[20%]  mb-8 border-[1px] rounded-md h-full flex w-[100%] justify-between   '>\r\n                <div className='sm:w-[40%] ] border-r-[1px] flex flex-col justify-between   ' onClick={()=>setShowPicker(false)}>\r\n                    <div className='flex justify-center p-4 border-b-[1px]'>\r\n                        <h1 className='font-[500] py-1  '> {signedUser.userName}</h1>\r\n\r\n                    </div>\r\n                    <div className='overflow-auto h-[100%]  w-[100%] justify-between '>\r\n                        {chatEl}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='w-[60%]   flex flex-col justify-between mb-16 sm:my-0 '>\r\n                    {chatId ?\r\n                    \r\n                        <Messages showPicker={showPicker} setShowPicker={setShowPicker}   />\r\n                        :\r\n                        <div className='flex flex-col justify-center items-center  h-[100%]'>\r\n                        <img src='/images/direct.png' alt=\"\" />\r\n                        <h1 className='font-[500]'>Your Messages</h1>\r\n                        <h1 className='text-zinc-400'>Choose some one in left bar to chat</h1>\r\n                        </div>}\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <Navigate to={PagesRoutes.SIGN_IN} />\r\n    )\r\n}\r\n\r\nexport default memo(Direct)     /* <div className='w-[60%] flex flex-col items-center justify-center'>\r\n<img src=\"/images/direct.png\" alt=\"ss\" />\r\n<h1 className='text-2xl'>Your Messages</h1>\r\n<p className='text-zinc-400'>Send private photos and messages to a friend or group.</p>\r\n<button className='bg-blue-500 text-white py-2 px-4 rounded-xl  mt-6'>Send Message</button>\r\n</div> */","import { createAsyncThunk, nanoid } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../../../store/store';\r\nimport { updateDoc, doc, arrayUnion, Timestamp } from 'firebase/firestore';\r\nimport { setUser } from '../userSlice';\r\nimport { db } from '../../../../../firebase/firebase';\r\nimport { storage } from '../../../../../firebase/firebase';\r\nimport { ref, uploadBytes, deleteObject, getDownloadURL } from 'firebase/storage';\r\nimport { useAppSelector } from '../../../../hooks/redux-hooks';\r\nimport { uuidv4 } from '@firebase/util';\r\n\r\ntype MessageType  = {\r\n  selectedImage: File ;\r\n  message: string;\r\n  heart:string;\r\n  post :any\r\n}\r\n\r\n\r\n\r\nexport const addMessage = createAsyncThunk('chat/addMessage', async ({ selectedImage,message,heart ,post}: MessageType, { dispatch, getState }) => {\r\n\r\n\r\nconst userChat = (getState() as any).chat.chat\r\nconst signedUser = (getState() as RootState).user.user\r\n\r\n  if (selectedImage) {\r\n      const imagesRef = ref(storage, `Images/${selectedImage?.name + uuidv4()}`)\r\n      await uploadBytes(imagesRef, selectedImage)\r\n      const imageAdress = await getDownloadURL(imagesRef)\r\n      await updateDoc(doc(db, 'chat', userChat.chatId), {\r\n          message: arrayUnion({\r\n              id: uuidv4(),\r\n              senderId: signedUser.uid,\r\n              date: Timestamp.now(),\r\n              image: imageAdress,\r\n          })\r\n      })\r\n\r\n  } else if (message) {\r\n     \r\n          await updateDoc(doc(db, 'chat', userChat.chatId), {\r\n              message: arrayUnion({\r\n                  id: uuidv4(),\r\n                  message,\r\n                  senderId: signedUser.uid,\r\n                  date: Timestamp.now(),\r\n              })\r\n          })\r\n\r\n\r\n          await updateDoc(doc(db, 'chats', signedUser.uid), {\r\n              [userChat.chatId + '.lastMessage']: {\r\n                  message,\r\n              }\r\n\r\n          })\r\n          await updateDoc(doc(db, 'chats', userChat.uid), {\r\n              [userChat.chatId + '.lastMessage']: {\r\n                  message,\r\n              }\r\n\r\n          })\r\n\r\n      \r\n  }else if (heart){\r\n    await updateDoc(doc(db, 'chat', userChat.chatId), {\r\n      message: arrayUnion({\r\n          id: uuidv4(),\r\n          heart,\r\n          senderId: signedUser.uid,\r\n          date: Timestamp.now(),\r\n      })\r\n  })\r\n\r\n  }else if(post){\r\n    await updateDoc(doc(db, 'chat', userChat.chatId), {\r\n        message: arrayUnion({\r\n            id: uuidv4(),\r\n            post,\r\n            senderId: signedUser.uid,\r\n            date: Timestamp.now(),\r\n        })\r\n    })\r\n  \r\n  }\r\n\r\n}\r\n)"],"names":["ChatList","userName","profileImage","uid","chatId","lastMessage","userInfo","currentChatId","useAppSelector","chat","useEffect","window","history","replaceState","dispatch","useAppDispatch","to","className","onClick","setChat","src","process","alt","memo","Message","message","signedUser","postMessage","user","chatUserImage","anotherUid","location","useLocation","ref","useParams","useRef","current","scrollIntoView","block","console","log","post","senderId","image","heart","state","background","Messages","showPicker","setShowPicker","useState","chatUserName","setMessage","selectedImage","setSelectedImage","unsub","onSnapshot","doc","db","exists","data","getChat","addPhoto","event","target","files","imageToLoad","sendMessage","addMessage","sendPhoto","undefined","handleKeyDown","key","messageEl","map","c","e","stopPropagation","width","height","onEmojiClick","emojiObject","prev","emoji","placeholder","type","value","onChange","onKeyDown","Direct","chats","setChats","getData","removeChat","Object","entries","chatEl","auth","Header","PagesRoutes","createAsyncThunk","getState","userChat","imagesRef","storage","name","uuidv4","uploadBytes","getDownloadURL","imageAdress","updateDoc","arrayUnion","id","date","Timestamp"],"sourceRoot":""}
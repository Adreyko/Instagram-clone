{"version":3,"file":"static/js/222.8d51ed9b.chunk.js","mappings":"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","sources":["components/ModalLogin/ModalLogin.tsx","components/Header/modals/DropSettings/DropSetting.tsx","redux/slices/userSlice/userSlice/thunk/AddNewPost.ts","components/Header/modals/CreateNewPostModal/CreateNewPostModal.tsx","components/Header/modals/Search/SearchedUser/SearchedUser.tsx","components/Header/modals/Search/Search.tsx","components/Header/modals/Notifications/Followers.tsx","components/Header/modals/Notifications/Notifications.tsx","components/Header/modals/ReusableHeadersNav.tsx","components/Header/Header.tsx","components/Header/modals/ReusableModal.tsx","pages/Dashboard/Recommend/RecPeople.tsx","pages/Dashboard/Recommend/Recommend.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PagesRoutes from '../../constants/router-types'\r\n\r\nconst ModalLogin = () => {\r\n  return (\r\n    <div className='bg-white flex-col justify-center items-center p-4 text-center rounded-md '>\r\n        <h1 className='font-bold text-xl'>You`ve been logged out</h1>\r\n        <p className=' text-lg text-gray-400 mb-6'>Please log back in</p>\r\n            <hr/>\r\n        <Link  to ={PagesRoutes.SIGN_IN} className=' font-bold text-blue-400 text-xl mt-4 '>Sign In</Link>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModalLogin","import  {  useState } from 'react'\r\nimport { Dispatch, SetStateAction } from \"react\";\r\nimport { auth } from '../../../../firebase/firebase';\r\nimport { signOut } from 'firebase/auth'\r\nimport { removeUser } from '../../../../redux/slices/userSlice/userSlice/userSlice';\r\nimport { useAppDispatch, useAppSelector } from '../../../../redux/hooks/redux-hooks';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PagesRoutes from '../../../../constants/router-types';\r\nimport ReusableModal from '../ReusableModal';\r\nimport ModalLogin from '../../../ModalLogin/ModalLogin';\r\nimport { HashLink } from 'react-router-hash-link';\r\n\r\n\r\ninterface IProps {\r\n  setShowSettings: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\n\r\nconst DropDownSetting = ({ setShowSettings }: IProps) => {\r\n\r\n  const dispatch = useAppDispatch()\r\n  const navigate = useNavigate()\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const signedUser = useAppSelector(user=>user.user.user)\r\n\r\n  const handleLogOut = async () => {\r\n    await signOut(auth)\r\n    dispatch(removeUser())\r\n    navigate(PagesRoutes.SIGN_IN)\r\n  }\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div className='shadow-2xl bg-white  fixed z-20 bottom-20 left-4 rounded-md  ' onClick={() => setShowSettings(false)}>\r\n      <ul className='z-20 ' onClick={e => e.stopPropagation()}>\r\n          <li className='flex justify-between p-2 px-4 text-base  border-b-[1px]  hover:bg-zinc-100 cursor-not-allowed  '><h1 className='mr-10 '>Settings</h1><i className=\"ri-settings-2-line text-2xl\"></i></li>\r\n      <HashLink to={`/${signedUser.uid}/#saved`} ><li className='flex justify-between p-2 px-4 text-base border-b-[1px] cursor-pointer hover:bg-zinc-100  '><h1 className='mr-10'> Saved</h1><i className=\"ri-bookmark-line text-2xl\"></i></li></HashLink>\r\n        <li className='flex justify-between p-2 px-4 text-base border-b-[1px]  hover:bg-zinc-50 cursor-not-allowed '><h1 className='mr-10'>Soon...</h1><i className=\"ri-settings-2-line text-2xl\"></i> </li >\r\n        <li className='flex justify-between p-2 px-4 text-base border-b-[1px]  hover:bg-zinc-100 cursor-not-allowed '><h1 className='mr-10'>Switch appearance</h1><i className=\"ri-settings-2-line text-2xl\"></i></li>\r\n        <li onClick={handleLogOut} className='flex justify-between p-2 text-base cursor-pointer hover:bg-zinc-100 active:bg-zinc-200 px-4 '><h1 className='mr-10'>Log out</h1></li>\r\n      </ul>\r\n      <ReusableModal visible={visible} setVisible={setVisible}>\r\n        <ModalLogin />\r\n      </ReusableModal>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DropDownSetting","import { createAsyncThunk, nanoid } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../../../store/store';\r\nimport { updateDoc, doc } from 'firebase/firestore';\r\nimport { setUser } from '../userSlice';\r\nimport { db } from '../../../../../firebase/firebase';\r\nimport { storage } from '../../../../../firebase/firebase';\r\nimport { ref, uploadBytes, deleteObject, getDownloadURL } from 'firebase/storage';\r\nimport { useAppSelector } from '../../../../hooks/redux-hooks';\r\n\r\ntype ImageType = {\r\n    image: File,\r\n    text: string\r\n\r\n}\r\n\r\n\r\n\r\nexport const addNewPost = createAsyncThunk('user/addNewPost', async ({ image,text }: ImageType, { dispatch, getState }) => {\r\n    const userData = (getState() as RootState).user.user\r\n\r\n    \r\n\r\n    const imagesRef = ref(storage, `Images/${image.name + nanoid()}`)\r\n    await uploadBytes(imagesRef, image)\r\n\r\n\r\n    const imagesAdress = await getDownloadURL(imagesRef)\r\n\r\n    const newPost = {\r\n        postImage : imagesAdress,\r\n        postId : nanoid(),\r\n        commets : [],\r\n        likes : [],\r\n        text: text,\r\n        user : userData.uid,\r\n        createdData: new Date().getTime().toString()\r\n\r\n    }\r\n\r\n    await updateDoc(doc(db, 'users',userData.uid), {\r\n            posts:[...userData.posts,newPost]\r\n    })\r\n\r\n    \r\n    dispatch(setUser({...userData,posts:[...userData.posts,newPost]}))\r\n\r\n\r\n    // if(userData.profileImage) {\r\n    //     await deleteObject(ref(storage, userData.profileImage))\r\n    // }\r\n    // console.log(userData)\r\n    // const imagesRef = ref(storage, `Images/${image.name + nanoid()}`)\r\n    // await uploadBytes(imagesRef, image)\r\n    // console.log(updateDoc)\r\n\r\n\r\n    // const imageAdress = await getDownloadURL(imagesRef)\r\n\r\n    // await updateDoc(doc(db,'users',userData.uid),{\r\n    //     profileImage : imageAdress\r\n    // })\r\n\r\n    // dispatch(setUser({...userData,profileImage: imageAdress}))\r\n\r\n})","\r\nimport EmojiPicker from 'emoji-picker-react'\r\nimport React, { useState, useEffect, memo } from 'react'\r\nimport { useAppDispatch, useAppSelector } from '../../../../redux/hooks/redux-hooks'\r\nimport { addNewPost } from '../../../../redux/slices/userSlice/userSlice/thunk/AddNewPost'\r\nimport { EmojiClickData } from 'emoji-picker-react/dist/types/exposedTypes'\r\nimport { relative } from 'path'\r\n\r\ninterface IProps {\r\n\r\n    setVisible: (value: boolean | ((prevVisible: boolean) => boolean)) => void;\r\n\r\n\r\n}\r\n\r\nconst NewPostModal = ({ setVisible }: IProps) => {\r\n    const [nextStep, setNextStep] = useState<number>(0)\r\n    const [selectedImage, setSelectedImage] = useState<File>()\r\n    const [imagesUrl, setImagesUrl] = useState<string>()\r\n    const [text, setText] = useState<string>('')\r\n    const [showPicker, setShowPicker] = useState(false)\r\n\r\n    const dispatch = useAppDispatch()\r\n    const signedUser = useAppSelector(user => user.user.user)\r\n\r\n\r\n\r\n    const { profileImage, userName } = signedUser\r\n\r\n\r\n    const createNewPostPreview = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (!event.target.files) {\r\n            return\r\n        }\r\n        const imageToLoad = event.target.files[0]\r\n        setSelectedImage(imageToLoad)\r\n        setNextStep(prev => prev + 1)\r\n    }\r\n\r\n    const textAreaHandler = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n\r\n        setText(event.currentTarget.value)\r\n\r\n    }\r\n\r\n\r\n    const onEmojiClick = (emojiObject: EmojiClickData) => {\r\n        setText(prev => prev + emojiObject.emoji)\r\n        setShowPicker(false)\r\n    }\r\n\r\n\r\n    const sharePost = async (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        dispatch(await addNewPost({ image: selectedImage as File, text: text }))\r\n        setVisible(false)\r\n\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        if (selectedImage) {\r\n            setImagesUrl(URL.createObjectURL(selectedImage));\r\n        }\r\n    }, [selectedImage]);\r\n\r\n\r\n    return nextStep === 0 ? (\r\n\r\n        <div className='  flex-col justify-center items-center text-center rounded-xl bg-white w-[100%]    '>\r\n            <div className=' py-4 border-b-2'>\r\n                <h1>Create new post</h1>\r\n            </div>\r\n\r\n            <div className='flex flex-col items-center justify-center h-[100%] p-[20%] '>\r\n                <div className='h-[100%]  flex items-center justify-center'>\r\n                    <img className='object-cover w-[20%] h-auto ' src= { process.env.PUBLIC_URL + \"/images/create.png\" } alt='pic' />\r\n                </div>\r\n\r\n                <h1>Drag photos and videos here</h1>\r\n                <label className='bg-blue-500 rounded-lg px-4 py-1 hover:bg-blue-300 text-xl text-white'>\r\n                    <input onChange={(e) => createNewPostPreview(e)} type=\"file\" className='hidden' />\r\n                    Select from computer\r\n                </label>\r\n            </div>\r\n        </div>\r\n\r\n    ) :\r\n        nextStep === 1 ?\r\n            (\r\n                <div className='flex flex-col bg-white sm:w-[900px] sm:h-[700px]  rounded-xl w-[300px] m-[100px] '>\r\n                    <div className=' flex justify-between items-center p-2 '>\r\n                        <button onClick={() => setNextStep(prev => prev - 1)} className='text-2xl flex '>🡠</button>\r\n                        <h1 className='text-xl'>Crop</h1>\r\n                       \r\n                        <button className='text-blue-400 text-xl hover:text-black active:text-blue-200' onClick={() => setNextStep(prev => prev + 1)}>Next</button>\r\n                    </div>\r\n                    <div className='flex items-center bg-black  h-[100%]    justify-center rounded-b-xl'>\r\n                        <img className='  h-[100%] w-[100%] object-contain ' src={imagesUrl} alt=\"\" />\r\n                    </div>\r\n\r\n                </div>\r\n            ) :\r\n\r\n\r\n\r\n            <div className='bg-white  sm:w-[900px] sm:h-[700px] rounded-xl w-[300px] m-[100px]  '>\r\n                <div className=' flex justify-between p-2 '>\r\n                    <button className='text-xl' onClick={() => setNextStep(prev => prev - 1)}>🡠</button>\r\n                    <h1 className='text-xl'>Create new post</h1>\r\n                    <button onClick={(e) => sharePost(e)} className='text-blue-400 text-xl hover:text-black active:text-blue-200'>Share</button>\r\n\r\n                </div>\r\n                <div className='flex sm:h-[650px] '>\r\n                    <div className='flex items-center bg-black  h-[100%] justify-center rounded-b-xl w-[70%]'>\r\n                        <img className=' h-[100%] w-[100%] object-contain' src={imagesUrl} alt=\"\" />\r\n                    </div>\r\n\r\n                    <div className='w-[40%] '>\r\n                        <div className='bg-white border-[1px]  '>\r\n                            <div className='text-ellipsis  '>\r\n                                <div className=' p-2 py-4 text-ellipsis sm:flex hidden'>                           \r\n                                    <img className='w-8 rounded-full h-8 ' src={profileImage} alt=\"\" />\r\n                                    <h1 className='font-[600] ml-2 text-ellipsis'>{userName}</h1>\r\n                                </div>\r\n                            </div>\r\n                            <div className='p-2 w-full'>\r\n                                <textarea\r\n                                    className='w-full h-[100px] outline-none resize-none'\r\n                                    value={text}\r\n                                    onChange={(e) => textAreaHandler(e)}\r\n                                    name=\"\" id=\"\"\r\n                                    placeholder='Write a caption...'>\r\n                                </textarea>\r\n                            </div>\r\n\r\n                            <div className='flex justify-between p-2 text-[13px]'>\r\n                                <button onClick={() => setShowPicker(prev => !prev)}>&#128515;</button>\r\n                                <h1 className='text-gray-400' >{text.length}/2,200</h1>\r\n                            </div>\r\n                            <div className='h-[400px]'>\r\n                                {showPicker &&\r\n                                    <EmojiPicker\r\n                                        onEmojiClick={onEmojiClick}\r\n                                        width={'90%'}\r\n                                        height={'100%'}\r\n                                       \r\n\r\n                                    />}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n}\r\n\r\nexport default memo(NewPostModal)\r\n","import React, { memo } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { IuserData } from '../../../../../interfaces/interfaces';\r\n\r\n\r\n\r\nconst SearchedUser: React.FC<IuserData> = ({ fullName, userName, profileImage, uid }) => {\r\n  return (\r\n    <div className='flex items-center justify-between p-4 '>\r\n            <div className='flex   '>\r\n                <Link to={`/${uid}/`}><img className='border-[1px] rounded-full h-12 w-12' alt='prof' src={`${profileImage ? profileImage : '/images/profile.png'}`} /></Link>\r\n                <div className='ml-2'>\r\n                    <p className=''>{userName}</p>\r\n                    <h1 className='text-gray-400'>{fullName}</h1>\r\n                </div>\r\n            </div>\r\n          \r\n\r\n\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default memo(SearchedUser)","import React, { Dispatch, SetStateAction, useState, useEffect, memo } from 'react'\r\nimport { collection, getDocs } from 'firebase/firestore';\r\nimport { db } from '../../../../firebase/firebase';\r\nimport SearchedUser from './SearchedUser/SearchedUser';\r\n\r\n\r\n\r\ninterface IProps {\r\n  modalWidth: number;\r\n  setModalWidth: Dispatch<SetStateAction<number>>;\r\n}\r\n\r\nconst Search = ({modalWidth,setModalWidth } : IProps) => {\r\n\r\n\r\n  const [allUsers, setAllUsers] = useState<any>()\r\n  const [userNameInput, setUserNameInput] = useState<any>()\r\n\r\n\r\n\r\n  const inputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n    setUserNameInput(event.currentTarget.value)\r\n\r\n  }\r\n\r\n  let initialized = false;\r\n\r\n  const fetchData = async () => {\r\n    setAllUsers([])\r\n    const querySnapshot = await getDocs(collection(db, \"users\"));\r\n\r\n    querySnapshot.forEach((doc) => {\r\n\r\n\r\n      setAllUsers((prev: any) => [...prev, { ...doc.data() }],)\r\n    })\r\n  }\r\n\r\n\r\n  const searchedUser = allUsers?.filter((user: any) => {\r\n    if (userNameInput === \"\") {\r\n      return ''\r\n    } else if (user?.userName?.toLowerCase().includes(userNameInput?.toLowerCase())) {\r\n      return user\r\n    }\r\n  })\r\n\r\n\r\n  useEffect(() => {\r\n    if (!initialized) {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      initialized = true\r\n      fetchData()\r\n    }\r\n  }, [])\r\n\r\n\r\n  const searchedUserEl = searchedUser?.map((user: any) => (\r\n    <SearchedUser uid={user.uid} userName={user.userName} fullName={user.fullName} profileImage={user.profileImage} />\r\n  ))\r\n\r\n\r\n \r\n  return (\r\n\r\n\r\n    \r\n      <div className={`w-[100%]  ${modalWidth === 0 ? 'hidden' : 'block'}  `}>\r\n        <div className={`flex p-4 py-4 items-center `}>\r\n          <h1 className='font-bold flex items-center text-2xl'>Search</h1>\r\n        </div>\r\n        <div className='py-4 px-2 border-b-[1px]'>\r\n          <input onChange={(e) => inputHandler(e)} value={userNameInput} placeholder=' Search'  type=\"search\" className=' outline-none bg-gray-100 px-4 py-2 w-[100%]   rounded-xl' />\r\n        </div>\r\n        <div className='font-bold text-[1rem] p-4'>\r\n          <h1>Recent</h1>\r\n  \r\n        </div>\r\n        {searchedUserEl}\r\n      </div>\r\n    \r\n\r\n    \r\n  )\r\n}   \r\n\r\nexport default memo(Search)","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { IuserData } from '../../../../interfaces/interfaces';\r\n\r\n\r\nconst Followers: React.FC<IuserData> = ({ profileImage, uid, userName }) => {\r\n\r\n\r\n    return (\r\n        <div className='flex items-center justify-between p-2 '>\r\n            <div className='flex py-2 mb-2  '>\r\n                <Link to={`/${uid}/`}><img className='border-[1px] rounded-full h-12 w-12' alt='prof' src={`${profileImage ? profileImage :  process.env.PUBLIC_URL + '/images/profile.png'}`} /></Link>\r\n                <div className='ml-2 flex  justify-center '>\r\n                    <p className=' mr-2'><span className='font-bold'>{userName}</span> started following you.</p> \r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Followers","import React, { Dispatch, SetStateAction, } from 'react'\r\nimport Recommend from '../../../../pages/Dashboard/Recommend/Recommend';\r\nimport SignedUser from '../../../../pages/Profile/SignedUserProfile/SignedUser';\r\nimport { useAppSelector } from '../../../../redux/hooks/redux-hooks';\r\nimport Followers from './Followers';\r\ninterface IProps {\r\n\r\n\r\n    modalWidth: number;\r\n    setModalWidth: Dispatch<SetStateAction<number>>;\r\n}\r\nconst Notifications = ({ modalWidth, setModalWidth }: IProps) => {\r\n\r\n    const signdeUser = useAppSelector(user => user.user.user)\r\n\r\n    const followers = signdeUser.followers\r\n\r\n    const followersEl = followers.map(user => (\r\n        <Followers uid={user.uid} profileImage={user.profileImage} userName={user.userName} fullName = {user.fullName} />\r\n    ))\r\n\r\n    return (\r\n        <div className={`w-[100%]  ${modalWidth === 0 ? 'hidden' : 'block'}  `}>\r\n            <div className={`flex p-4 py-4 items-center `}>\r\n                <h1 className='font-bold flex items-center text-2xl'>Notifications</h1>\r\n            </div>\r\n            <div>\r\n                {followers.length > 0 ?   followersEl : <Recommend/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React, { Dispatch, memo, SetStateAction, useEffect } from 'react'\r\n\r\n\r\n\r\ninterface IProps {\r\n    show: boolean;\r\n    setShow: (value: boolean | ((prevVisible: boolean) => boolean)) => void;\r\n    children: React.ReactNode,\r\n    modalWidth: number;\r\n    setModalWidth: Dispatch<SetStateAction<number>>;\r\n\r\n}\r\n\r\n\r\n\r\nconst style = {\r\n    transition: \"all 0.8s 0s\",\r\n   \r\n}\r\n\r\nconst ReusableHeadersNav = ({ show, setShow, children,modalWidth,setModalWidth }: IProps) => {\r\n   \r\n    useEffect(()=>{        \r\n            setModalWidth(20)       \r\n    },[show])\r\n       \r\n\r\n \r\n\r\n    if (!show) return null\r\n\r\n    return (\r\n        <div className={`sm:fixed hidden inset-10 z-10  sm:flex justify-center items-center b  bg-opacity-0       `}onClick={() => setShow(false)} >\r\n\r\n            <div style={style} className={`sm:h-[100vh]  border-r-[1px] border-l-[1px] b  fixed left-16  bg-white shd rounded-r-2xl    ${modalWidth === 0 ? 'w-[20px]' : 'w-[20%]'}`} \r\n            onClick={e => e.stopPropagation()}>\r\n                <div className='flex  py-4 items-center 0'>\r\n                    {children}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(ReusableHeadersNav)","import { useEffect, useState,memo } from 'react'\r\nimport 'remixicon/fonts/remixicon.css'\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport { useAppSelector } from '../../redux/hooks/redux-hooks'\r\nimport DropDownSetting from './modals/DropSettings/DropSetting'\r\nimport '../../App.css';\r\nimport ReusableModal from './modals/ReusableModal'\r\nimport NewPostModal from './modals/CreateNewPostModal/CreateNewPostModal'\r\nimport Search from './modals/Search/Search'\r\nimport { useLocation } from 'react-router-dom'\r\nimport Notifications from './modals/Notifications/Notifications'\r\nimport ReusableHeadersNav from './modals/ReusableHeadersNav'\r\nimport LoadingBar from 'react-top-loading-bar'\r\nimport { auth } from '../../firebase/firebase'\r\nimport PagesRoutes from '../../constants/router-types'\r\n\r\nconst Header = memo(() => {\r\n\r\n    const { profileImage } = useAppSelector(user => user.user.user)\r\n    const signedUser = useAppSelector(user => user.user.user)\r\n\r\n\r\n\r\n    const [showSearch, setShowSearch] = useState(false)\r\n    const [showSettings, setShowSettings] = useState(false)\r\n    const [visible, setVisible] = useState(false)\r\n    const [showNotifications, setShowNotifications] = useState(false)\r\n    const [width, setWidth] = useState(20)\r\n    const [modalWidth, setModalWidth] = useState(0)\r\n    const [progress, setProgress] = useState(100)\r\n\r\n    const location = useLocation()\r\n\r\n\r\n\r\n\r\n    const showSearchControl = () => {\r\n        setShowSearch(prev => !prev)\r\n        setShowNotifications(false)\r\n    }\r\n\r\n\r\n\r\n    const showNotificationsControl = () => {\r\n        setShowNotifications(prev => !prev)\r\n        setShowSearch(false)\r\n    }\r\n\r\n\r\n\r\n    const showCreatePostModal = () => {\r\n        setVisible(true)\r\n        setShowNotifications(false)\r\n        setShowSearch(false)\r\n\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!showSearch && !showNotifications) {\r\n            setModalWidth(0)\r\n        }\r\n    }, [showSearch, showNotifications])\r\n\r\n\r\n\r\n    const style = {\r\n        transition: \"width 0.8s 0s\"\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        showSearch || showNotifications ? setWidth(5) : setWidth(20)\r\n    }, [showSearch, showNotifications])\r\n\r\n\r\n\r\n    return auth ?  (\r\n        <div className='flex '>\r\n            <LoadingBar\r\n                color='#FF8000'\r\n                progress={progress}\r\n                onLoaderFinished={() => setProgress(0)}\r\n                waitingTime={0}\r\n                height={3} />\r\n\r\n            <div style={style} className={`sm:h-[100vh]  border-r-[1px] bg-white flex flex-col justify-between     sm:w-[75px] xl:w-[${width}%] \r\n            fixed  ${width === 5 ? `text-[${0}px]` : 'text-[0px] xl:text-base'}  `}  >\r\n                <div className='flex sm:block fixed bottom-0 sm:static w-[100%] bg-gray-100 sm:bg-white border-t-[2px] sm:border-none pt-2 sm:p-2 justify-center' onClick={() => setShowSettings(false)} >\r\n                    <div className='flex items-center p-4 py-8   active:opacity-25 '>\r\n                        <Link to='/' className='font-pacifico   '>\r\n                            <i className={`ri-instagram-line  text-2xl ${width === 5 ? 'hidden sm:block ' : 'sm:block hidden xl:hidden'} `}></i>\r\n                            <h1 className={` text-2xl ${width === 5 ? 'hidden  ' : 'hidden xl:block'} `}>Instagram</h1>\r\n\r\n                        </Link>\r\n                    </div>\r\n                    <div className='a mb-4  active:opacity-25 px-2 '>\r\n                        <Link to='/' className='  flex items-center  sm:w-[100%]  sm:hover:bg-gray-100 active:bg-gray-50 rounded-3xl p-1 px-2'>\r\n                            {!showSearch && !showNotifications && location.pathname === '/' ? <i className=\"b ri-home-4-fill  mr-2 flex text-2xl \"></i> : <i className=\"b ri-home-4-line text-2xl mr-2 flex\"></i>}\r\n                            <h1 className={location.pathname === '/' ? 'font-bold' : ''}>Home</h1>\r\n                        </Link>\r\n                    </div>\r\n                    <div className='a mb-4 hidden sm:block  active:opacity-25 px-2 '>\r\n                        <div className={`flex items-center w-[100%] ${showSearch ? 'outline  outline-1    outline-gray-300  ' : ''} sm:hover:bg-gray-100 rounded-3xl p-1 px-2 cursor-pointer `}\r\n                            onClick={() => showSearchControl()} >\r\n                            <i className={`b ri-search-2-line   hidden sm:block text-2xl ${showSearch ? 'font-bold' : ''}`}></i>\r\n                            <h1 className={width === 5 ? 'font-bold ' : 'px-2'}>Search</h1>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='a mb-4  active:opacity-25 px-2'>\r\n                        <Link to='/explore/' className='flex items-center w-[100%] sm:hover:bg-gray-100 rounded-3xl p-1 px-2'>\r\n                            {!showSearch && !showNotifications && location.pathname === '/explore/' ? <i className=\"b ri-compass-3-fill   text-2xl\"></i> : <i className=\"b ri-compass-3-line text-2xl \"></i>}\r\n                            <h1 className={location.pathname === '/explore/' ? 'font-bold px-2' : 'px-2'}>Explore</h1>\r\n                        </Link>\r\n                    </div>\r\n\r\n               \r\n                    <div className='mb-4 active:opacity-25 px-2  a'>\r\n                        <Link to='/direct/' className='flex items-center  w-[100%] sm:hover:bg-gray-100 rounded-2xl p-1 px-2'>\r\n                            {!showSearch && !showNotifications && location.pathname === '/direct/' ? <i className=\"ri-chat-smile-2-fill text-2xl b\"></i> : <i className=\" b ri-chat-smile-2-line text-2xl  \"></i>}\r\n                            <h1 className={location.pathname === '/direct/' ? 'font-bold px-2' : 'px-2'}>Messages</h1>\r\n                        </Link>\r\n                    </div>\r\n                    <div className='mb-4 hidden sm:block a active:opacity-25 px-2' onClick={() => showNotificationsControl()}>\r\n                        <div className={`flex items-center w-[100%] sm:hover:bg-gray-100 rounded-3xl p-1 px-2 cursor-pointer ${showNotifications ? 'outline  outline-1    outline-gray-300  ' : ''} `}>\r\n                            <i className=\"b ri-heart-3-line   hidden sm:block text-2xl\"></i>\r\n                            <h1 className='px-2'>Notifications</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='mb-4  a active:opacity-25 px-2' >\r\n                        <button onClick={showCreatePostModal} className='flex items-center w-[100%] sm:hover:bg-gray-100 rounded-3xl p-1 px-2'>\r\n                            <i className=\"b ri-add-box-line text-2xl  \"></i>\r\n                            <h1 className='px-2'>Create</h1>\r\n                        </button>\r\n                    </div>\r\n                    <ReusableModal setVisible={setVisible} visible={visible}>\r\n                        <NewPostModal setVisible={setVisible} />\r\n                    </ReusableModal>\r\n                    <div className='mb-4 a active:opacity-25 px-2' >\r\n                        <Link to={`/${signedUser.uid}/`} className={`${location.pathname === `/${signedUser.uid}/` ? 'font-bold' : ''} flex items-center w-[100%]  sm:hover:bg-gray-100 rounded-3xl p-2 px-2`}>\r\n                            <img\r\n                                alt='profileImg'\r\n                                src={profileImage ? profileImage : process.env.PUBLIC_URL +`/images/profile.png`}\r\n                                className='w-6 rounded-full h-6  b   '\r\n                            />\r\n                            <h1 className='px-2 '>Profile</h1>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className='a   justify-between active:opacity-25 hidden sm:block' onClick={() => setShowSettings(prev => !prev)}  >\r\n                    <button className='flex items-center w-[100%] hover:bg-gray-100 rounded-3xl p-1 px-4 mb-4  '><i className=\"b ri-menu-line text-2xl mr-2 hidden sm:block\"></i>\r\n                        <h1 className=''>More</h1>\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n            <div className='hidden sm:block'>\r\n\r\n                {showSettings ? <DropDownSetting setShowSettings={setShowSettings} /> : ''}\r\n            </div>\r\n\r\n            {\r\n                showNotifications || showSearch ?\r\n                    <div>\r\n                        <ReusableHeadersNav setShow={setShowSearch} show={showSearch} setModalWidth={setModalWidth} modalWidth={modalWidth} >\r\n                            <Search setModalWidth={setModalWidth} modalWidth={modalWidth} />\r\n                        </ReusableHeadersNav>\r\n\r\n                        <ReusableHeadersNav setShow={setShowNotifications} show={showNotifications} setModalWidth={setModalWidth} modalWidth={modalWidth}  >\r\n                            <Notifications setModalWidth={setModalWidth} modalWidth={modalWidth} />\r\n                        </ReusableHeadersNav>\r\n                    </div>\r\n                    : ''\r\n\r\n            }\r\n\r\n        </div>\r\n    ): (\r\n        <Navigate to={PagesRoutes.SIGN_IN} />\r\n      )\r\n})\r\n\r\nexport default memo(Header) ","import React, { memo } from 'react'\r\n\r\n\r\ninterface IProps {\r\n    visible: boolean;\r\n    setVisible: (value: boolean | ((prevVisible: boolean) => boolean)) => void;\r\n    children: React.ReactNode,\r\n  \r\n    \r\n  }\r\n\r\nconst ReusableModal = ({visible,setVisible,children}: IProps) => {\r\n\r\n \r\nif (!visible) return null\r\n    return (\r\n        <div className='fixed inset-0 z-10   bg-opacity-30 backdrop-blur-sm flex justify-center items-center bg-gray-500' onClick={()=>setVisible(false)} >\r\n            <div onClick={e => e.stopPropagation()} className=' rounded shadow-sm z-20'>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(ReusableModal)","import React, { memo } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { IuserData } from '../../../interfaces/interfaces';\r\n\r\n\r\n\r\nconst RecPeople: React.FC<IuserData> = ({ fullName, userName, profileImage, uid }) => {\r\n    return (\r\n        <div className='flex items-center justify-between px-2 '>\r\n            <div className='flex py-2 mb-2  '>\r\n                <Link to={`/${uid}/`}><img className='border-[1px] rounded-full h-12 w-12 ' alt='prof' src={`${profileImage ? profileImage : process.env.PUBLIC_URL + '/images/profile.png'}`} /></Link>\r\n                <div className='ml-2 mr-4'>\r\n                    <p className='m'>{userName}</p>\r\n                    <h1 className='text-gray-400 '>{fullName}</h1>\r\n                </div>\r\n            </div>\r\n            \r\n           \r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default memo(RecPeople)","import { collection, getDocs } from 'firebase/firestore'\r\nimport  { memo, useEffect, useState } from 'react'\r\nimport { db } from '../../../firebase/firebase'\r\nimport RecPeople from './RecPeople';\r\nimport { useAppSelector } from '../../../redux/hooks/redux-hooks';\r\n\r\n\r\nconst Recommend = () => {\r\n    const [allUsers, setAllUsers] = useState<any>()\r\n    const signedUser = useAppSelector(user => user.user.user)\r\n\r\n\r\n\r\n    const fetchData = async () => {\r\n        setAllUsers([])\r\n        const querySnapshot = await getDocs(collection(db, \"users\"));\r\n\r\n        querySnapshot.forEach((doc) => {\r\n            setAllUsers((prev: any) => [...prev, { ...doc.data() }])\r\n        })\r\n    }\r\n\r\n\r\n\r\n    let initialized = false;\r\n    useEffect(() => {\r\n        if (!initialized) {\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n            initialized = true\r\n            fetchData()\r\n        }\r\n    }, [])\r\n    const recommendUsers = allUsers?.filter((user: { uid: string; }) => (user.uid !== signedUser.uid))\r\n\r\n\r\n\r\n    const peopleEl = recommendUsers?.map((user: any) => (\r\n        <RecPeople fullName={user.fullName} uid={user.uid} userName={user.userName} profileImage={user.profileImage} />\r\n    ))\r\n\r\n\r\n\r\n    return (\r\n        <div className='flex flex-col p-2 mt-'>\r\n            <div className=''>\r\n                <h1 className='font-bold' >Suggestions For You</h1>\r\n            </div>\r\n            <div className='border-[1px] mt-2 w-[100%] flex flex-col '>\r\n                {peopleEl}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(Recommend)"],"names":["className","to","PagesRoutes","setShowSettings","dispatch","useAppDispatch","navigate","useNavigate","useState","visible","setVisible","signedUser","useAppSelector","user","handleLogOut","signOut","auth","removeUser","onClick","e","stopPropagation","uid","ReusableModal","addNewPost","createAsyncThunk","image","text","getState","userData","imagesRef","ref","storage","name","nanoid","uploadBytes","getDownloadURL","imagesAdress","newPost","postImage","postId","commets","likes","createdData","Date","getTime","toString","updateDoc","doc","db","posts","setUser","NewPostModal","nextStep","setNextStep","selectedImage","setSelectedImage","imagesUrl","setImagesUrl","setText","showPicker","setShowPicker","profileImage","userName","sharePost","event","useEffect","URL","createObjectURL","src","process","alt","onChange","target","files","imageToLoad","prev","createNewPostPreview","type","value","currentTarget","id","placeholder","length","onEmojiClick","emojiObject","emoji","width","height","memo","SearchedUser","fullName","Search","modalWidth","setModalWidth","allUsers","setAllUsers","userNameInput","setUserNameInput","initialized","fetchData","getDocs","collection","forEach","data","searchedUser","filter","toLowerCase","includes","searchedUserEl","map","followers","followersEl","Recommend","style","transition","ReusableHeadersNav","show","setShow","children","Header","showSearch","setShowSearch","showSettings","showNotifications","setShowNotifications","setWidth","progress","setProgress","location","useLocation","color","onLoaderFinished","waitingTime","pathname","RecPeople","recommendUsers","peopleEl"],"sourceRoot":""}
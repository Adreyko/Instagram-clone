{"version":3,"file":"static/js/865.d06a5b14.chunk.js","mappings":"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","sources":["pages/NotFound/NotFound.tsx","pages/Profile/hooks/useFollow.ts","pages/Profile/SignedUserProfile/Modals/ModaUnFollow/ModalUnFollow.tsx","pages/Profile/AnotherUser/AnotherUser.tsx","pages/Profile/Posts/Post.tsx","pages/Profile/Posts/Posts.tsx","pages/Profile/SignedUserProfile/Modals/ModalUploadImage/ModalUploadImage.tsx","pages/Profile/SignedUserProfile/SavedPosts/SavedPost.tsx","pages/Profile/SignedUserProfile/SavedPosts/SavedPosts.tsx","pages/Profile/SignedUserProfile/SignedUser.tsx","redux/slices/userSlice/anotherUserSlice/tnunk/setFetchAnotherUser.ts","pages/Profile/Profile.tsx","pages/Profile/hooks/useChat.tsx"],"sourcesContent":["import React from 'react'\r\nimport Header from '../../components/Header/Header'\r\n\r\nconst NotFound = () => {\r\n    return (\r\n\r\n        <div className='flex'>\r\n            <Header/>\r\n            <div className='w-[100%] flex flex-col  items-center p-8'>\r\n            <h1 className=' text-2xl'>Sorry, this page isn't available.</h1>\r\n            <p className='mt-8'>The link you followed may be broken, or the page may have been removed. <span className='text-indigo-300'>Go back to Instagram.</span> </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound","import React from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../redux/hooks/redux-hooks\";\r\nimport { setUser } from \"../../../redux/slices/userSlice/userSlice/userSlice\";\r\nimport { setAnotherUser } from \"../../../redux/slices/userSlice/anotherUserSlice/anotherUserSlice\";\r\nimport { doc, getDoc, updateDoc } from \"firebase/firestore\";\r\nimport { db } from \"../../../firebase/firebase\";\r\nimport { uptime } from \"process\";\r\n\r\n\r\n\r\n\r\ntype userToFollow = {\r\n    profileImage: string,\r\n    userName: string,\r\n    fullName: string,\r\n    uid: string\r\n}\r\n\r\nconst useFollow = () => {\r\n    const anotherUser = useAppSelector(user => user.anotherUser.user)\r\n    const signedUser = useAppSelector(user => user.user.user)\r\n    const dispatch = useAppDispatch()\r\n\r\n\r\n    const followPerson = async ({ userName, fullName, profileImage, uid }: userToFollow) => {\r\n\r\nconsole.log(uid)\r\n        const anotherUserIsFollowing = signedUser.following.find(user => user.uid === uid)\r\n            \r\n\r\n        if (anotherUser.uid === uid) {\r\n            if (!anotherUserIsFollowing) {\r\n\r\n\r\n                dispatch(setUser({\r\n                    ...signedUser, following: [...signedUser.following, {\r\n                        userName,\r\n                        fullName,\r\n                        profileImage,\r\n                        uid,\r\n                    }]\r\n                }))\r\n                dispatch(setAnotherUser({\r\n                    ...anotherUser, followers: [...anotherUser.followers, {\r\n                        userName: signedUser.userName,\r\n                        fullName: signedUser.fullName,\r\n                        profileImage: signedUser.profileImage,\r\n                        uid: signedUser.uid\r\n                    }]\r\n                }))\r\n\r\n                await updateDoc(doc(db, 'users', uid), {\r\n                    followers: [...anotherUser.followers, {\r\n                        userName: signedUser.userName,\r\n                        fullName: signedUser.fullName,\r\n                        profileImage: signedUser.profileImage,\r\n                        uid: signedUser.uid\r\n                    }]\r\n                })\r\n                await updateDoc(doc(db, 'users', signedUser.uid), {\r\n                    following: [...signedUser.following, {\r\n                        userName,\r\n                        fullName,\r\n                        profileImage,\r\n                        uid\r\n                    }]\r\n                })\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n    const unFollowPerson = async (uid: string) => {\r\n\r\n        const filteredFollowers = anotherUser.followers.filter(follower => follower.uid !== signedUser.uid)\r\n        const filteredFollowing = signedUser.following.filter(person => person.uid !== uid)\r\n\r\n        dispatch(setUser({ ...signedUser, following: filteredFollowing }))\r\n        dispatch(setAnotherUser({ ...anotherUser, followers: filteredFollowers }))\r\n\r\n        await updateDoc(doc(db, 'users', signedUser.uid), {\r\n            following: filteredFollowing\r\n        })\r\n        await updateDoc(doc(db, 'users', uid), {\r\n            followers: filteredFollowers\r\n        })\r\n\r\n    }\r\n\r\n    return { followPerson, unFollowPerson }\r\n\r\n\r\n}\r\nexport default useFollow","import React from 'react'\r\nimport { useAppSelector } from '../../../../../redux/hooks/redux-hooks'\r\nimport useFollow from '../../../hooks/useFollow'\r\nimport { useParams } from 'react-router-dom'\r\ninterface IProps {\r\n\r\n    setVisible: (value: boolean | ((prevVisible: boolean) => boolean)) => void;\r\n    uid: string;\r\n    profileImage : string;\r\n\r\n}\r\n\r\n\r\n\r\nconst ModalFollowing = ({ setVisible, uid ,profileImage}: IProps) => {\r\n\r\n    const { unFollowPerson } = useFollow()\r\n    const anotherUser = useAppSelector(user => user.anotherUser.user)\r\n\r\n    const unFollowActived = () => {\r\n        setVisible(false)\r\n        unFollowPerson(uid as string)\r\n    }\r\n\r\n    return (\r\n        <div className='  flex-col items-center text-center rounded-xl bg-white   '>\r\n            <div className=' border-b-2 py-4 px-32'>\r\n                <img className='w-20 rounded-full h-20' src={profileImage} alt=\"pic\" />\r\n            </div>\r\n            <div onClick={unFollowActived} className='flex justify-start px-4 py-4 hover:bg-gray-100 rounded-xl cursor-pointer'>\r\n                <button>Unfollow</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalFollowing","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useAppDispatch, useAppSelector } from '../../../redux/hooks/redux-hooks'\r\nimport useFollow from '../hooks/useFollow'\r\nimport ReusableModal from '../../../components/Header/modals/ReusableModal'\r\nimport ModalFollowing from '../SignedUserProfile/Modals/ModaUnFollow/ModalUnFollow'\r\nimport { Link } from 'react-router-dom'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { Posts } from '../Posts/Posts'\r\nimport useChat from '../hooks/useChat'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\n\r\nconst AnotherUser: React.FC = () => {\r\n    const { uid } = useParams()\r\n\r\n    const signedUser = useAppSelector(user => user.user.user)\r\n    const anotherUser = useAppSelector(user => user.anotherUser.user)\r\n    const location = useLocation()\r\n    const { email, profileImage, userName, followers, following, posts, fullName } = useAppSelector(state => state.anotherUser.user)\r\n    const { followPerson } = useFollow()\r\n    const signedUserSubsribed = anotherUser.followers.find(user => user.uid === signedUser.uid)\r\n    const [visible, setVisible] = useState(false)\r\n    const { chatWithUser } = useChat()\r\n    const navigate = useNavigate()\r\n    const createChat = () => {\r\n        chatWithUser(anotherUser)\r\n        navigate('/direct')\r\n\r\n    }\r\n    return (\r\n        <div className='sm:flex bg-gray-50 w-[100%] h-[100vh] sm:w-[90%] md:w-[80%]'>\r\n            <div className=' w-[100%] p-4  xl:mx-[20%]'>\r\n                <div className='flex  justify-center'>\r\n                    <div className='mr-8 h-32 w-32 sm:h-40 sm:w-40'>\r\n                        <img className=' rounded-full object-cover  w-[100px] h-[100px]  sm:h-40 sm:w-40    cursor-pointer border-[1px]'\r\n                            src={profileImage ? profileImage : process.env.PUBLIC_URL +`/images/profile.png`} alt=\"\" />\r\n                    </div>\r\n                    <div>\r\n                        <div className='sm:flex-row justify-between w-[50%] sm:w-[100%]  flex flex-col  text-center '>\r\n                            <h1 className='text-2xl font-[300]'>{userName}</h1>\r\n                            {signedUserSubsribed ?\r\n                                <button\r\n                                    onClick={() => setVisible(true)}\r\n                                    className='ml-4 bg-zinc-200 p-1 px-3 rounded-md mb-2 '>\r\n                                    Following\r\n                                </button>\r\n                                :\r\n                                <button\r\n                                    onClick={() => followPerson(anotherUser)}\r\n                                    className='ml-4  p-1 px-6 rounded-md text-white  bg-blue-500  mb-2'>\r\n                                    Follow\r\n                                </button>\r\n                            }\r\n                            <ReusableModal visible={visible} setVisible={setVisible}>\r\n                                <ModalFollowing profileImage={anotherUser.profileImage}\r\n                                    setVisible={setVisible} uid={uid as string} />\r\n                            </ReusableModal>\r\n                            <button className='ml-4 bg-zinc-200 p-1 px-3 rounded-md mb-2 ' onClick={createChat}>Message</button>\r\n\r\n                        </div>\r\n                        <div className='flex  mt-4 mr-12 '>\r\n                            <h1 className='mr-8'>{posts.length} posts</h1>\r\n                            <Link\r\n                                to={`/${uid}/followers`}\r\n                                state={{ background: location }}>\r\n                                <h1 className='mr-8 cursor-pointer'>{followers.length} followers</h1>\r\n                            </Link>\r\n                            <Link\r\n                                to={`/${uid}/following`}\r\n                                state={{ background: location }}>\r\n                                <h1 className='mr-8 cursor-pointer'>{following.length} following</h1>\r\n                            </Link>\r\n                        </div>\r\n                        <div className='flex flex-col mt-4 mr-[275px]'>\r\n                            <h1 className='font-bold'>{fullName}</h1>\r\n                            <p>About me</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className='mt-12 border-t-2 flex justify-center'>\r\n                    <button className='mr-10 mt-2 text-[15px] flex items-center'><i className=\"ri-grid-line mr-1\"></i>POSTS</button>\r\n                    <button className='ml-10 mt-2 text-[15px] flex items-center'><i className=\"ri-price-tag-3-line mr-1\"></i>TAGGED</button>\r\n                </div>\r\n                <Posts />\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default AnotherUser","import React, { useState } from 'react'\r\nimport { IUserState } from '../../../interfaces/interfaces'\r\nimport { Link } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { auth } from '../../../firebase/firebase';\r\nimport PagesRoutes from '../../../constants/router-types';\r\nimport { Navigate } from 'react-router-dom';\r\ninterface ParentStateItem {\r\n\r\n\r\n  postImage: string;\r\n  postId: string;\r\n  user: string;\r\n}\r\n\r\ninterface ParentState {\r\n  posts: ParentStateItem;\r\n}\r\n\r\nexport const Post: React.FC<ParentStateItem> = ({ postImage, postId, user }) => {\r\n\r\n\r\n  const [visible, setVisible] = useState(false)\r\n  const location = useLocation()\r\n\r\n  return auth ? (\r\n    <div className=' bg-black flex items-center justify-center mt-9 w-[90%] m-auto '>\r\n      <Link to={`/${user}/${postId}`} state={{ background: location }}>\r\n        <div className=' bg-black w-full sm:h-[250px] h-[100px] flex items-center justify-center '>\r\n          <img          \r\n            onClick={() => setVisible(true)}\r\n            className='hover:opacity-50 h-full w-full object-cover  '\r\n            src={postImage}\r\n            alt=\"post\" />\r\n        </div>\r\n      </Link>\r\n\r\n\r\n    </div>\r\n  )\r\n    : (\r\n      <Navigate to={PagesRoutes.SIGN_IN} />\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { db } from '../../../firebase/firebase'\r\nimport { doc } from 'firebase/firestore'\r\nimport { getDoc } from 'firebase/firestore'\r\nimport { Post } from './Post'\r\n\r\nexport const Posts = () => {\r\n\r\n    const { uid } = useParams()\r\n\r\n    const [post, setPost] = useState<any[]>()\r\n\r\n\r\n    const postImage = post?.map(post => (\r\n        <Post postImage={post.postImage} postId={post.postId} user={post.user} />\r\n    ))\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchData = async () => {\r\n            const docRef = doc(db, \"users\", uid as string)\r\n            const docSnap = await getDoc(docRef);\r\n\r\n            setPost(docSnap.data()?.posts)\r\n\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <div className=' grid grid-cols-3 gap-6  mt-2  '> {postImage?.reverse()} </div>\r\n    )\r\n\r\n\r\n}\r\n","import React from 'react'\r\nimport { useAppSelector, useAppDispatch } from '../../../../../redux/hooks/redux-hooks';\r\nimport { uploadProfileImage } from '../../../../../redux/slices/userSlice/userSlice/thunk/uploadProfileImage';\r\n\r\ninterface IProps {\r\n\r\n  setVisible: (value: boolean | ((prevVisible: boolean) => boolean)) => void;\r\n\r\n\r\n}\r\n\r\nconst ModalUploadImage = ({ setVisible }: IProps) => {\r\n  const currentUser = useAppSelector(state => state.user.user)\r\n  const dispatch = useAppDispatch()\r\n\r\n  const ImageSelectedHandler = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n    if (!event.target.files) {\r\n      return\r\n    }\r\n\r\n    const selectedImage = event.target.files[0]\r\n\r\n\r\n    dispatch(await uploadProfileImage({ image: selectedImage }))\r\n    setVisible(false)\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className='  flex-col items-center text-center rounded-xl bg-white   '>\r\n      <div className='border-b-[1px] p-8 flex items-center  justify-center'>\r\n        <h1 className='font-bold  px-16 cursor-pointer'>Change profile photo</h1>\r\n      </div>\r\n      <div className='border-b-[1px] p-2 px-8 active:bg-gray-100 '>\r\n        <label className=' font-bold text-blue-400 cursor-pointer w-36 0'  >Upload photo\r\n          <input type=\"file\" className='hidden  ' onChange={(e) => ImageSelectedHandler(e)} accept=\"image/png, image/gif, image/jpeg\" />\r\n        </label>\r\n      </div>\r\n     \r\n      <div className='flex items-center justify-center  cursor-pointer active:bg-gray-100 active:rounded-b-xl ' onClick={() => setVisible(false)}>\r\n        <h1 className=' cursor-pointer py-3'>Cancel</h1>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModalUploadImage","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { auth } from '../../../../firebase/firebase';\r\nimport { IPost } from '../../../../interfaces/interfaces';\r\nimport { Navigate } from 'react-router-dom';\r\nimport PagesRoutes from '../../../../constants/router-types';\r\n\r\n\r\n\r\nexport const SavedPost: React.FC<IPost> = ({ postImage, postId, user }) => {\r\n\r\n\r\n\r\n  const location = useLocation()\r\n\r\n  return auth ? (\r\n    <div className=' bg-black flex items-center justify-center mt-9 w-[90%] m-auto '>\r\n      <Link to={`/${user}/${postId}`} state={{ background: location }}>\r\n        <div className=' bg-black w-full sm:h-[250px] h-[100px] flex items-center justify-center '>\r\n          <img          \r\n            className='hover:opacity-50 h-full w-full object-cover  '\r\n            src={postImage}\r\n            alt=\"post\" />\r\n        </div>\r\n      </Link>\r\n\r\n\r\n    </div>\r\n  )\r\n    : (\r\n      <Navigate to={PagesRoutes.SIGN_IN} />\r\n    )\r\n}\r\n","import { doc, getDoc } from 'firebase/firestore'\r\nimport React, { memo, useEffect, useState } from 'react'\r\nimport { db } from '../../../../firebase/firebase'\r\nimport { useParams } from 'react-router-dom'\r\nimport { SavedPost } from './SavedPost'\r\n\r\n\r\nconst SavedPosts = () => {\r\n\r\n  const [savedPosts, setSavedPosts] = useState<any[]>()\r\n\r\n  const { uid } = useParams()\r\n \r\n\r\n\r\n  const savedImage = savedPosts?.map((post: { postImage: string; postId: string; user: string }) => (\r\n    <SavedPost postImage={post.postImage} postId={post.postId} user={post.user} />\r\n))\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const docRef = doc(db, \"users\", uid as string)\r\n      const docSnap = await getDoc(docRef);\r\n\r\n\r\n      setSavedPosts(docSnap.data()?.savedPosts)\r\n    }\r\n\r\n    getData()\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=' grid grid-cols-3 gap-6  mt-2  '> {savedImage?.reverse()} </div>\r\n  )\r\n}\r\n\r\nexport default memo(SavedPosts)","import { memo, useState } from 'react'\r\nimport { getAuth } from 'firebase/auth'\r\nimport { useAppSelector } from '../../../redux/hooks/redux-hooks'\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport PagesRoutes from '../../../constants/router-types'\r\nimport ReusableModal from '../../../components/Header/modals/ReusableModal'\r\nimport ModalUploadImage from './Modals/ModalUploadImage/ModalUploadImage'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { Posts } from '../Posts/Posts'\r\nimport SavedPosts from './SavedPosts/SavedPosts'\r\nimport { HashLink } from 'react-router-hash-link'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst SignedUser = () => {\r\n\r\n\r\n    const auth = getAuth()\r\n    const user = useAppSelector(user => user.user.user)\r\n    const [visible, setVisible] = useState(false)\r\n    const { uid } = useParams()\r\n    const [showSavedPosts, setShowSavedPosts] = useState(false)\r\n\r\n    const location = useLocation()\r\n    const navigate = useNavigate()\r\n\r\n    const { userName, profileImage, followers, posts, following, fullName } = useAppSelector(state => state.user.user)\r\n\r\n\r\n    const openSaved = () => {\r\n        setShowSavedPosts(false)\r\n        window.history.replaceState({}, `saved`, `/${uid}`);\r\n    }\r\n\r\n    return auth ? (\r\n\r\n        <div className='sm:flex bg-gray-50 w-[100%] sm:w-[90%] md:w-[80%]   '>\r\n            <div className='   w-[100%] p-4  xl:mx-[20%]  '>\r\n                <div className='flex  justify-center '>\r\n                    <div className='w-[30%] flex justify-center '>\r\n                        <img onClick={() => setVisible(true)} className='rounded-full object-cover  w-[100px] h-[100px]  sm:h-40 sm:w-40    cursor-pointer border-[1px]' src={profileImage ? profileImage : process.env.PUBLIC_URL +`/images/profile.png`} alt=\"\" />\r\n                    </div>\r\n                    <ReusableModal visible={visible} setVisible={setVisible}>\r\n                        <ModalUploadImage setVisible={setVisible} />\r\n                    </ReusableModal>\r\n                   \r\n                        <div className='w-[70%]'>\r\n                            <div className='sm:flex-row justify-between w-[50%] sm:w-[100%]  flex flex-col  text-center  '>\r\n                                <h1 className='text-2xl font-[300]'>{userName}</h1>\r\n                            </div>\r\n                            <div className='flex  mt-4 mr-12 '>\r\n                                <h1 className='mr-8'>{posts.length} posts</h1>\r\n                                <Link\r\n                                    to={`/${uid}/followers`}\r\n                                    state={{ background: location }}>\r\n                                    <h1 className='mr-8 cursor-pointer'>{followers.length} followers</h1>\r\n                                </Link>\r\n                                <Link\r\n                                    to={`/${uid}/following`}\r\n                                    state={{ background: location }}>\r\n                                    <h1 className='mr-8 cursor-pointer'>{following.length} following</h1>\r\n                                </Link>\r\n                            </div>\r\n                            <div className='flex flex-col mt-4 mr-[275px]'>\r\n                                <h1 className='font-bold'>{fullName}</h1>\r\n                                <p>About me</p>\r\n                            </div>\r\n                        </div>\r\n                    \r\n                </div>\r\n                <div>\r\n                    <div className='mt-12 border-t-2 flex justify-center'>\r\n                        <button onClick={() => openSaved()} className={` ${!showSavedPosts ? 'border-t-[1px] border-black' : ''} pt-4 mr-10 border-black text-[15px] flex items-center`}><i className=\"ri-grid-line mr-1\"></i>POSTS</button>\r\n                        <HashLink to='#saved'>\r\n                            <button\r\n                                onClick={() => setShowSavedPosts(true)}\r\n                                className={` ${showSavedPosts ? 'border-t-[1px] border-black' : ''} pt-4  border-black text-[15px] flex items-center`}>\r\n                                <i className=\"ri-bookmark-line  mr-1\"></i>SAVED\r\n                            </button>\r\n                        </HashLink>\r\n                        <button className='ml-10 pt-4 text-[15px] flex items-center'><i className=\"ri-price-tag-3-line mr-1\"></i>TAGGED</button>\r\n                    </div>\r\n                    <div className='p-2'>\r\n\r\n                        {showSavedPosts ?\r\n                            <SavedPosts />\r\n                            :\r\n                            < Posts />}\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    ) : (\r\n        <Navigate to={PagesRoutes.SIGN_IN} />\r\n    )\r\n}\r\n\r\nexport default memo(SignedUser) ","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { db } from \"../../../../../firebase/firebase\";\r\nimport { getDoc,doc } from \"firebase/firestore\";\r\nimport { setAnotherUser } from \"../anotherUserSlice\";\r\nimport {IUserState} from \"../../../../../interfaces/interfaces\";\r\n\r\n\r\nexport const fetchAnotherUser = createAsyncThunk('user/fetchAntotherUser',async (uid: string, { dispatch })=>{\r\n    const docUser = await getDoc(doc(db, \"users\", uid))\r\n\r\n    const userToFetch  = docUser.data()\r\n    // console.log(userToFetch)\r\n\r\n    if (userToFetch) {\r\n        dispatch(setAnotherUser(userToFetch as IUserState)) \r\n    }\r\n})","import React, { memo, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport SignedUser from './SignedUserProfile/SignedUser'\r\nimport AnotherUser from './AnotherUser/AnotherUser'\r\nimport { useAppSelector } from '../../redux/hooks/redux-hooks'\r\nimport NotFound from '../NotFound/NotFound'\r\nimport { useAppDispatch } from '../../redux/hooks/redux-hooks'\r\nimport { fetchAnotherUser } from '../../redux/slices/userSlice/anotherUserSlice/tnunk/setFetchAnotherUser'\r\nimport Header from '../../components/Header/Header'\r\n\r\n\r\n\r\nconst Profile = () => {\r\n  const { uid } = useParams()\r\n  const signedUser = useAppSelector(user => user.user.user)\r\n  const anotherUser = useAppSelector(user => user.anotherUser.user)\r\n  const dispatch = useAppDispatch()\r\n  const [loading, SetLoading] = useState(false)\r\n \r\n\r\n  useEffect(() => {\r\n\r\n    if (signedUser.uid !== uid) {\r\n      dispatch(fetchAnotherUser(uid as string))\r\n    }\r\n\r\n\r\n  }, [uid])\r\n\r\n  // useEffect(() => {\r\n\r\n  //   SetLoading(true)\r\n\r\n\r\n  //   setTimeout(() => {\r\n  //     SetLoading(false)\r\n  //   }, 100)\r\n\r\n  // }, [])\r\n\r\n\r\n\r\n  return signedUser.uid === uid ? (\r\n    <div>\r\n      \r\n      <div className='bg-gray-50  flex justify-between'>\r\n\r\n        <div className='bg-gray-50 h-[100vh]'>\r\n          <Header />\r\n        </div>\r\n        <SignedUser />\r\n\r\n      </div>\r\n    </div>\r\n\r\n\r\n  )\r\n    :\r\n    (\r\n      <>\r\n        {\r\n          anotherUser.uid === uid ?\r\n            <div className='bg-gray-50  flex justify-between'>\r\n              <div >\r\n                <Header />\r\n              </div>\r\n              <AnotherUser />\r\n            </div>\r\n            :\r\n            <NotFound />}\r\n      </>\r\n\r\n    )\r\n}\r\n\r\nexport default memo(Profile)","import React from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../redux/hooks/redux-hooks\";\r\nimport { setUser } from \"../../../redux/slices/userSlice/userSlice/userSlice\";\r\nimport { setAnotherUser } from \"../../../redux/slices/userSlice/anotherUserSlice/anotherUserSlice\";\r\nimport { doc, getDoc, getDocs, serverTimestamp, setDoc, updateDoc } from \"firebase/firestore\";\r\nimport { db } from \"../../../firebase/firebase\";\r\nimport { updateDo } from \"typescript\";\r\n\r\n\r\ntype userToChat = {\r\n    profileImage: string,\r\n    userName: string,\r\n    uid: string\r\n}\r\n\r\n\r\nconst useChat = () => {\r\n    const signedUser = useAppSelector(user => user.user.user)\r\n\r\n\r\n\r\n    const chatWithUser = async ({ uid, userName, profileImage }: userToChat) => {\r\n        const combineId = signedUser.uid > uid ? signedUser.uid + uid : uid + signedUser.uid\r\n        const anotherInChat = {\r\n            uid: uid,\r\n            userName: userName,\r\n            profileImage: profileImage,\r\n        }\r\n\r\n        const signedInChat = {\r\n            uid: signedUser.uid,\r\n            userName: signedUser.userName,\r\n            profileImage: signedUser.profileImage,\r\n        }\r\n\r\n\r\n\r\n        const docUsers = doc(db, \"chat\", combineId);\r\n        const docSnap = await getDoc(docUsers);\r\n        if (!docSnap.exists()) {\r\n\r\n        await setDoc(doc(db,'chat',combineId),{message : []})\r\n        \r\n        await updateDoc(doc(db,'chats',signedUser.uid),{\r\n            [combineId + '.userInfo'] : anotherInChat,\r\n            [combineId + '.date'] : serverTimestamp()\r\n        })\r\n\r\n        \r\n        await updateDoc(doc(db,'chats',uid),{\r\n            [combineId + '.userInfo'] : signedInChat,\r\n            [combineId + '.date'] : serverTimestamp()\r\n        })\r\n\r\n        \r\n            \r\n\r\n           \r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    return { chatWithUser }\r\n}\r\n\r\nexport default useChat\r\n\r\n"],"names":["className","anotherUser","useAppSelector","user","signedUser","dispatch","useAppDispatch","followPerson","userName","fullName","profileImage","uid","console","log","anotherUserIsFollowing","following","find","setUser","setAnotherUser","followers","updateDoc","doc","db","unFollowPerson","filteredFollowers","filter","follower","filteredFollowing","person","setVisible","useFollow","src","alt","onClick","useParams","location","useLocation","state","email","posts","signedUserSubsribed","useState","visible","chatWithUser","useChat","navigate","useNavigate","process","ReusableModal","length","to","background","Posts","Post","postImage","postId","auth","PagesRoutes","post","setPost","map","useEffect","fetchData","docRef","getDoc","docSnap","data","reverse","ImageSelectedHandler","event","target","files","selectedImage","uploadProfileImage","image","type","onChange","e","accept","SavedPost","SavedPosts","savedPosts","setSavedPosts","savedImage","getData","memo","SignedUser","getAuth","showSavedPosts","setShowSavedPosts","window","history","replaceState","fetchAnotherUser","createAsyncThunk","docUser","userToFetch","Profile","Header","AnotherUser","NotFound","combineId","anotherInChat","signedInChat","docUsers","exists","setDoc","message","serverTimestamp"],"sourceRoot":""}
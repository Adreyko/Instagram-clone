{"version":3,"file":"static/js/418.612f1e8c.chunk.js","mappings":"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","sources":["components/Header/modals/ReusableModal.tsx","pages/Profile/hooks/useFollow.ts","pages/Profile/SignedUserProfile/Modals/ModaUnFollow/ModalUnFollow.tsx","pages/Profile/AnotherUser/AnotherUser.tsx","pages/Profile/Posts/Post.tsx","pages/Profile/Posts/Posts.tsx","pages/Profile/hooks/useChat.tsx"],"sourcesContent":["import React, { memo } from 'react'\r\n\r\n\r\ninterface IProps {\r\n    visible: boolean;\r\n    setVisible: (value: boolean | ((prevVisible: boolean) => boolean)) => void;\r\n    children: React.ReactNode,\r\n  \r\n    \r\n  }\r\n\r\nconst ReusableModal = ({visible,setVisible,children}: IProps) => {\r\n\r\n \r\nif (!visible) return null\r\n    return (\r\n        <div className='fixed inset-0 z-10   bg-opacity-30 backdrop-blur-sm flex justify-center items-center bg-gray-500' onClick={()=>setVisible(false)} >\r\n            <div onClick={e => e.stopPropagation()} className=' rounded shadow-sm z-20'>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(ReusableModal)","import React from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../redux/hooks/redux-hooks\";\r\nimport { setUser } from \"../../../redux/slices/userSlice/userSlice/userSlice\";\r\nimport { setAnotherUser } from \"../../../redux/slices/userSlice/anotherUserSlice/anotherUserSlice\";\r\nimport { doc, getDoc, updateDoc } from \"firebase/firestore\";\r\nimport { db } from \"../../../firebase/firebase\";\r\nimport { uptime } from \"process\";\r\n\r\n\r\n\r\n\r\ntype userToFollow = {\r\n    profileImage: string,\r\n    userName: string,\r\n    fullName: string,\r\n    uid: string\r\n}\r\n\r\nconst useFollow = () => {\r\n    const anotherUser = useAppSelector(user => user.anotherUser.user)\r\n    const signedUser = useAppSelector(user => user.user.user)\r\n    const dispatch = useAppDispatch()\r\n\r\n\r\n    const followPerson = async ({ userName, fullName, profileImage, uid }: userToFollow) => {\r\n\r\nconsole.log(uid)\r\n        const anotherUserIsFollowing = signedUser.following.find(user => user.uid === uid)\r\n            \r\n\r\n        if (anotherUser.uid === uid) {\r\n            if (!anotherUserIsFollowing) {\r\n\r\n\r\n                dispatch(setUser({\r\n                    ...signedUser, following: [...signedUser.following, {\r\n                        userName,\r\n                        fullName,\r\n                        profileImage,\r\n                        uid,\r\n                    }]\r\n                }))\r\n                dispatch(setAnotherUser({\r\n                    ...anotherUser, followers: [...anotherUser.followers, {\r\n                        userName: signedUser.userName,\r\n                        fullName: signedUser.fullName,\r\n                        profileImage: signedUser.profileImage,\r\n                        uid: signedUser.uid\r\n                    }]\r\n                }))\r\n\r\n                await updateDoc(doc(db, 'users', uid), {\r\n                    followers: [...anotherUser.followers, {\r\n                        userName: signedUser.userName,\r\n                        fullName: signedUser.fullName,\r\n                        profileImage: signedUser.profileImage,\r\n                        uid: signedUser.uid\r\n                    }]\r\n                })\r\n                await updateDoc(doc(db, 'users', signedUser.uid), {\r\n                    following: [...signedUser.following, {\r\n                        userName,\r\n                        fullName,\r\n                        profileImage,\r\n                        uid\r\n                    }]\r\n                })\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n    const unFollowPerson = async (uid: string) => {\r\n\r\n        const filteredFollowers = anotherUser.followers.filter(follower => follower.uid !== signedUser.uid)\r\n        const filteredFollowing = signedUser.following.filter(person => person.uid !== uid)\r\n\r\n        dispatch(setUser({ ...signedUser, following: filteredFollowing }))\r\n        dispatch(setAnotherUser({ ...anotherUser, followers: filteredFollowers }))\r\n\r\n        await updateDoc(doc(db, 'users', signedUser.uid), {\r\n            following: filteredFollowing\r\n        })\r\n        await updateDoc(doc(db, 'users', uid), {\r\n            followers: filteredFollowers\r\n        })\r\n\r\n    }\r\n\r\n    return { followPerson, unFollowPerson }\r\n\r\n\r\n}\r\nexport default useFollow","import React from 'react'\r\nimport { useAppSelector } from '../../../../../redux/hooks/redux-hooks'\r\nimport useFollow from '../../../hooks/useFollow'\r\nimport { useParams } from 'react-router-dom'\r\ninterface IProps {\r\n\r\n    setVisible: (value: boolean | ((prevVisible: boolean) => boolean)) => void;\r\n    uid: string;\r\n    profileImage : string;\r\n\r\n}\r\n\r\n\r\n\r\nconst ModalFollowing = ({ setVisible, uid ,profileImage}: IProps) => {\r\n\r\n    const { unFollowPerson } = useFollow()\r\n    const anotherUser = useAppSelector(user => user.anotherUser.user)\r\n\r\n    const unFollowActived = () => {\r\n        setVisible(false)\r\n        unFollowPerson(uid as string)\r\n    }\r\n\r\n    return (\r\n        <div className='  flex-col items-center text-center rounded-xl bg-white   '>\r\n            <div className=' border-b-2 py-4 px-32'>\r\n                <img className='w-20 rounded-full h-20' src={profileImage} alt=\"pic\" />\r\n            </div>\r\n            <div onClick={unFollowActived} className='flex justify-start px-4 py-4 hover:bg-gray-100 rounded-xl cursor-pointer'>\r\n                <button>Unfollow</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalFollowing","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useAppDispatch, useAppSelector } from '../../../redux/hooks/redux-hooks'\r\nimport useFollow from '../hooks/useFollow'\r\nimport ReusableModal from '../../../components/Header/modals/ReusableModal'\r\nimport ModalFollowing from '../SignedUserProfile/Modals/ModaUnFollow/ModalUnFollow'\r\nimport { Link } from 'react-router-dom'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { Posts } from '../Posts/Posts'\r\nimport useChat from '../hooks/useChat'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\n\r\nconst AnotherUser: React.FC = () => {\r\n    const { uid } = useParams()\r\n\r\n    const signedUser = useAppSelector(user => user.user.user)\r\n    const anotherUser = useAppSelector(user => user.anotherUser.user)\r\n    const location = useLocation()\r\n    const { email, profileImage, userName, followers, following, posts, fullName } = useAppSelector(state => state.anotherUser.user)\r\n    const { followPerson } = useFollow()\r\n    const signedUserSubsribed = anotherUser.followers.find(user => user.uid === signedUser.uid)\r\n    const [visible, setVisible] = useState(false)\r\n    const { chatWithUser } = useChat()\r\n    const navigate = useNavigate()\r\n    const createChat = () => {\r\n        chatWithUser(anotherUser)\r\n        navigate('/direct')\r\n\r\n    }\r\n    return (\r\n        <div className='sm:flex bg-gray-50 w-[100%] h-[100vh] sm:w-[90%] md:w-[80%]'>\r\n            <div className=' w-[100%] p-4  xl:mx-[20%]'>\r\n                <div className='flex  justify-center'>\r\n                    <div className='mr-8 h-32 w-32 sm:h-40 sm:w-40'>\r\n                        <img className=' rounded-full object-cover  w-[100px] h-[100px]  sm:h-40 sm:w-40    cursor-pointer border-[1px]'\r\n                            src={profileImage ? profileImage : process.env.PUBLIC_URL +`/images/profile.png`} alt=\"\" />\r\n                    </div>\r\n                    <div>\r\n                        <div className='sm:flex-row justify-between w-[50%] sm:w-[100%]  flex flex-col  text-center '>\r\n                            <h1 className='text-2xl font-[300]'>{userName}</h1>\r\n                            {signedUserSubsribed ?\r\n                                <button\r\n                                    onClick={() => setVisible(true)}\r\n                                    className='ml-4 bg-zinc-200 p-1 px-3 rounded-md mb-2 '>\r\n                                    Following\r\n                                </button>\r\n                                :\r\n                                <button\r\n                                    onClick={() => followPerson(anotherUser)}\r\n                                    className='ml-4  p-1 px-6 rounded-md text-white  bg-blue-500  mb-2'>\r\n                                    Follow\r\n                                </button>\r\n                            }\r\n                            <ReusableModal visible={visible} setVisible={setVisible}>\r\n                                <ModalFollowing profileImage={anotherUser.profileImage}\r\n                                    setVisible={setVisible} uid={uid as string} />\r\n                            </ReusableModal>\r\n                            <button className='ml-4 bg-zinc-200 p-1 px-3 rounded-md mb-2 ' onClick={createChat}>Message</button>\r\n\r\n                        </div>\r\n                        <div className='flex  mt-4 mr-12 '>\r\n                            <h1 className='mr-8'>{posts.length} posts</h1>\r\n                            <Link\r\n                                to={`/${uid}/followers`}\r\n                                state={{ background: location }}>\r\n                                <h1 className='mr-8 cursor-pointer'>{followers.length} followers</h1>\r\n                            </Link>\r\n                            <Link\r\n                                to={`/${uid}/following`}\r\n                                state={{ background: location }}>\r\n                                <h1 className='mr-8 cursor-pointer'>{following.length} following</h1>\r\n                            </Link>\r\n                        </div>\r\n                        <div className='flex flex-col mt-4 mr-[275px]'>\r\n                            <h1 className='font-bold'>{fullName}</h1>\r\n                            <p>About me</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className='mt-12 border-t-2 flex justify-center'>\r\n                    <button className='mr-10 mt-2 text-[15px] flex items-center'><i className=\"ri-grid-line mr-1\"></i>POSTS</button>\r\n                    <button className='ml-10 mt-2 text-[15px] flex items-center'><i className=\"ri-price-tag-3-line mr-1\"></i>TAGGED</button>\r\n                </div>\r\n                <Posts />\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default AnotherUser","import React, { useState } from 'react'\r\nimport { IUserState } from '../../../interfaces/interfaces'\r\nimport { Link } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { auth } from '../../../firebase/firebase';\r\nimport PagesRoutes from '../../../constants/router-types';\r\nimport { Navigate } from 'react-router-dom';\r\ninterface ParentStateItem {\r\n\r\n\r\n  postImage: string;\r\n  postId: string;\r\n  user: string;\r\n}\r\n\r\ninterface ParentState {\r\n  posts: ParentStateItem;\r\n}\r\n\r\nexport const Post: React.FC<ParentStateItem> = ({ postImage, postId, user }) => {\r\n\r\n\r\n  const [visible, setVisible] = useState(false)\r\n  const location = useLocation()\r\n\r\n  return auth ? (\r\n    <div className=' bg-black flex items-center justify-center mt-9 w-[90%] m-auto '>\r\n      <Link to={`/${user}/${postId}`} state={{ background: location }}>\r\n        <div className=' bg-black w-full sm:h-[250px] h-[100px] flex items-center justify-center '>\r\n          <img          \r\n            onClick={() => setVisible(true)}\r\n            className='hover:opacity-50 h-full w-full object-cover  '\r\n            src={postImage}\r\n            alt=\"post\" />\r\n        </div>\r\n      </Link>\r\n\r\n\r\n    </div>\r\n  )\r\n    : (\r\n      <Navigate to={PagesRoutes.SIGN_IN} />\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { db } from '../../../firebase/firebase'\r\nimport { doc } from 'firebase/firestore'\r\nimport { getDoc } from 'firebase/firestore'\r\nimport { Post } from './Post'\r\n\r\nexport const Posts = () => {\r\n\r\n    const { uid } = useParams()\r\n\r\n    const [post, setPost] = useState<any[]>()\r\n\r\n\r\n    const postImage = post?.map(post => (\r\n        <Post postImage={post.postImage} postId={post.postId} user={post.user} />\r\n    ))\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchData = async () => {\r\n            const docRef = doc(db, \"users\", uid as string)\r\n            const docSnap = await getDoc(docRef);\r\n\r\n            setPost(docSnap.data()?.posts)\r\n\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <div className=' grid grid-cols-3 gap-6  mt-2  '> {postImage?.reverse()} </div>\r\n    )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../redux/hooks/redux-hooks\";\r\nimport { setUser } from \"../../../redux/slices/userSlice/userSlice/userSlice\";\r\nimport { setAnotherUser } from \"../../../redux/slices/userSlice/anotherUserSlice/anotherUserSlice\";\r\nimport { doc, getDoc, getDocs, serverTimestamp, setDoc, updateDoc } from \"firebase/firestore\";\r\nimport { db } from \"../../../firebase/firebase\";\r\nimport { updateDo } from \"typescript\";\r\n\r\n\r\ntype userToChat = {\r\n    profileImage: string,\r\n    userName: string,\r\n    uid: string\r\n}\r\n\r\n\r\nconst useChat = () => {\r\n    const signedUser = useAppSelector(user => user.user.user)\r\n\r\n\r\n\r\n    const chatWithUser = async ({ uid, userName, profileImage }: userToChat) => {\r\n        const combineId = signedUser.uid > uid ? signedUser.uid + uid : uid + signedUser.uid\r\n        const anotherInChat = {\r\n            uid: uid,\r\n            userName: userName,\r\n            profileImage: profileImage,\r\n        }\r\n\r\n        const signedInChat = {\r\n            uid: signedUser.uid,\r\n            userName: signedUser.userName,\r\n            profileImage: signedUser.profileImage,\r\n        }\r\n\r\n\r\n\r\n        const docUsers = doc(db, \"chat\", combineId);\r\n        const docSnap = await getDoc(docUsers);\r\n        if (!docSnap.exists()) {\r\n\r\n        await setDoc(doc(db,'chat',combineId),{message : []})\r\n        \r\n        await updateDoc(doc(db,'chats',signedUser.uid),{\r\n            [combineId + '.userInfo'] : anotherInChat,\r\n            [combineId + '.date'] : serverTimestamp()\r\n        })\r\n\r\n        \r\n        await updateDoc(doc(db,'chats',uid),{\r\n            [combineId + '.userInfo'] : signedInChat,\r\n            [combineId + '.date'] : serverTimestamp()\r\n        })\r\n\r\n        \r\n            \r\n\r\n           \r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    return { chatWithUser }\r\n}\r\n\r\nexport default useChat\r\n\r\n"],"names":["ReusableModal","visible","setVisible","children","className","onClick","e","stopPropagation","memo","anotherUser","useAppSelector","user","signedUser","dispatch","useAppDispatch","followPerson","userName","fullName","profileImage","uid","console","log","anotherUserIsFollowing","following","find","setUser","setAnotherUser","followers","updateDoc","doc","db","unFollowPerson","filteredFollowers","filter","follower","filteredFollowing","person","useFollow","src","alt","useParams","location","useLocation","state","email","posts","signedUserSubsribed","useState","chatWithUser","useChat","navigate","useNavigate","process","length","to","background","Posts","Post","postImage","postId","auth","PagesRoutes","post","setPost","map","useEffect","fetchData","docRef","getDoc","docSnap","data","reverse","combineId","anotherInChat","signedInChat","docUsers","exists","setDoc","message","serverTimestamp"],"sourceRoot":""}